{
	"info": {
		"_postman_id": "708102aa-7522-4364-8073-d3038090c842",
		"name": "Sourcegraph GraphQL Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "mutations",
			"item": [
				{
					"name": "updateUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUser ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first13: Int, $eventName2: String, $first14: Int, $first15: Int, $precise2: Boolean, $first16: Int, $query5: String, $after3: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $first17: Int, $eventName3: String, $first18: Int, $eventName4: String, $first19: Int, $first20: Int, $precise3: Boolean, $first21: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev1: String!, $inputRevspec1: String, $first22: Int, $first23: Int, $query7: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first24: Int, $query8: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first25: Int, $query9: String, $revisionRange1: String, $after5: String, $path1: String, $first26: Int, $first27: Int, $eventName5: String, $first28: Int, $first29: Int, $precise4: Boolean, $first30: Int, $query10: String, $after6: String, $cloned4: Boolean, $notCloned4: Boolean, $indexed4: Boolean, $notIndexed4: Boolean, $externalServiceID4: ID, $first31: Int, $eventName6: String, $first32: Int, $first33: Int, $precise5: Boolean, $first34: Int, $query11: String, $after7: String, $cloned5: Boolean, $notCloned5: Boolean, $indexed5: Boolean, $notIndexed5: Boolean, $externalServiceID5: ID, $first35: Int, $first36: Int, $eventName7: String, $first37: Int, $first38: Int, $precise6: Boolean, $first39: Int, $query12: String, $after8: String, $cloned6: Boolean, $notCloned6: Boolean, $indexed6: Boolean, $notIndexed6: Boolean, $externalServiceID6: ID, $first40: Int, $first41: Int, $eventName8: String, $first42: Int, $first43: Int, $precise7: Boolean, $first44: Int, $query13: String, $after9: String, $cloned7: Boolean, $notCloned7: Boolean, $indexed7: Boolean, $notIndexed7: Boolean, $externalServiceID7: ID, $rev2: String!, $inputRevspec2: String, $first45: Int, $first46: Int, $query14: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first47: Int, $query15: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first48: Int, $query16: String, $revisionRange2: String, $after10: String, $path2: String, $first49: Int, $first50: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path3: String, $recursive1: Boolean, $first51: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path4: String!, $path5: String!, $first52: Int, $query17: String, $path6: String, $after11: String, $revspec: String!, $rev3: String!, $inputRevspec3: String, $first53: Int, $first54: Int, $query18: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first55: Int, $query19: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first56: Int, $query20: String, $first57: Int, $first58: Int, $after12: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange3: String, $after13: String, $path7: String, $first59: Int, $precise8: Boolean, $first60: Int, $query21: String, $after14: String, $cloned8: Boolean, $notCloned8: Boolean, $indexed8: Boolean, $notIndexed8: Boolean, $externalServiceID8: ID, $rev4: String!, $inputRevspec4: String, $first61: Int, $first62: Int, $query22: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first63: Int, $query23: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first64: Int, $query24: String, $revisionRange4: String, $after15: String, $path8: String, $first65: Int, $first66: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $path9: String, $recursive4: Boolean, $first67: Int, $recursive5: Boolean, $recursiveSingleChild3: Boolean, $path10: String!, $path11: String!, $first68: Int, $query25: String, $path12: String, $after16: String, $revspec1: String!, $first69: Int, $recursive6: Boolean, $recursiveSingleChild4: Boolean, $first70: Int, $recursive7: Boolean, $first71: Int, $recursive8: Boolean, $first72: Int, $recursive9: Boolean, $recursiveSingleChild5: Boolean, $first73: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $first74: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path13: String, $recursive12: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first75: Int, $recursive13: Boolean, $recursiveSingleChild8: Boolean, $path14: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path15: String!, $first76: Int, $query26: String, $path16: String, $after17: String, $revspec2: String!, $first77: Int, $query27: String, $includePatterns: [String!], $rev5: String!, $inputRevspec5: String, $first78: Int, $rev6: String!, $inputRevspec6: String, $first79: Int, $first80: Int, $query28: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first81: Int, $query29: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first82: Int, $query30: String, $revisionRange5: String, $after18: String, $path17: String, $first83: Int, $rev7: String!, $inputRevspec7: String, $first84: Int, $first85: Int, $query31: String, $type6: GitRefType, $orderBy12: GitRefOrder, $interactive12: Boolean, $first86: Int, $query32: String, $orderBy13: GitRefOrder, $interactive13: Boolean, $first87: Int, $query33: String, $revisionRange6: String, $after19: String, $path18: String, $first88: Int, $first89: Int, $query34: String, $type7: GitRefType, $orderBy14: GitRefOrder, $interactive14: Boolean, $first90: Int, $query35: String, $orderBy15: GitRefOrder, $interactive15: Boolean, $first91: Int, $query36: String, $rev8: String!, $inputRevspec8: String, $first92: Int, $first93: Int, $query37: String, $type8: GitRefType, $orderBy16: GitRefOrder, $interactive16: Boolean, $first94: Int, $query38: String, $orderBy17: GitRefOrder, $interactive17: Boolean, $first95: Int, $query39: String, $revisionRange7: String, $after20: String, $path19: String, $first96: Int, $rev9: String!, $inputRevspec9: String, $first97: Int, $first98: Int, $query40: String, $type9: GitRefType, $orderBy18: GitRefOrder, $interactive18: Boolean, $first99: Int, $query41: String, $orderBy19: GitRefOrder, $interactive19: Boolean, $first100: Int, $query42: String, $revisionRange8: String, $after21: String, $path20: String, $first101: Int, $first102: Int, $first103: Int, $after22: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $first104: Int, $revisionRange9: String, $after23: String, $path21: String, $first105: Int, $user: ID!, $username: String, $displayName: String, $avatarURL: String) {\n    updateUser (user: $user, username: $username, displayName: $displayName, avatarURL: $avatarURL) {\n        id\n        username\n        email\n        displayName\n        avatarURL\n        url\n        settingsURL\n        createdAt\n        updatedAt\n        siteAdmin\n        builtinAuth\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        organizations {\n            nodes {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            totalCount\n        }\n        organizationMemberships {\n            nodes {\n                organization {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first9, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first10) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first11) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                updatedAt\n            }\n            totalCount\n        }\n        tags\n        usageStatistics {\n            searchQueries\n            pageViews\n            codeIntelligenceActions\n            findReferencesActions\n            lastActiveTime\n            lastActiveCodeHostIntegrationTime\n        }\n        eventLogs (first: $first17, eventName: $eventName3) {\n            nodes {\n                name\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first13, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first14) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first15) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first16, query: $query5, after: $after3, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                anonymousUserID\n                url\n                source\n                argument\n                version\n                timestamp\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        emails {\n            email\n            isPrimary\n            verified\n            verificationPending\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first18, eventName: $eventName4) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first19) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first20) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first21, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first22) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first23, query: $query7, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first24, query: $query8, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first25, query: $query9) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after5, path: $path1, first: $first26) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            viewerCanManuallyVerify\n        }\n        accessTokens (first: $first35) {\n            nodes {\n                id\n                subject {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first27, eventName: $eventName5) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first28) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first29) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first30, query: $query10, after: $after6, cloned: $cloned4, notCloned: $notCloned4, indexed: $indexed4, notIndexed: $notIndexed4, externalServiceID: $externalServiceID4) {\n                        totalCount (precise: $precise4)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                scopes\n                note\n                creator {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first31, eventName: $eventName6) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first32) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first33) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first34, query: $query11, after: $after7, cloned: $cloned5, notCloned: $notCloned5, indexed: $indexed5, notIndexed: $notIndexed5, externalServiceID: $externalServiceID5) {\n                        totalCount (precise: $precise5)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                lastUsedAt\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        externalAccounts (first: $first40) {\n            nodes {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first36, eventName: $eventName7) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first37) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first38) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first39, query: $query12, after: $after8, cloned: $cloned6, notCloned: $notCloned6, indexed: $indexed6, notIndexed: $notIndexed6, externalServiceID: $externalServiceID6) {\n                        totalCount (precise: $precise6)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                serviceType\n                serviceID\n                clientID\n                accountID\n                createdAt\n                updatedAt\n                refreshURL\n                accountData\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        session {\n            canSignOut\n        }\n        viewerCanAdminister\n        viewerCanChangeUsername\n        surveyResponses {\n            id\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first41, eventName: $eventName8) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first42) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first43) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first44, query: $query13, after: $after9, cloned: $cloned7, notCloned: $notCloned7, indexed: $indexed7, notIndexed: $notIndexed7, externalServiceID: $externalServiceID7) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise7)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first45) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first46, query: $query14, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first47, query: $query15, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first48, query: $query16) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after10, path: $path2, first: $first49) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            email\n            score\n            reason\n            better\n            createdAt\n        }\n        databaseID\n        namespaceName\n        repositories (first: $first60, query: $query21, after: $after14, cloned: $cloned8, notCloned: $notCloned8, indexed: $indexed8, notIndexed: $notIndexed8, externalServiceID: $externalServiceID8) {\n            nodes {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path3, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first50, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path4) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first51, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path5) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first52, query: $query17, path: $path6, after: $after11) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first53) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first54, query: $query18, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first55, query: $query19, orderBy: $orderBy7, interactive: $interactive7) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first56, query: $query20) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first57) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first58, after: $after12) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange3, after: $after13, path: $path7, first: $first59) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            totalCount (precise: $precise8)\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        publicRepositories {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first61) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first62, query: $query22, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first63, query: $query23, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first64, query: $query24) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after15, path: $path8, first: $first65) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first66, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    fileNames\n                    blob (path: $path10) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first67, recursive: $recursive5, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    file (path: $path11) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first68, query: $query25, path: $path12, after: $after16) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec1) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path13, recursive: $recursive12) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first70, recursive: $recursive7) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first69, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild4)\n                    }\n                    files (first: $first71, recursive: $recursive8) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first73, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first72, recursive: $recursive9, recursiveSingleChild: $recursiveSingleChild5)\n                    }\n                    isSingleChild (first: $first74, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                }\n                fileNames\n                blob (path: $path14) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first75, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild8)\n                }\n                file (path: $path15) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first76, query: $query26, path: $path16, after: $after17) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec2) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first77, query: $query27, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first78) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first79) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first80, query: $query28, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first81, query: $query29, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first82, query: $query30) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange5, after: $after18, path: $path17, first: $first83) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first84) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first85, query: $query31, type: $type6, orderBy: $orderBy12, interactive: $interactive12) {\n                        totalCount\n                    }\n                    branches (first: $first86, query: $query32, orderBy: $orderBy13, interactive: $interactive13) {\n                        totalCount\n                    }\n                    tags (first: $first87, query: $query33) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after19, path: $path18, first: $first88) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first89, query: $query34, type: $type7, orderBy: $orderBy14, interactive: $interactive14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first90, query: $query35, orderBy: $orderBy15, interactive: $interactive15) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first91, query: $query36) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first92) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first93, query: $query37, type: $type8, orderBy: $orderBy16, interactive: $interactive16) {\n                        totalCount\n                    }\n                    branches (first: $first94, query: $query38, orderBy: $orderBy17, interactive: $interactive17) {\n                        totalCount\n                    }\n                    tags (first: $first95, query: $query39) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after20, path: $path19, first: $first96) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev9, inputRevspec: $inputRevspec9) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first97) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first98, query: $query40, type: $type9, orderBy: $orderBy18, interactive: $interactive18) {\n                        totalCount\n                    }\n                    branches (first: $first99, query: $query41, orderBy: $orderBy19, interactive: $interactive19) {\n                        totalCount\n                    }\n                    tags (first: $first100, query: $query42) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after21, path: $path20, first: $first101) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first102) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first103, after: $after22) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange9, after: $after23, path: $path21, first: $first105) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first104) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first13\": 0,\n  \"eventName2\": \"\",\n  \"first14\": 0,\n  \"first15\": 0,\n  \"precise2\": true,\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"after3\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"first17\": 0,\n  \"eventName3\": \"\",\n  \"first18\": 0,\n  \"eventName4\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise3\": true,\n  \"first21\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first22\": 0,\n  \"first23\": 0,\n  \"query7\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first24\": 0,\n  \"query8\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first25\": 0,\n  \"query9\": \"\",\n  \"revisionRange1\": \"\",\n  \"after5\": \"\",\n  \"path1\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"eventName5\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"precise4\": true,\n  \"first30\": 0,\n  \"query10\": \"\",\n  \"after6\": \"\",\n  \"cloned4\": true,\n  \"notCloned4\": true,\n  \"indexed4\": true,\n  \"notIndexed4\": true,\n  \"externalServiceID4\": 0,\n  \"first31\": 0,\n  \"eventName6\": \"\",\n  \"first32\": 0,\n  \"first33\": 0,\n  \"precise5\": true,\n  \"first34\": 0,\n  \"query11\": \"\",\n  \"after7\": \"\",\n  \"cloned5\": true,\n  \"notCloned5\": true,\n  \"indexed5\": true,\n  \"notIndexed5\": true,\n  \"externalServiceID5\": 0,\n  \"first35\": 0,\n  \"first36\": 0,\n  \"eventName7\": \"\",\n  \"first37\": 0,\n  \"first38\": 0,\n  \"precise6\": true,\n  \"first39\": 0,\n  \"query12\": \"\",\n  \"after8\": \"\",\n  \"cloned6\": true,\n  \"notCloned6\": true,\n  \"indexed6\": true,\n  \"notIndexed6\": true,\n  \"externalServiceID6\": 0,\n  \"first40\": 0,\n  \"first41\": 0,\n  \"eventName8\": \"\",\n  \"first42\": 0,\n  \"first43\": 0,\n  \"precise7\": true,\n  \"first44\": 0,\n  \"query13\": \"\",\n  \"after9\": \"\",\n  \"cloned7\": true,\n  \"notCloned7\": true,\n  \"indexed7\": true,\n  \"notIndexed7\": true,\n  \"externalServiceID7\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first45\": 0,\n  \"first46\": 0,\n  \"query14\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first47\": 0,\n  \"query15\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first48\": 0,\n  \"query16\": \"\",\n  \"revisionRange2\": \"\",\n  \"after10\": \"\",\n  \"path2\": \"\",\n  \"first49\": 0,\n  \"first50\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path3\": \"\",\n  \"recursive1\": true,\n  \"first51\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path4\": \"\",\n  \"path5\": \"\",\n  \"first52\": 0,\n  \"query17\": \"\",\n  \"path6\": \"\",\n  \"after11\": \"\",\n  \"revspec\": \"\",\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first53\": 0,\n  \"first54\": 0,\n  \"query18\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first55\": 0,\n  \"query19\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first56\": 0,\n  \"query20\": \"\",\n  \"first57\": 0,\n  \"first58\": 0,\n  \"after12\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange3\": \"\",\n  \"after13\": \"\",\n  \"path7\": \"\",\n  \"first59\": 0,\n  \"precise8\": true,\n  \"first60\": 0,\n  \"query21\": \"\",\n  \"after14\": \"\",\n  \"cloned8\": true,\n  \"notCloned8\": true,\n  \"indexed8\": true,\n  \"notIndexed8\": true,\n  \"externalServiceID8\": 0,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first61\": 0,\n  \"first62\": 0,\n  \"query22\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first63\": 0,\n  \"query23\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first64\": 0,\n  \"query24\": \"\",\n  \"revisionRange4\": \"\",\n  \"after15\": \"\",\n  \"path8\": \"\",\n  \"first65\": 0,\n  \"first66\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"path9\": \"\",\n  \"recursive4\": true,\n  \"first67\": 0,\n  \"recursive5\": true,\n  \"recursiveSingleChild3\": true,\n  \"path10\": \"\",\n  \"path11\": \"\",\n  \"first68\": 0,\n  \"query25\": \"\",\n  \"path12\": \"\",\n  \"after16\": \"\",\n  \"revspec1\": \"\",\n  \"first69\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild4\": true,\n  \"first70\": 0,\n  \"recursive7\": true,\n  \"first71\": 0,\n  \"recursive8\": true,\n  \"first72\": 0,\n  \"recursive9\": true,\n  \"recursiveSingleChild5\": true,\n  \"first73\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"first74\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path13\": \"\",\n  \"recursive12\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first75\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild8\": true,\n  \"path14\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path15\": \"\",\n  \"first76\": 0,\n  \"query26\": \"\",\n  \"path16\": \"\",\n  \"after17\": \"\",\n  \"revspec2\": \"\",\n  \"first77\": 0,\n  \"query27\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first78\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first79\": 0,\n  \"first80\": 0,\n  \"query28\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first81\": 0,\n  \"query29\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first82\": 0,\n  \"query30\": \"\",\n  \"revisionRange5\": \"\",\n  \"after18\": \"\",\n  \"path17\": \"\",\n  \"first83\": 0,\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first84\": 0,\n  \"first85\": 0,\n  \"query31\": \"\",\n  \"type6\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first86\": 0,\n  \"query32\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"first87\": 0,\n  \"query33\": \"\",\n  \"revisionRange6\": \"\",\n  \"after19\": \"\",\n  \"path18\": \"\",\n  \"first88\": 0,\n  \"first89\": 0,\n  \"query34\": \"\",\n  \"type7\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive14\": true,\n  \"first90\": 0,\n  \"query35\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive15\": true,\n  \"first91\": 0,\n  \"query36\": \"\",\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first92\": 0,\n  \"first93\": 0,\n  \"query37\": \"\",\n  \"type8\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive16\": true,\n  \"first94\": 0,\n  \"query38\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive17\": true,\n  \"first95\": 0,\n  \"query39\": \"\",\n  \"revisionRange7\": \"\",\n  \"after20\": \"\",\n  \"path19\": \"\",\n  \"first96\": 0,\n  \"rev9\": \"\",\n  \"inputRevspec9\": \"\",\n  \"first97\": 0,\n  \"first98\": 0,\n  \"query40\": \"\",\n  \"type9\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive18\": true,\n  \"first99\": 0,\n  \"query41\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive19\": true,\n  \"first100\": 0,\n  \"query42\": \"\",\n  \"revisionRange8\": \"\",\n  \"after21\": \"\",\n  \"path20\": \"\",\n  \"first101\": 0,\n  \"first102\": 0,\n  \"first103\": 0,\n  \"after22\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"first104\": 0,\n  \"revisionRange9\": \"\",\n  \"after23\": \"\",\n  \"path21\": \"\",\n  \"first105\": 0,\n  \"user\": 0,\n  \"username\": \"\",\n  \"displayName\": \"\",\n  \"avatarURL\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $rev1: String!, $inputRevspec1: String, $first13: Int, $first14: Int, $query5: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first15: Int, $query6: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first16: Int, $query7: String, $revisionRange1: String, $after3: String, $path1: String, $first17: Int, $first18: Int, $eventName2: String, $first19: Int, $first20: Int, $precise2: Boolean, $first21: Int, $query8: String, $after4: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev2: String!, $inputRevspec2: String, $first22: Int, $first23: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first24: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first25: Int, $query11: String, $revisionRange2: String, $after5: String, $path2: String, $first26: Int, $first27: Int, $eventName3: String, $first28: Int, $first29: Int, $precise3: Boolean, $first30: Int, $query12: String, $after6: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev3: String!, $inputRevspec3: String, $first31: Int, $first32: Int, $query13: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first33: Int, $query14: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first34: Int, $query15: String, $revisionRange3: String, $after7: String, $path3: String, $first35: Int, $name: String!, $displayName: String) {\n    createOrganization (name: $name, displayName: $displayName) {\n        id\n        name\n        displayName\n        createdAt\n        members {\n            nodes {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first9, eventName: $eventName1) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first10) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first11) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise1)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first13) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first14, query: $query5, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first15, query: $query6, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first16, query: $query7) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path1, first: $first17) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        viewerPendingInvitation {\n            id\n            organization {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            sender {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first18, eventName: $eventName2) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first19) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first20) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first21, query: $query8, after: $after4, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise2)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first22) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first23, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first24, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first25, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after5, path: $path2, first: $first26) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            recipient {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first27, eventName: $eventName3) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first28) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first29) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first30, query: $query12, after: $after6, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query13, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query14, orderBy: $orderBy7, interactive: $interactive7) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query15) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after7, path: $path3, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            notifiedAt\n            respondedAt\n            responseType\n            respondURL\n            revokedAt\n        }\n        viewerCanAdminister\n        viewerIsMember\n        url\n        settingsURL\n        namespaceName\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first13\": 0,\n  \"first14\": 0,\n  \"query5\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first15\": 0,\n  \"query6\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first16\": 0,\n  \"query7\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path1\": \"\",\n  \"first17\": 0,\n  \"first18\": 0,\n  \"eventName2\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise2\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"after4\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first22\": 0,\n  \"first23\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first24\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first25\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after5\": \"\",\n  \"path2\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"eventName3\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"precise3\": true,\n  \"first30\": 0,\n  \"query12\": \"\",\n  \"after6\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query13\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first33\": 0,\n  \"query14\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first34\": 0,\n  \"query15\": \"\",\n  \"revisionRange3\": \"\",\n  \"after7\": \"\",\n  \"path3\": \"\",\n  \"first35\": 0,\n  \"name\": \"\",\n  \"displayName\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateOrganization ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $rev1: String!, $inputRevspec1: String, $first13: Int, $first14: Int, $query5: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first15: Int, $query6: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first16: Int, $query7: String, $revisionRange1: String, $after3: String, $path1: String, $first17: Int, $first18: Int, $eventName2: String, $first19: Int, $first20: Int, $precise2: Boolean, $first21: Int, $query8: String, $after4: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev2: String!, $inputRevspec2: String, $first22: Int, $first23: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first24: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first25: Int, $query11: String, $revisionRange2: String, $after5: String, $path2: String, $first26: Int, $first27: Int, $eventName3: String, $first28: Int, $first29: Int, $precise3: Boolean, $first30: Int, $query12: String, $after6: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev3: String!, $inputRevspec3: String, $first31: Int, $first32: Int, $query13: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first33: Int, $query14: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first34: Int, $query15: String, $revisionRange3: String, $after7: String, $path3: String, $first35: Int, $id: ID!, $displayName: String) {\n    updateOrganization (id: $id, displayName: $displayName) {\n        id\n        name\n        displayName\n        createdAt\n        members {\n            nodes {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first9, eventName: $eventName1) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first10) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first11) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise1)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first13) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first14, query: $query5, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first15, query: $query6, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first16, query: $query7) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path1, first: $first17) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        viewerPendingInvitation {\n            id\n            organization {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            sender {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first18, eventName: $eventName2) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first19) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first20) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first21, query: $query8, after: $after4, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise2)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first22) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first23, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first24, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first25, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after5, path: $path2, first: $first26) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            recipient {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first27, eventName: $eventName3) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first28) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first29) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first30, query: $query12, after: $after6, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query13, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query14, orderBy: $orderBy7, interactive: $interactive7) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query15) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after7, path: $path3, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            notifiedAt\n            respondedAt\n            responseType\n            respondURL\n            revokedAt\n        }\n        viewerCanAdminister\n        viewerIsMember\n        url\n        settingsURL\n        namespaceName\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first13\": 0,\n  \"first14\": 0,\n  \"query5\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first15\": 0,\n  \"query6\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first16\": 0,\n  \"query7\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path1\": \"\",\n  \"first17\": 0,\n  \"first18\": 0,\n  \"eventName2\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise2\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"after4\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first22\": 0,\n  \"first23\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first24\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first25\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after5\": \"\",\n  \"path2\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"eventName3\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"precise3\": true,\n  \"first30\": 0,\n  \"query12\": \"\",\n  \"after6\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query13\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first33\": 0,\n  \"query14\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first34\": 0,\n  \"query15\": \"\",\n  \"revisionRange3\": \"\",\n  \"after7\": \"\",\n  \"path3\": \"\",\n  \"first35\": 0,\n  \"id\": 0,\n  \"displayName\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteOrganization ($organization: ID!) {\n    deleteOrganization (organization: $organization) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"organization\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addExternalService",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addExternalService ($input: AddExternalServiceInput!) {\n    addExternalService (input: $input) {\n        id\n        kind\n        displayName\n        config\n        createdAt\n        updatedAt\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        repoCount\n        webhookURL\n        warning\n        lastSyncError\n        lastSyncAt\n        nextSyncAt\n        grantedScopes\n    }\n}",
								"variables": "{\n  \"input\": {\n    \"kind\": \"\",\n    \"displayName\": \"\",\n    \"config\": \"\",\n    \"namespace\": 0\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateExternalService",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateExternalService ($input: UpdateExternalServiceInput!) {\n    updateExternalService (input: $input) {\n        id\n        kind\n        displayName\n        config\n        createdAt\n        updatedAt\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        repoCount\n        webhookURL\n        warning\n        lastSyncError\n        lastSyncAt\n        nextSyncAt\n        grantedScopes\n    }\n}",
								"variables": "{\n  \"input\": {\n    \"id\": 0,\n    \"displayName\": \"\",\n    \"config\": \"\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteExternalService",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteExternalService ($externalService: ID!) {\n    deleteExternalService (externalService: $externalService) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"externalService\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkMirrorRepositoryConnection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation checkMirrorRepositoryConnection ($repository: ID, $name: String) {\n    checkMirrorRepositoryConnection (repository: $repository, name: $name) {\n        error\n    }\n}",
								"variables": "{\n  \"repository\": 0,\n  \"name\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMirrorRepository",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateMirrorRepository ($repository: ID!) {\n    updateMirrorRepository (repository: $repository) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"repository\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $first4: Int, $eventName1: String, $first5: Int, $eventName2: String, $first6: Int, $first7: Int, $precise1: Boolean, $first8: Int, $query1: String, $after1: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first9: Int, $first10: Int, $first11: Int, $eventName3: String, $first12: Int, $first13: Int, $precise2: Boolean, $first14: Int, $query2: String, $after2: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev: String!, $inputRevspec: String, $first15: Int, $first16: Int, $query3: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first17: Int, $query4: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first18: Int, $query5: String, $revisionRange: String, $after3: String, $path: String, $first19: Int, $precise3: Boolean, $first20: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $first21: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path1: String, $recursive1: Boolean, $first22: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path2: String!, $path3: String!, $first23: Int, $query7: String, $path4: String, $after5: String, $revspec: String!, $rev1: String!, $inputRevspec1: String, $first24: Int, $first25: Int, $query8: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first26: Int, $query9: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first27: Int, $query10: String, $first28: Int, $first29: Int, $after6: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange1: String, $after7: String, $path5: String, $first30: Int, $username: String!, $email: String) {\n    createUser (username: $username, email: $email) {\n        user {\n            id\n            username\n            email\n            displayName\n            avatarURL\n            url\n            settingsURL\n            createdAt\n            updatedAt\n            siteAdmin\n            builtinAuth\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            organizations {\n                nodes {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                totalCount\n            }\n            organizationMemberships {\n                nodes {\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    updatedAt\n                }\n                totalCount\n            }\n            tags\n            usageStatistics {\n                searchQueries\n                pageViews\n                codeIntelligenceActions\n                findReferencesActions\n                lastActiveTime\n                lastActiveCodeHostIntegrationTime\n            }\n            eventLogs (first: $first4, eventName: $eventName1) {\n                nodes {\n                    name\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    anonymousUserID\n                    url\n                    source\n                    argument\n                    version\n                    timestamp\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            emails {\n                email\n                isPrimary\n                verified\n                verificationPending\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first5, eventName: $eventName2) {\n                        totalCount\n                    }\n                    accessTokens (first: $first6) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first7) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first8, query: $query1, after: $after1, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                viewerCanManuallyVerify\n            }\n            accessTokens (first: $first9) {\n                nodes {\n                    id\n                    subject {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    scopes\n                    note\n                    creator {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    lastUsedAt\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            externalAccounts (first: $first10) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    serviceType\n                    serviceID\n                    clientID\n                    accountID\n                    createdAt\n                    updatedAt\n                    refreshURL\n                    accountData\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            session {\n                canSignOut\n            }\n            viewerCanAdminister\n            viewerCanChangeUsername\n            surveyResponses {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first11, eventName: $eventName3) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first12) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first13) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    databaseID\n                    namespaceName\n                    repositories (first: $first14, query: $query2, after: $after2, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                email\n                score\n                reason\n                better\n                createdAt\n            }\n            databaseID\n            namespaceName\n            repositories (first: $first20, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                nodes {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first15) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first16, query: $query3, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first17, query: $query4, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first18, query: $query5) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after3, path: $path, first: $first19) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                totalCount (precise: $precise3)\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            publicRepositories {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first21, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first22, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first23, query: $query7, path: $path4, after: $after5) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first24) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first25, query: $query8, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first26, query: $query9, orderBy: $orderBy3, interactive: $interactive3) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first27, query: $query10) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first28) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first29, after: $after6) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange1, after: $after7, path: $path5, first: $first30) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n        }\n        resetPasswordURL\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"first4\": 0,\n  \"eventName1\": \"\",\n  \"first5\": 0,\n  \"eventName2\": \"\",\n  \"first6\": 0,\n  \"first7\": 0,\n  \"precise1\": true,\n  \"first8\": 0,\n  \"query1\": \"\",\n  \"after1\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first9\": 0,\n  \"first10\": 0,\n  \"first11\": 0,\n  \"eventName3\": \"\",\n  \"first12\": 0,\n  \"first13\": 0,\n  \"precise2\": true,\n  \"first14\": 0,\n  \"query2\": \"\",\n  \"after2\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first15\": 0,\n  \"first16\": 0,\n  \"query3\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first17\": 0,\n  \"query4\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first18\": 0,\n  \"query5\": \"\",\n  \"revisionRange\": \"\",\n  \"after3\": \"\",\n  \"path\": \"\",\n  \"first19\": 0,\n  \"precise3\": true,\n  \"first20\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"first21\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path1\": \"\",\n  \"recursive1\": true,\n  \"first22\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first23\": 0,\n  \"query7\": \"\",\n  \"path4\": \"\",\n  \"after5\": \"\",\n  \"revspec\": \"\",\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first24\": 0,\n  \"first25\": 0,\n  \"query8\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first26\": 0,\n  \"query9\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first27\": 0,\n  \"query10\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"after6\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange1\": \"\",\n  \"after7\": \"\",\n  \"path5\": \"\",\n  \"first30\": 0,\n  \"username\": \"\",\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "randomizeUserPassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation randomizeUserPassword ($user: ID!) {\n    randomizeUserPassword (user: $user) {\n        resetPasswordURL\n    }\n}",
								"variables": "{\n  \"user\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addUserEmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addUserEmail ($user: ID!, $email: String!) {\n    addUserEmail (user: $user, email: $email) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeUserEmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeUserEmail ($user: ID!, $email: String!) {\n    removeUserEmail (user: $user, email: $email) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setUserEmailPrimary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setUserEmailPrimary ($user: ID!, $email: String!) {\n    setUserEmailPrimary (user: $user, email: $email) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setUserEmailVerified",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setUserEmailVerified ($user: ID!, $email: String!, $verified: Boolean!) {\n    setUserEmailVerified (user: $user, email: $email, verified: $verified) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"email\": \"\",\n  \"verified\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "resendVerificationEmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation resendVerificationEmail ($user: ID!, $email: String!) {\n    resendVerificationEmail (user: $user, email: $email) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUser ($user: ID!, $hard: Boolean) {\n    deleteUser (user: $user, hard: $hard) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"hard\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatePassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePassword ($oldPassword: String!, $newPassword: String!) {\n    updatePassword (oldPassword: $oldPassword, newPassword: $newPassword) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"oldPassword\": \"\",\n  \"newPassword\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createPassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPassword ($newPassword: String!) {\n    createPassword (newPassword: $newPassword) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"newPassword\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAccessToken",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createAccessToken ($user: ID!, $scopes: [String!]!, $note: String!) {\n    createAccessToken (user: $user, scopes: $scopes, note: $note) {\n        id\n        token\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"scopes\": [\n    \"\"\n  ],\n  \"note\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAccessToken",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteAccessToken ($byID: ID, $byToken: String) {\n    deleteAccessToken (byID: $byID, byToken: $byToken) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"byID\": 0,\n  \"byToken\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteExternalAccount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteExternalAccount ($externalAccount: ID!) {\n    deleteExternalAccount (externalAccount: $externalAccount) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"externalAccount\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "inviteUserToOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation inviteUserToOrganization ($organization: ID!, $username: String!) {\n    inviteUserToOrganization (organization: $organization, username: $username) {\n        sentInvitationEmail\n        invitationURL\n    }\n}",
								"variables": "{\n  \"organization\": 0,\n  \"username\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "respondToOrganizationInvitation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation respondToOrganizationInvitation ($organizationInvitation: ID!, $responseType: OrganizationInvitationResponseType!) {\n    respondToOrganizationInvitation (organizationInvitation: $organizationInvitation, responseType: $responseType) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"organizationInvitation\": 0,\n  \"responseType\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "resendOrganizationInvitationNotification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation resendOrganizationInvitationNotification ($organizationInvitation: ID!) {\n    resendOrganizationInvitationNotification (organizationInvitation: $organizationInvitation) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"organizationInvitation\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "revokeOrganizationInvitation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation revokeOrganizationInvitation ($organizationInvitation: ID!) {\n    revokeOrganizationInvitation (organizationInvitation: $organizationInvitation) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"organizationInvitation\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addUserToOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addUserToOrganization ($organization: ID!, $username: String!) {\n    addUserToOrganization (organization: $organization, username: $username) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"organization\": 0,\n  \"username\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeUserFromOrganization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeUserFromOrganization ($user: ID!, $organization: ID!) {\n    removeUserFromOrganization (user: $user, organization: $organization) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"organization\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setTag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setTag ($node: ID!, $tag: String!, $present: Boolean!) {\n    setTag (node: $node, tag: $tag, present: $present) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"node\": 0,\n  \"tag\": \"\",\n  \"present\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addPhabricatorRepo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addPhabricatorRepo ($callsign: String!, $name: String, $uri: String, $url: String!) {\n    addPhabricatorRepo (callsign: $callsign, name: $name, uri: $uri, url: $url) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"callsign\": \"\",\n  \"name\": \"\",\n  \"uri\": \"\",\n  \"url\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "resolvePhabricatorDiff",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation resolvePhabricatorDiff ($first: Int, $first1: Int, $query: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first2: Int, $query1: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first3: Int, $query2: String, $revisionRange: String, $after: String, $path: String, $first4: Int, $first5: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path1: String, $recursive1: Boolean, $first6: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path2: String!, $path3: String!, $first7: Int, $query3: String, $path4: String, $after1: String, $revspec: String!, $first8: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $first9: Int, $recursive4: Boolean, $first10: Int, $recursive5: Boolean, $first11: Int, $recursive6: Boolean, $recursiveSingleChild3: Boolean, $first12: Int, $recursive7: Boolean, $recursiveSingleChild4: Boolean, $first13: Int, $recursive8: Boolean, $recursiveSingleChild5: Boolean, $path5: String, $recursive9: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first14: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $path6: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path7: String!, $first15: Int, $query4: String, $path8: String, $after2: String, $revspec1: String!, $first16: Int, $query5: String, $includePatterns: [String!], $rev: String!, $inputRevspec: String, $first17: Int, $rev1: String!, $inputRevspec1: String, $first18: Int, $first19: Int, $query6: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first20: Int, $query7: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first21: Int, $query8: String, $revisionRange1: String, $after3: String, $path9: String, $first22: Int, $rev2: String!, $inputRevspec2: String, $first23: Int, $first24: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first25: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first26: Int, $query11: String, $revisionRange2: String, $after4: String, $path10: String, $first27: Int, $first28: Int, $query12: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first29: Int, $query13: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first30: Int, $query14: String, $rev3: String!, $inputRevspec3: String, $first31: Int, $first32: Int, $query15: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first33: Int, $query16: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first34: Int, $query17: String, $revisionRange3: String, $after5: String, $path11: String, $first35: Int, $rev4: String!, $inputRevspec4: String, $first36: Int, $first37: Int, $query18: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first38: Int, $query19: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first39: Int, $query20: String, $revisionRange4: String, $after6: String, $path12: String, $first40: Int, $first41: Int, $first42: Int, $after7: String, $base: String, $head: String, $fetchMissing: Boolean, $first43: Int, $revisionRange5: String, $after8: String, $path13: String, $first44: Int, $first45: Int, $eventName: String, $first46: Int, $first47: Int, $precise: Boolean, $first48: Int, $query21: String, $after9: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $first49: Int, $eventName1: String, $first50: Int, $first51: Int, $precise1: Boolean, $first52: Int, $query22: String, $after10: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first53: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path14: String, $recursive12: Boolean, $first54: Int, $recursive13: Boolean, $recursiveSingleChild8: Boolean, $path15: String!, $path16: String!, $first55: Int, $query23: String, $path17: String, $after11: String, $revspec2: String!, $rev5: String!, $inputRevspec5: String, $first56: Int, $first57: Int, $query24: String, $type6: GitRefType, $orderBy12: GitRefOrder, $interactive12: Boolean, $first58: Int, $query25: String, $orderBy13: GitRefOrder, $interactive13: Boolean, $first59: Int, $query26: String, $first60: Int, $first61: Int, $after12: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $revisionRange6: String, $after13: String, $path18: String, $first62: Int, $rev6: String!, $inputRevspec6: String, $first63: Int, $first64: Int, $query27: String, $type7: GitRefType, $orderBy14: GitRefOrder, $interactive14: Boolean, $first65: Int, $query28: String, $orderBy15: GitRefOrder, $interactive15: Boolean, $first66: Int, $query29: String, $revisionRange7: String, $after14: String, $path19: String, $first67: Int, $first68: Int, $recursive14: Boolean, $recursiveSingleChild9: Boolean, $first69: Int, $recursive15: Boolean, $first70: Int, $recursive16: Boolean, $first71: Int, $recursive17: Boolean, $recursiveSingleChild10: Boolean, $first72: Int, $recursive18: Boolean, $recursiveSingleChild11: Boolean, $first73: Int, $recursive19: Boolean, $recursiveSingleChild12: Boolean, $path20: String, $recursive20: Boolean, $startLine1: Int!, $endLine1: Int!, $ranges2: [HighlightLineRange!]!, $disableTimeout2: Boolean!, $isLightTheme2: Boolean, $highlightLongLines2: Boolean, $line1: Int!, $character1: Int!, $first74: Int, $recursive21: Boolean, $recursiveSingleChild13: Boolean, $path21: String!, $ranges3: [HighlightLineRange!]!, $disableTimeout3: Boolean!, $isLightTheme3: Boolean, $highlightLongLines3: Boolean, $path22: String!, $first75: Int, $query30: String, $path23: String, $after15: String, $revspec3: String!, $first76: Int, $query31: String, $includePatterns1: [String!], $first77: Int, $recursive22: Boolean, $recursiveSingleChild14: Boolean, $path24: String, $recursive23: Boolean, $first78: Int, $recursive24: Boolean, $recursiveSingleChild15: Boolean, $path25: String!, $path26: String!, $first79: Int, $query32: String, $path27: String, $after16: String, $revspec4: String!, $rev7: String!, $inputRevspec7: String, $first80: Int, $first81: Int, $query33: String, $type8: GitRefType, $orderBy16: GitRefOrder, $interactive16: Boolean, $first82: Int, $query34: String, $orderBy17: GitRefOrder, $interactive17: Boolean, $first83: Int, $query35: String, $revisionRange8: String, $after17: String, $path28: String, $first84: Int, $first85: Int, $recursive25: Boolean, $recursiveSingleChild16: Boolean, $first86: Int, $recursive26: Boolean, $first87: Int, $recursive27: Boolean, $first88: Int, $recursive28: Boolean, $recursiveSingleChild17: Boolean, $first89: Int, $recursive29: Boolean, $recursiveSingleChild18: Boolean, $first90: Int, $recursive30: Boolean, $recursiveSingleChild19: Boolean, $first91: Int, $recursive31: Boolean, $first92: Int, $recursive32: Boolean, $first93: Int, $recursive33: Boolean, $recursiveSingleChild20: Boolean, $first94: Int, $recursive34: Boolean, $recursiveSingleChild21: Boolean, $first95: Int, $query36: String, $first96: Int, $recursive35: Boolean, $recursiveSingleChild22: Boolean, $path29: String, $recursive36: Boolean, $first97: Int, $recursive37: Boolean, $recursiveSingleChild23: Boolean, $path30: String, $recursive38: Boolean, $first98: Int, $recursive39: Boolean, $recursiveSingleChild24: Boolean, $path31: String!, $path32: String!, $first99: Int, $query37: String, $path33: String, $after18: String, $revspec5: String!, $rev8: String!, $inputRevspec8: String, $first100: Int, $first101: Int, $query38: String, $type9: GitRefType, $orderBy18: GitRefOrder, $interactive18: Boolean, $first102: Int, $query39: String, $orderBy19: GitRefOrder, $interactive19: Boolean, $first103: Int, $query40: String, $revisionRange9: String, $after19: String, $path34: String, $first104: Int, $startLine2: Int!, $endLine2: Int!, $ranges4: [HighlightLineRange!]!, $disableTimeout4: Boolean!, $isLightTheme4: Boolean, $highlightLongLines4: Boolean, $first105: Int, $query41: String, $line2: Int!, $character2: Int!, $first106: Int, $recursive40: Boolean, $recursiveSingleChild25: Boolean, $path35: String!, $ranges5: [HighlightLineRange!]!, $disableTimeout5: Boolean!, $isLightTheme5: Boolean, $highlightLongLines5: Boolean, $path36: String!, $first107: Int, $recursive41: Boolean, $recursiveSingleChild26: Boolean, $path37: String, $recursive42: Boolean, $first108: Int, $recursive43: Boolean, $recursiveSingleChild27: Boolean, $path38: String!, $path39: String!, $first109: Int, $query42: String, $path40: String, $after20: String, $revspec6: String!, $first110: Int, $query43: String, $path41: String, $after21: String, $revspec7: String!, $first111: Int, $query44: String, $includePatterns2: [String!], $rev9: String!, $inputRevspec9: String, $first112: Int, $first113: Int, $query45: String, $type10: GitRefType, $orderBy20: GitRefOrder, $interactive20: Boolean, $first114: Int, $query46: String, $orderBy21: GitRefOrder, $interactive21: Boolean, $first115: Int, $query47: String, $revisionRange10: String, $after22: String, $path42: String, $first116: Int, $first117: Int, $recursive44: Boolean, $recursiveSingleChild28: Boolean, $path43: String, $recursive45: Boolean, $first118: Int, $recursive46: Boolean, $recursiveSingleChild29: Boolean, $path44: String!, $path45: String!, $first119: Int, $query48: String, $path46: String, $after23: String, $revspec8: String!, $first120: Int, $recursive47: Boolean, $recursiveSingleChild30: Boolean, $first121: Int, $recursive48: Boolean, $first122: Int, $recursive49: Boolean, $first123: Int, $recursive50: Boolean, $recursiveSingleChild31: Boolean, $first124: Int, $recursive51: Boolean, $recursiveSingleChild32: Boolean, $first125: Int, $recursive52: Boolean, $recursiveSingleChild33: Boolean, $path47: String, $recursive53: Boolean, $startLine3: Int!, $endLine3: Int!, $ranges6: [HighlightLineRange!]!, $disableTimeout6: Boolean!, $isLightTheme6: Boolean, $highlightLongLines6: Boolean, $line3: Int!, $character3: Int!, $first126: Int, $recursive54: Boolean, $recursiveSingleChild34: Boolean, $path48: String!, $ranges7: [HighlightLineRange!]!, $disableTimeout7: Boolean!, $isLightTheme7: Boolean, $highlightLongLines7: Boolean, $path49: String!, $first127: Int, $query49: String, $path50: String, $after24: String, $revspec9: String!, $first128: Int, $query50: String, $includePatterns3: [String!], $first129: Int, $recursive55: Boolean, $recursiveSingleChild35: Boolean, $path51: String, $recursive56: Boolean, $first130: Int, $recursive57: Boolean, $recursiveSingleChild36: Boolean, $path52: String!, $path53: String!, $first131: Int, $query51: String, $path54: String, $after25: String, $revspec10: String!, $rev10: String!, $inputRevspec10: String, $first132: Int, $first133: Int, $query52: String, $type11: GitRefType, $orderBy22: GitRefOrder, $interactive22: Boolean, $first134: Int, $query53: String, $orderBy23: GitRefOrder, $interactive23: Boolean, $first135: Int, $query54: String, $first136: Int, $first137: Int, $after26: String, $base2: String, $head2: String, $fetchMissing2: Boolean, $revisionRange11: String, $after27: String, $path55: String, $first138: Int, $first139: Int, $recursive58: Boolean, $recursiveSingleChild37: Boolean, $path56: String, $recursive59: Boolean, $first140: Int, $recursive60: Boolean, $recursiveSingleChild38: Boolean, $path57: String!, $path58: String!, $first141: Int, $query55: String, $path59: String, $after28: String, $revspec11: String!, $rev11: String!, $inputRevspec11: String, $first142: Int, $first143: Int, $query56: String, $type12: GitRefType, $orderBy24: GitRefOrder, $interactive24: Boolean, $first144: Int, $query57: String, $orderBy25: GitRefOrder, $interactive25: Boolean, $first145: Int, $query58: String, $revisionRange12: String, $after29: String, $path60: String, $first146: Int, $first147: Int, $recursive61: Boolean, $first148: Int, $recursive62: Boolean, $recursiveSingleChild39: Boolean, $first149: Int, $recursive63: Boolean, $recursiveSingleChild40: Boolean, $first150: Int, $recursive64: Boolean, $recursiveSingleChild41: Boolean, $first151: Int, $recursive65: Boolean, $first152: Int, $recursive66: Boolean, $first153: Int, $recursive67: Boolean, $recursiveSingleChild42: Boolean, $first154: Int, $recursive68: Boolean, $recursiveSingleChild43: Boolean, $first155: Int, $query59: String, $first156: Int, $recursive69: Boolean, $recursiveSingleChild44: Boolean, $first157: Int, $recursive70: Boolean, $rev12: String!, $inputRevspec12: String, $first158: Int, $first159: Int, $query60: String, $type13: GitRefType, $orderBy26: GitRefOrder, $interactive26: Boolean, $first160: Int, $query61: String, $orderBy27: GitRefOrder, $interactive27: Boolean, $first161: Int, $query62: String, $revisionRange13: String, $after30: String, $path61: String, $first162: Int, $first163: Int, $recursive71: Boolean, $first164: Int, $query63: String, $first165: Int, $recursive72: Boolean, $recursiveSingleChild45: Boolean, $first166: Int, $recursive73: Boolean, $recursiveSingleChild46: Boolean, $first167: Int, $query64: String, $first168: Int, $recursive74: Boolean, $recursiveSingleChild47: Boolean, $path62: String, $recursive75: Boolean, $rev13: String!, $inputRevspec13: String, $first169: Int, $first170: Int, $query65: String, $type14: GitRefType, $orderBy28: GitRefOrder, $interactive28: Boolean, $first171: Int, $query66: String, $orderBy29: GitRefOrder, $interactive29: Boolean, $first172: Int, $query67: String, $revisionRange14: String, $after31: String, $path63: String, $first173: Int, $first174: Int, $recursive76: Boolean, $recursiveSingleChild48: Boolean, $path64: String, $recursive77: Boolean, $first175: Int, $recursive78: Boolean, $recursiveSingleChild49: Boolean, $path65: String!, $path66: String!, $first176: Int, $query68: String, $path67: String, $after32: String, $revspec12: String!, $first177: Int, $recursive79: Boolean, $recursiveSingleChild50: Boolean, $first178: Int, $recursive80: Boolean, $first179: Int, $recursive81: Boolean, $first180: Int, $recursive82: Boolean, $recursiveSingleChild51: Boolean, $first181: Int, $recursive83: Boolean, $recursiveSingleChild52: Boolean, $first182: Int, $recursive84: Boolean, $recursiveSingleChild53: Boolean, $path68: String, $recursive85: Boolean, $startLine4: Int!, $endLine4: Int!, $ranges8: [HighlightLineRange!]!, $disableTimeout8: Boolean!, $isLightTheme8: Boolean, $highlightLongLines8: Boolean, $line4: Int!, $character4: Int!, $first183: Int, $recursive86: Boolean, $recursiveSingleChild54: Boolean, $path69: String!, $ranges9: [HighlightLineRange!]!, $disableTimeout9: Boolean!, $isLightTheme9: Boolean, $highlightLongLines9: Boolean, $path70: String!, $first184: Int, $query69: String, $path71: String, $after33: String, $revspec13: String!, $first185: Int, $query70: String, $includePatterns4: [String!], $first186: Int, $recursive87: Boolean, $recursiveSingleChild55: Boolean, $path72: String, $recursive88: Boolean, $first187: Int, $recursive89: Boolean, $recursiveSingleChild56: Boolean, $path73: String!, $path74: String!, $first188: Int, $query71: String, $path75: String, $after34: String, $revspec14: String!, $rev14: String!, $inputRevspec14: String, $first189: Int, $first190: Int, $query72: String, $type15: GitRefType, $orderBy30: GitRefOrder, $interactive30: Boolean, $first191: Int, $query73: String, $orderBy31: GitRefOrder, $interactive31: Boolean, $first192: Int, $query74: String, $first193: Int, $first194: Int, $after35: String, $base3: String, $head3: String, $fetchMissing3: Boolean, $revisionRange15: String, $after36: String, $path76: String, $first195: Int, $first196: Int, $recursive90: Boolean, $recursiveSingleChild57: Boolean, $path77: String, $recursive91: Boolean, $first197: Int, $recursive92: Boolean, $recursiveSingleChild58: Boolean, $path78: String!, $path79: String!, $first198: Int, $query75: String, $path80: String, $after37: String, $revspec15: String!, $startLine5: Int!, $endLine5: Int!, $ranges10: [HighlightLineRange!]!, $disableTimeout10: Boolean!, $isLightTheme10: Boolean, $highlightLongLines10: Boolean, $first199: Int, $query76: String, $first200: Int, $recursive93: Boolean, $recursiveSingleChild59: Boolean, $line5: Int!, $character5: Int!, $first201: Int, $recursive94: Boolean, $recursiveSingleChild60: Boolean, $path81: String!, $ranges11: [HighlightLineRange!]!, $disableTimeout11: Boolean!, $isLightTheme11: Boolean, $highlightLongLines11: Boolean, $path82: String!, $rev15: String!, $inputRevspec15: String, $first202: Int, $first203: Int, $query77: String, $type16: GitRefType, $orderBy32: GitRefOrder, $interactive32: Boolean, $first204: Int, $query78: String, $orderBy33: GitRefOrder, $interactive33: Boolean, $first205: Int, $query79: String, $revisionRange16: String, $after38: String, $path83: String, $first206: Int, $first207: Int, $recursive95: Boolean, $recursiveSingleChild61: Boolean, $path84: String, $recursive96: Boolean, $first208: Int, $recursive97: Boolean, $recursiveSingleChild62: Boolean, $path85: String!, $path86: String!, $first209: Int, $query80: String, $path87: String, $after39: String, $revspec16: String!, $first210: Int, $recursive98: Boolean, $recursiveSingleChild63: Boolean, $first211: Int, $recursive99: Boolean, $first212: Int, $recursive100: Boolean, $first213: Int, $recursive101: Boolean, $recursiveSingleChild64: Boolean, $first214: Int, $recursive102: Boolean, $recursiveSingleChild65: Boolean, $first215: Int, $recursive103: Boolean, $recursiveSingleChild66: Boolean, $path88: String, $recursive104: Boolean, $startLine6: Int!, $endLine6: Int!, $ranges12: [HighlightLineRange!]!, $disableTimeout12: Boolean!, $isLightTheme12: Boolean, $highlightLongLines12: Boolean, $line6: Int!, $character6: Int!, $first216: Int, $recursive105: Boolean, $recursiveSingleChild67: Boolean, $path89: String!, $ranges13: [HighlightLineRange!]!, $disableTimeout13: Boolean!, $isLightTheme13: Boolean, $highlightLongLines13: Boolean, $path90: String!, $first217: Int, $query81: String, $path91: String, $after40: String, $revspec17: String!, $first218: Int, $query82: String, $includePatterns5: [String!], $first219: Int, $query83: String, $path92: String, $after41: String, $revspec18: String!, $first220: Int, $recursive106: Boolean, $recursiveSingleChild68: Boolean, $first221: Int, $query84: String, $includePatterns6: [String!], $repoName: String!, $diffID: ID!, $baseRev: String!, $patch: String, $description: String, $authorName: String, $authorEmail: String, $date: String) {\n    resolvePhabricatorDiff (repoName: $repoName, diffID: $diffID, baseRev: $baseRev, patch: $patch, description: $description, authorName: $authorName, authorEmail: $authorEmail, date: $date) {\n        id\n        repository {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev, inputRevspec: $inputRevspec) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first1, query: $query, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first2, query: $query1, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first3, query: $query2) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after, path: $path, first: $first4) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first5, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first6, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first7, query: $query3, path: $path4, after: $after1) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path5, recursive: $recursive9) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first8, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    files (first: $first10, recursive: $recursive5) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first12, recursive: $recursive7, recursiveSingleChild: $recursiveSingleChild4) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first11, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    isSingleChild (first: $first13, recursive: $recursive8, recursiveSingleChild: $recursiveSingleChild5)\n                }\n                fileNames\n                blob (path: $path6) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first14, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6)\n                }\n                file (path: $path7) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first15, query: $query4, path: $path8, after: $after2) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec1) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first16, query: $query5, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first17) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first18) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first19, query: $query6, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first20, query: $query7, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first21, query: $query8) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path9, first: $first22) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first23) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    gitRefs (first: $first24, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first25, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first26, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after4, path: $path10, first: $first27) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first28, query: $query12, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first29, query: $query13, orderBy: $orderBy7, interactive: $interactive7) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first30, query: $query14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query15, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query16, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query17) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after5, path: $path11, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first36) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first37, query: $query18, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first38, query: $query19, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first39, query: $query20) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after6, path: $path12, first: $first40) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first41) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first42, after: $after7) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange5, after: $after8, path: $path13, first: $first44) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first43) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n        oid\n        abbreviatedOID\n        author {\n            person {\n                name\n                email\n                displayName\n                avatarURL\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first45, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first46) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first47) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first48, query: $query21, after: $after9, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n            }\n            date\n        }\n        committer {\n            person {\n                name\n                email\n                displayName\n                avatarURL\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first49, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first50) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first51) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first52, query: $query22, after: $after10, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n            }\n            date\n        }\n        message\n        subject\n        body\n        parents {\n            id\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path14, recursive: $recursive12) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first53, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                    }\n                    fileNames\n                    blob (path: $path15) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first54, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild8)\n                    }\n                    file (path: $path16) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first55, query: $query23, path: $path17, after: $after11) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec2) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first56) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first57, query: $query24, type: $type6, orderBy: $orderBy12, interactive: $interactive12) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first58, query: $query25, orderBy: $orderBy13, interactive: $interactive13) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first59, query: $query26) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first60) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first61, after: $after12) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange6, after: $after13, path: $path18, first: $first62) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            oid\n            abbreviatedOID\n            author {\n                person {\n                    name\n                    email\n                    displayName\n                    avatarURL\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                }\n                date\n            }\n            committer {\n                person {\n                    name\n                    email\n                    displayName\n                    avatarURL\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                }\n                date\n            }\n            message\n            subject\n            body\n            parents {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first63) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first64, query: $query27, type: $type7, orderBy: $orderBy14, interactive: $interactive14) {\n                        totalCount\n                    }\n                    branches (first: $first65, query: $query28, orderBy: $orderBy15, interactive: $interactive15) {\n                        totalCount\n                    }\n                    tags (first: $first66, query: $query29) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after14, path: $path19, first: $first67) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path20, recursive: $recursive20) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first69, recursive: $recursive15) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first68, recursive: $recursive14, recursiveSingleChild: $recursiveSingleChild9)\n                    }\n                    files (first: $first70, recursive: $recursive16) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first72, recursive: $recursive18, recursiveSingleChild: $recursiveSingleChild11) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first71, recursive: $recursive17, recursiveSingleChild: $recursiveSingleChild10)\n                    }\n                    isSingleChild (first: $first73, recursive: $recursive19, recursiveSingleChild: $recursiveSingleChild12)\n                }\n                fileNames\n                blob (path: $path21) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine1, endLine: $endLine1) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout2, isLightTheme: $isLightTheme2, highlightLongLines: $highlightLongLines2) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges2)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line1, character: $character1) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first74, recursive: $recursive21, recursiveSingleChild: $recursiveSingleChild13)\n                }\n                file (path: $path22) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout3, isLightTheme: $isLightTheme3, highlightLongLines: $highlightLongLines3) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges3)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first75, query: $query30, path: $path23, after: $after15) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec3) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first76, query: $query31, includePatterns: $includePatterns1) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            url\n            canonicalURL\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            tree (path: $path29, recursive: $recursive36) {\n                path\n                isRoot\n                name\n                isDirectory\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path24, recursive: $recursive23) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first77, recursive: $recursive22, recursiveSingleChild: $recursiveSingleChild14)\n                    }\n                    fileNames\n                    blob (path: $path25) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first78, recursive: $recursive24, recursiveSingleChild: $recursiveSingleChild15)\n                    }\n                    file (path: $path26) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first79, query: $query32, path: $path27, after: $after16) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec4) {\n                        behind\n                        ahead\n                    }\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first80) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first81, query: $query33, type: $type8, orderBy: $orderBy16, interactive: $interactive16) {\n                        totalCount\n                    }\n                    branches (first: $first82, query: $query34, orderBy: $orderBy17, interactive: $interactive17) {\n                        totalCount\n                    }\n                    tags (first: $first83, query: $query35) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after17, path: $path28, first: $first84) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                rawZipArchiveURL\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                directories (first: $first91, recursive: $recursive31) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first86, recursive: $recursive26) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first85, recursive: $recursive25, recursiveSingleChild: $recursiveSingleChild16)\n                    }\n                    files (first: $first87, recursive: $recursive27) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first89, recursive: $recursive29, recursiveSingleChild: $recursiveSingleChild18) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first88, recursive: $recursive28, recursiveSingleChild: $recursiveSingleChild17)\n                    }\n                    isSingleChild (first: $first90, recursive: $recursive30, recursiveSingleChild: $recursiveSingleChild19)\n                }\n                files (first: $first92, recursive: $recursive32) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                entries (first: $first94, recursive: $recursive34, recursiveSingleChild: $recursiveSingleChild21) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    isSingleChild (first: $first93, recursive: $recursive33, recursiveSingleChild: $recursiveSingleChild20)\n                }\n                symbols (first: $first95, query: $query36) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                isSingleChild (first: $first96, recursive: $recursive35, recursiveSingleChild: $recursiveSingleChild22)\n            }\n            fileNames\n            blob (path: $path35) {\n                path\n                name\n                isDirectory\n                content\n                byteSize\n                binary\n                richHTML\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path30, recursive: $recursive38) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first97, recursive: $recursive37, recursiveSingleChild: $recursiveSingleChild23)\n                    }\n                    fileNames\n                    blob (path: $path31) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first98, recursive: $recursive39, recursiveSingleChild: $recursiveSingleChild24)\n                    }\n                    file (path: $path32) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first99, query: $query37, path: $path33, after: $after18) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec5) {\n                        behind\n                        ahead\n                    }\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first100) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first101, query: $query38, type: $type9, orderBy: $orderBy18, interactive: $interactive18) {\n                        totalCount\n                    }\n                    branches (first: $first102, query: $query39, orderBy: $orderBy19, interactive: $interactive19) {\n                        totalCount\n                    }\n                    tags (first: $first103, query: $query40) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange9, after: $after19, path: $path34, first: $first104) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                blame (startLine: $startLine2, endLine: $endLine2) {\n                    startLine\n                    endLine\n                    startByte\n                    endByte\n                    rev\n                    author {\n                        date\n                    }\n                    message\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    filename\n                }\n                highlight (disableTimeout: $disableTimeout4, isLightTheme: $isLightTheme4, highlightLongLines: $highlightLongLines4) {\n                    aborted\n                    html\n                    lineRanges (ranges: $ranges4)\n                }\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                symbols (first: $first105, query: $query41) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                symbol (line: $line2, character: $character2) {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                isSingleChild (first: $first106, recursive: $recursive40, recursiveSingleChild: $recursiveSingleChild25)\n            }\n            file (path: $path36) {\n                path\n                name\n                isDirectory\n                content\n                byteSize\n                binary\n                richHTML\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                highlight (disableTimeout: $disableTimeout5, isLightTheme: $isLightTheme5, highlightLongLines: $highlightLongLines5) {\n                    aborted\n                    html\n                    lineRanges (ranges: $ranges5)\n                }\n            }\n            languages\n            languageStatistics {\n                name\n                totalBytes\n                totalLines\n            }\n            ancestors (first: $first110, query: $query43, path: $path41, after: $after21) {\n                nodes {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path37, recursive: $recursive42) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first107, recursive: $recursive41, recursiveSingleChild: $recursiveSingleChild26)\n                    }\n                    fileNames\n                    blob (path: $path38) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first108, recursive: $recursive43, recursiveSingleChild: $recursiveSingleChild27)\n                    }\n                    file (path: $path39) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first109, query: $query42, path: $path40, after: $after20) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec6) {\n                        behind\n                        ahead\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            behindAhead (revspec: $revspec7) {\n                behind\n                ahead\n            }\n            symbols (first: $first111, query: $query44, includePatterns: $includePatterns2) {\n                nodes {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n        }\n        url\n        canonicalURL\n        externalURLs {\n            url\n            serviceKind\n            serviceType\n        }\n        tree (path: $path62, recursive: $recursive75) {\n            path\n            isRoot\n            name\n            isDirectory\n            commit {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev9, inputRevspec: $inputRevspec9) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first112) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first113, query: $query45, type: $type10, orderBy: $orderBy20, interactive: $interactive20) {\n                        totalCount\n                    }\n                    branches (first: $first114, query: $query46, orderBy: $orderBy21, interactive: $interactive21) {\n                        totalCount\n                    }\n                    tags (first: $first115, query: $query47) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange10, after: $after22, path: $path42, first: $first116) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path43, recursive: $recursive45) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first117, recursive: $recursive44, recursiveSingleChild: $recursiveSingleChild28)\n                    }\n                    fileNames\n                    blob (path: $path44) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first118, recursive: $recursive46, recursiveSingleChild: $recursiveSingleChild29)\n                    }\n                    file (path: $path45) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first119, query: $query48, path: $path46, after: $after23) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec8) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path47, recursive: $recursive53) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first121, recursive: $recursive48) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first120, recursive: $recursive47, recursiveSingleChild: $recursiveSingleChild30)\n                    }\n                    files (first: $first122, recursive: $recursive49) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first124, recursive: $recursive51, recursiveSingleChild: $recursiveSingleChild32) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first123, recursive: $recursive50, recursiveSingleChild: $recursiveSingleChild31)\n                    }\n                    isSingleChild (first: $first125, recursive: $recursive52, recursiveSingleChild: $recursiveSingleChild33)\n                }\n                fileNames\n                blob (path: $path48) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine3, endLine: $endLine3) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout6, isLightTheme: $isLightTheme6, highlightLongLines: $highlightLongLines6) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges6)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line3, character: $character3) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first126, recursive: $recursive54, recursiveSingleChild: $recursiveSingleChild34)\n                }\n                file (path: $path49) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout7, isLightTheme: $isLightTheme7, highlightLongLines: $highlightLongLines7) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges7)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first127, query: $query49, path: $path50, after: $after24) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec9) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first128, query: $query50, includePatterns: $includePatterns3) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev10, inputRevspec: $inputRevspec10) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path51, recursive: $recursive56) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first129, recursive: $recursive55, recursiveSingleChild: $recursiveSingleChild35)\n                    }\n                    fileNames\n                    blob (path: $path52) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first130, recursive: $recursive57, recursiveSingleChild: $recursiveSingleChild36)\n                    }\n                    file (path: $path53) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first131, query: $query51, path: $path54, after: $after25) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec10) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first132) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first133, query: $query52, type: $type11, orderBy: $orderBy22, interactive: $interactive22) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first134, query: $query53, orderBy: $orderBy23, interactive: $interactive23) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first135, query: $query54) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base2, head: $head2, fetchMissing: $fetchMissing2) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first136) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first137, after: $after26) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange11, after: $after27, path: $path55, first: $first138) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            url\n            canonicalURL\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            rawZipArchiveURL\n            submodule {\n                url\n                commit\n                path\n            }\n            directories (first: $first157, recursive: $recursive70) {\n                path\n                isRoot\n                name\n                isDirectory\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path56, recursive: $recursive59) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first139, recursive: $recursive58, recursiveSingleChild: $recursiveSingleChild37)\n                    }\n                    fileNames\n                    blob (path: $path57) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first140, recursive: $recursive60, recursiveSingleChild: $recursiveSingleChild38)\n                    }\n                    file (path: $path58) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first141, query: $query55, path: $path59, after: $after28) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec11) {\n                        behind\n                        ahead\n                    }\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev11, inputRevspec: $inputRevspec11) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first142) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first143, query: $query56, type: $type12, orderBy: $orderBy24, interactive: $interactive24) {\n                        totalCount\n                    }\n                    branches (first: $first144, query: $query57, orderBy: $orderBy25, interactive: $interactive25) {\n                        totalCount\n                    }\n                    tags (first: $first145, query: $query58) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange12, after: $after29, path: $path60, first: $first146) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                rawZipArchiveURL\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                directories (first: $first151, recursive: $recursive65) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    files (first: $first147, recursive: $recursive61) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first149, recursive: $recursive63, recursiveSingleChild: $recursiveSingleChild40) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first148, recursive: $recursive62, recursiveSingleChild: $recursiveSingleChild39)\n                    }\n                    isSingleChild (first: $first150, recursive: $recursive64, recursiveSingleChild: $recursiveSingleChild41)\n                }\n                files (first: $first152, recursive: $recursive66) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                entries (first: $first154, recursive: $recursive68, recursiveSingleChild: $recursiveSingleChild43) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    isSingleChild (first: $first153, recursive: $recursive67, recursiveSingleChild: $recursiveSingleChild42)\n                }\n                symbols (first: $first155, query: $query59) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                isSingleChild (first: $first156, recursive: $recursive69, recursiveSingleChild: $recursiveSingleChild44)\n            }\n            files (first: $first163, recursive: $recursive71) {\n                path\n                name\n                isDirectory\n                url\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev12, inputRevspec: $inputRevspec12) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first158) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first159, query: $query60, type: $type13, orderBy: $orderBy26, interactive: $interactive26) {\n                        totalCount\n                    }\n                    branches (first: $first160, query: $query61, orderBy: $orderBy27, interactive: $interactive27) {\n                        totalCount\n                    }\n                    tags (first: $first161, query: $query62) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange13, after: $after30, path: $path61, first: $first162) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            entries (first: $first166, recursive: $recursive73, recursiveSingleChild: $recursiveSingleChild46) {\n                path\n                name\n                isDirectory\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                symbols (first: $first164, query: $query63) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                isSingleChild (first: $first165, recursive: $recursive72, recursiveSingleChild: $recursiveSingleChild45)\n            }\n            symbols (first: $first167, query: $query64) {\n                nodes {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            isSingleChild (first: $first168, recursive: $recursive74, recursiveSingleChild: $recursiveSingleChild47)\n        }\n        fileNames\n        blob (path: $path81) {\n            path\n            name\n            isDirectory\n            content\n            byteSize\n            binary\n            richHTML\n            commit {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev13, inputRevspec: $inputRevspec13) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first169) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first170, query: $query65, type: $type14, orderBy: $orderBy28, interactive: $interactive28) {\n                        totalCount\n                    }\n                    branches (first: $first171, query: $query66, orderBy: $orderBy29, interactive: $interactive29) {\n                        totalCount\n                    }\n                    tags (first: $first172, query: $query67) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange14, after: $after31, path: $path63, first: $first173) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path64, recursive: $recursive77) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first174, recursive: $recursive76, recursiveSingleChild: $recursiveSingleChild48)\n                    }\n                    fileNames\n                    blob (path: $path65) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first175, recursive: $recursive78, recursiveSingleChild: $recursiveSingleChild49)\n                    }\n                    file (path: $path66) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first176, query: $query68, path: $path67, after: $after32) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec12) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path68, recursive: $recursive85) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first178, recursive: $recursive80) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first177, recursive: $recursive79, recursiveSingleChild: $recursiveSingleChild50)\n                    }\n                    files (first: $first179, recursive: $recursive81) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first181, recursive: $recursive83, recursiveSingleChild: $recursiveSingleChild52) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first180, recursive: $recursive82, recursiveSingleChild: $recursiveSingleChild51)\n                    }\n                    isSingleChild (first: $first182, recursive: $recursive84, recursiveSingleChild: $recursiveSingleChild53)\n                }\n                fileNames\n                blob (path: $path69) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine4, endLine: $endLine4) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout8, isLightTheme: $isLightTheme8, highlightLongLines: $highlightLongLines8) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges8)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line4, character: $character4) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first183, recursive: $recursive86, recursiveSingleChild: $recursiveSingleChild54)\n                }\n                file (path: $path70) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout9, isLightTheme: $isLightTheme9, highlightLongLines: $highlightLongLines9) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges9)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first184, query: $query69, path: $path71, after: $after33) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec13) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first185, query: $query70, includePatterns: $includePatterns4) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev14, inputRevspec: $inputRevspec14) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path72, recursive: $recursive88) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first186, recursive: $recursive87, recursiveSingleChild: $recursiveSingleChild55)\n                    }\n                    fileNames\n                    blob (path: $path73) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first187, recursive: $recursive89, recursiveSingleChild: $recursiveSingleChild56)\n                    }\n                    file (path: $path74) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first188, query: $query71, path: $path75, after: $after34) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec14) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first189) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first190, query: $query72, type: $type15, orderBy: $orderBy30, interactive: $interactive30) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first191, query: $query73, orderBy: $orderBy31, interactive: $interactive31) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first192, query: $query74) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base3, head: $head3, fetchMissing: $fetchMissing3) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first193) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first194, after: $after35) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange15, after: $after36, path: $path76, first: $first195) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            url\n            canonicalURL\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            blame (startLine: $startLine5, endLine: $endLine5) {\n                startLine\n                endLine\n                startByte\n                endByte\n                rev\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path77, recursive: $recursive91) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first196, recursive: $recursive90, recursiveSingleChild: $recursiveSingleChild57)\n                    }\n                    fileNames\n                    blob (path: $path78) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first197, recursive: $recursive92, recursiveSingleChild: $recursiveSingleChild58)\n                    }\n                    file (path: $path79) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first198, query: $query75, path: $path80, after: $after37) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec15) {\n                        behind\n                        ahead\n                    }\n                }\n                filename\n            }\n            highlight (disableTimeout: $disableTimeout10, isLightTheme: $isLightTheme10, highlightLongLines: $highlightLongLines10) {\n                aborted\n                html\n                lineRanges (ranges: $ranges10)\n            }\n            submodule {\n                url\n                commit\n                path\n            }\n            symbols (first: $first199, query: $query76) {\n                nodes {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            symbol (line: $line5, character: $character5) {\n                name\n                containerName\n                kind\n                language\n                location {\n                    resource {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first200, recursive: $recursive93, recursiveSingleChild: $recursiveSingleChild59)\n                    }\n                    url\n                    canonicalURL\n                }\n                url\n                canonicalURL\n                fileLocal\n            }\n            isSingleChild (first: $first201, recursive: $recursive94, recursiveSingleChild: $recursiveSingleChild60)\n        }\n        file (path: $path82) {\n            path\n            name\n            isDirectory\n            content\n            byteSize\n            binary\n            richHTML\n            url\n            canonicalURL\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            highlight (disableTimeout: $disableTimeout11, isLightTheme: $isLightTheme11, highlightLongLines: $highlightLongLines11) {\n                aborted\n                html\n                lineRanges (ranges: $ranges11)\n            }\n        }\n        languages\n        languageStatistics {\n            name\n            totalBytes\n            totalLines\n        }\n        ancestors (first: $first219, query: $query83, path: $path92, after: $after41) {\n            nodes {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev15, inputRevspec: $inputRevspec15) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first202) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first203, query: $query77, type: $type16, orderBy: $orderBy32, interactive: $interactive32) {\n                        totalCount\n                    }\n                    branches (first: $first204, query: $query78, orderBy: $orderBy33, interactive: $interactive33) {\n                        totalCount\n                    }\n                    tags (first: $first205, query: $query79) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange16, after: $after38, path: $path83, first: $first206) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path84, recursive: $recursive96) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first207, recursive: $recursive95, recursiveSingleChild: $recursiveSingleChild61)\n                    }\n                    fileNames\n                    blob (path: $path85) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first208, recursive: $recursive97, recursiveSingleChild: $recursiveSingleChild62)\n                    }\n                    file (path: $path86) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first209, query: $query80, path: $path87, after: $after39) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec16) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path88, recursive: $recursive104) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first211, recursive: $recursive99) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first210, recursive: $recursive98, recursiveSingleChild: $recursiveSingleChild63)\n                    }\n                    files (first: $first212, recursive: $recursive100) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first214, recursive: $recursive102, recursiveSingleChild: $recursiveSingleChild65) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first213, recursive: $recursive101, recursiveSingleChild: $recursiveSingleChild64)\n                    }\n                    isSingleChild (first: $first215, recursive: $recursive103, recursiveSingleChild: $recursiveSingleChild66)\n                }\n                fileNames\n                blob (path: $path89) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine6, endLine: $endLine6) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout12, isLightTheme: $isLightTheme12, highlightLongLines: $highlightLongLines12) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges12)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line6, character: $character6) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first216, recursive: $recursive105, recursiveSingleChild: $recursiveSingleChild67)\n                }\n                file (path: $path90) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout13, isLightTheme: $isLightTheme13, highlightLongLines: $highlightLongLines13) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges13)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first217, query: $query81, path: $path91, after: $after40) {\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec17) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first218, query: $query82, includePatterns: $includePatterns5) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        behindAhead (revspec: $revspec18) {\n            behind\n            ahead\n        }\n        symbols (first: $first221, query: $query84, includePatterns: $includePatterns6) {\n            nodes {\n                name\n                containerName\n                kind\n                language\n                location {\n                    resource {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first220, recursive: $recursive106, recursiveSingleChild: $recursiveSingleChild68)\n                    }\n                    url\n                    canonicalURL\n                }\n                url\n                canonicalURL\n                fileLocal\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"first1\": 0,\n  \"query\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first2\": 0,\n  \"query1\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first3\": 0,\n  \"query2\": \"\",\n  \"revisionRange\": \"\",\n  \"after\": \"\",\n  \"path\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path1\": \"\",\n  \"recursive1\": true,\n  \"first6\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"path4\": \"\",\n  \"after1\": \"\",\n  \"revspec\": \"\",\n  \"first8\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"first9\": 0,\n  \"recursive4\": true,\n  \"first10\": 0,\n  \"recursive5\": true,\n  \"first11\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild3\": true,\n  \"first12\": 0,\n  \"recursive7\": true,\n  \"recursiveSingleChild4\": true,\n  \"first13\": 0,\n  \"recursive8\": true,\n  \"recursiveSingleChild5\": true,\n  \"path5\": \"\",\n  \"recursive9\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first14\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"path6\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path7\": \"\",\n  \"first15\": 0,\n  \"query4\": \"\",\n  \"path8\": \"\",\n  \"after2\": \"\",\n  \"revspec1\": \"\",\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first17\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first18\": 0,\n  \"first19\": 0,\n  \"query6\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first20\": 0,\n  \"query7\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path9\": \"\",\n  \"first22\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first23\": 0,\n  \"first24\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first25\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first26\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after4\": \"\",\n  \"path10\": \"\",\n  \"first27\": 0,\n  \"first28\": 0,\n  \"query12\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first29\": 0,\n  \"query13\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first30\": 0,\n  \"query14\": \"\",\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query15\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first33\": 0,\n  \"query16\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first34\": 0,\n  \"query17\": \"\",\n  \"revisionRange3\": \"\",\n  \"after5\": \"\",\n  \"path11\": \"\",\n  \"first35\": 0,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first36\": 0,\n  \"first37\": 0,\n  \"query18\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first38\": 0,\n  \"query19\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first39\": 0,\n  \"query20\": \"\",\n  \"revisionRange4\": \"\",\n  \"after6\": \"\",\n  \"path12\": \"\",\n  \"first40\": 0,\n  \"first41\": 0,\n  \"first42\": 0,\n  \"after7\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"first43\": 0,\n  \"revisionRange5\": \"\",\n  \"after8\": \"\",\n  \"path13\": \"\",\n  \"first44\": 0,\n  \"first45\": 0,\n  \"eventName\": \"\",\n  \"first46\": 0,\n  \"first47\": 0,\n  \"precise\": true,\n  \"first48\": 0,\n  \"query21\": \"\",\n  \"after9\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"first49\": 0,\n  \"eventName1\": \"\",\n  \"first50\": 0,\n  \"first51\": 0,\n  \"precise1\": true,\n  \"first52\": 0,\n  \"query22\": \"\",\n  \"after10\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first53\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path14\": \"\",\n  \"recursive12\": true,\n  \"first54\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild8\": true,\n  \"path15\": \"\",\n  \"path16\": \"\",\n  \"first55\": 0,\n  \"query23\": \"\",\n  \"path17\": \"\",\n  \"after11\": \"\",\n  \"revspec2\": \"\",\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first56\": 0,\n  \"first57\": 0,\n  \"query24\": \"\",\n  \"type6\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first58\": 0,\n  \"query25\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"first59\": 0,\n  \"query26\": \"\",\n  \"first60\": 0,\n  \"first61\": 0,\n  \"after12\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"revisionRange6\": \"\",\n  \"after13\": \"\",\n  \"path18\": \"\",\n  \"first62\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first63\": 0,\n  \"first64\": 0,\n  \"query27\": \"\",\n  \"type7\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive14\": true,\n  \"first65\": 0,\n  \"query28\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive15\": true,\n  \"first66\": 0,\n  \"query29\": \"\",\n  \"revisionRange7\": \"\",\n  \"after14\": \"\",\n  \"path19\": \"\",\n  \"first67\": 0,\n  \"first68\": 0,\n  \"recursive14\": true,\n  \"recursiveSingleChild9\": true,\n  \"first69\": 0,\n  \"recursive15\": true,\n  \"first70\": 0,\n  \"recursive16\": true,\n  \"first71\": 0,\n  \"recursive17\": true,\n  \"recursiveSingleChild10\": true,\n  \"first72\": 0,\n  \"recursive18\": true,\n  \"recursiveSingleChild11\": true,\n  \"first73\": 0,\n  \"recursive19\": true,\n  \"recursiveSingleChild12\": true,\n  \"path20\": \"\",\n  \"recursive20\": true,\n  \"startLine1\": 0,\n  \"endLine1\": 0,\n  \"ranges2\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout2\": true,\n  \"isLightTheme2\": true,\n  \"highlightLongLines2\": true,\n  \"line1\": 0,\n  \"character1\": 0,\n  \"first74\": 0,\n  \"recursive21\": true,\n  \"recursiveSingleChild13\": true,\n  \"path21\": \"\",\n  \"ranges3\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout3\": true,\n  \"isLightTheme3\": true,\n  \"highlightLongLines3\": true,\n  \"path22\": \"\",\n  \"first75\": 0,\n  \"query30\": \"\",\n  \"path23\": \"\",\n  \"after15\": \"\",\n  \"revspec3\": \"\",\n  \"first76\": 0,\n  \"query31\": \"\",\n  \"includePatterns1\": [\n    \"\"\n  ],\n  \"first77\": 0,\n  \"recursive22\": true,\n  \"recursiveSingleChild14\": true,\n  \"path24\": \"\",\n  \"recursive23\": true,\n  \"first78\": 0,\n  \"recursive24\": true,\n  \"recursiveSingleChild15\": true,\n  \"path25\": \"\",\n  \"path26\": \"\",\n  \"first79\": 0,\n  \"query32\": \"\",\n  \"path27\": \"\",\n  \"after16\": \"\",\n  \"revspec4\": \"\",\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first80\": 0,\n  \"first81\": 0,\n  \"query33\": \"\",\n  \"type8\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive16\": true,\n  \"first82\": 0,\n  \"query34\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive17\": true,\n  \"first83\": 0,\n  \"query35\": \"\",\n  \"revisionRange8\": \"\",\n  \"after17\": \"\",\n  \"path28\": \"\",\n  \"first84\": 0,\n  \"first85\": 0,\n  \"recursive25\": true,\n  \"recursiveSingleChild16\": true,\n  \"first86\": 0,\n  \"recursive26\": true,\n  \"first87\": 0,\n  \"recursive27\": true,\n  \"first88\": 0,\n  \"recursive28\": true,\n  \"recursiveSingleChild17\": true,\n  \"first89\": 0,\n  \"recursive29\": true,\n  \"recursiveSingleChild18\": true,\n  \"first90\": 0,\n  \"recursive30\": true,\n  \"recursiveSingleChild19\": true,\n  \"first91\": 0,\n  \"recursive31\": true,\n  \"first92\": 0,\n  \"recursive32\": true,\n  \"first93\": 0,\n  \"recursive33\": true,\n  \"recursiveSingleChild20\": true,\n  \"first94\": 0,\n  \"recursive34\": true,\n  \"recursiveSingleChild21\": true,\n  \"first95\": 0,\n  \"query36\": \"\",\n  \"first96\": 0,\n  \"recursive35\": true,\n  \"recursiveSingleChild22\": true,\n  \"path29\": \"\",\n  \"recursive36\": true,\n  \"first97\": 0,\n  \"recursive37\": true,\n  \"recursiveSingleChild23\": true,\n  \"path30\": \"\",\n  \"recursive38\": true,\n  \"first98\": 0,\n  \"recursive39\": true,\n  \"recursiveSingleChild24\": true,\n  \"path31\": \"\",\n  \"path32\": \"\",\n  \"first99\": 0,\n  \"query37\": \"\",\n  \"path33\": \"\",\n  \"after18\": \"\",\n  \"revspec5\": \"\",\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first100\": 0,\n  \"first101\": 0,\n  \"query38\": \"\",\n  \"type9\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive18\": true,\n  \"first102\": 0,\n  \"query39\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive19\": true,\n  \"first103\": 0,\n  \"query40\": \"\",\n  \"revisionRange9\": \"\",\n  \"after19\": \"\",\n  \"path34\": \"\",\n  \"first104\": 0,\n  \"startLine2\": 0,\n  \"endLine2\": 0,\n  \"ranges4\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout4\": true,\n  \"isLightTheme4\": true,\n  \"highlightLongLines4\": true,\n  \"first105\": 0,\n  \"query41\": \"\",\n  \"line2\": 0,\n  \"character2\": 0,\n  \"first106\": 0,\n  \"recursive40\": true,\n  \"recursiveSingleChild25\": true,\n  \"path35\": \"\",\n  \"ranges5\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout5\": true,\n  \"isLightTheme5\": true,\n  \"highlightLongLines5\": true,\n  \"path36\": \"\",\n  \"first107\": 0,\n  \"recursive41\": true,\n  \"recursiveSingleChild26\": true,\n  \"path37\": \"\",\n  \"recursive42\": true,\n  \"first108\": 0,\n  \"recursive43\": true,\n  \"recursiveSingleChild27\": true,\n  \"path38\": \"\",\n  \"path39\": \"\",\n  \"first109\": 0,\n  \"query42\": \"\",\n  \"path40\": \"\",\n  \"after20\": \"\",\n  \"revspec6\": \"\",\n  \"first110\": 0,\n  \"query43\": \"\",\n  \"path41\": \"\",\n  \"after21\": \"\",\n  \"revspec7\": \"\",\n  \"first111\": 0,\n  \"query44\": \"\",\n  \"includePatterns2\": [\n    \"\"\n  ],\n  \"rev9\": \"\",\n  \"inputRevspec9\": \"\",\n  \"first112\": 0,\n  \"first113\": 0,\n  \"query45\": \"\",\n  \"type10\": \"\",\n  \"orderBy20\": \"\",\n  \"interactive20\": true,\n  \"first114\": 0,\n  \"query46\": \"\",\n  \"orderBy21\": \"\",\n  \"interactive21\": true,\n  \"first115\": 0,\n  \"query47\": \"\",\n  \"revisionRange10\": \"\",\n  \"after22\": \"\",\n  \"path42\": \"\",\n  \"first116\": 0,\n  \"first117\": 0,\n  \"recursive44\": true,\n  \"recursiveSingleChild28\": true,\n  \"path43\": \"\",\n  \"recursive45\": true,\n  \"first118\": 0,\n  \"recursive46\": true,\n  \"recursiveSingleChild29\": true,\n  \"path44\": \"\",\n  \"path45\": \"\",\n  \"first119\": 0,\n  \"query48\": \"\",\n  \"path46\": \"\",\n  \"after23\": \"\",\n  \"revspec8\": \"\",\n  \"first120\": 0,\n  \"recursive47\": true,\n  \"recursiveSingleChild30\": true,\n  \"first121\": 0,\n  \"recursive48\": true,\n  \"first122\": 0,\n  \"recursive49\": true,\n  \"first123\": 0,\n  \"recursive50\": true,\n  \"recursiveSingleChild31\": true,\n  \"first124\": 0,\n  \"recursive51\": true,\n  \"recursiveSingleChild32\": true,\n  \"first125\": 0,\n  \"recursive52\": true,\n  \"recursiveSingleChild33\": true,\n  \"path47\": \"\",\n  \"recursive53\": true,\n  \"startLine3\": 0,\n  \"endLine3\": 0,\n  \"ranges6\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout6\": true,\n  \"isLightTheme6\": true,\n  \"highlightLongLines6\": true,\n  \"line3\": 0,\n  \"character3\": 0,\n  \"first126\": 0,\n  \"recursive54\": true,\n  \"recursiveSingleChild34\": true,\n  \"path48\": \"\",\n  \"ranges7\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout7\": true,\n  \"isLightTheme7\": true,\n  \"highlightLongLines7\": true,\n  \"path49\": \"\",\n  \"first127\": 0,\n  \"query49\": \"\",\n  \"path50\": \"\",\n  \"after24\": \"\",\n  \"revspec9\": \"\",\n  \"first128\": 0,\n  \"query50\": \"\",\n  \"includePatterns3\": [\n    \"\"\n  ],\n  \"first129\": 0,\n  \"recursive55\": true,\n  \"recursiveSingleChild35\": true,\n  \"path51\": \"\",\n  \"recursive56\": true,\n  \"first130\": 0,\n  \"recursive57\": true,\n  \"recursiveSingleChild36\": true,\n  \"path52\": \"\",\n  \"path53\": \"\",\n  \"first131\": 0,\n  \"query51\": \"\",\n  \"path54\": \"\",\n  \"after25\": \"\",\n  \"revspec10\": \"\",\n  \"rev10\": \"\",\n  \"inputRevspec10\": \"\",\n  \"first132\": 0,\n  \"first133\": 0,\n  \"query52\": \"\",\n  \"type11\": \"\",\n  \"orderBy22\": \"\",\n  \"interactive22\": true,\n  \"first134\": 0,\n  \"query53\": \"\",\n  \"orderBy23\": \"\",\n  \"interactive23\": true,\n  \"first135\": 0,\n  \"query54\": \"\",\n  \"first136\": 0,\n  \"first137\": 0,\n  \"after26\": \"\",\n  \"base2\": \"\",\n  \"head2\": \"\",\n  \"fetchMissing2\": true,\n  \"revisionRange11\": \"\",\n  \"after27\": \"\",\n  \"path55\": \"\",\n  \"first138\": 0,\n  \"first139\": 0,\n  \"recursive58\": true,\n  \"recursiveSingleChild37\": true,\n  \"path56\": \"\",\n  \"recursive59\": true,\n  \"first140\": 0,\n  \"recursive60\": true,\n  \"recursiveSingleChild38\": true,\n  \"path57\": \"\",\n  \"path58\": \"\",\n  \"first141\": 0,\n  \"query55\": \"\",\n  \"path59\": \"\",\n  \"after28\": \"\",\n  \"revspec11\": \"\",\n  \"rev11\": \"\",\n  \"inputRevspec11\": \"\",\n  \"first142\": 0,\n  \"first143\": 0,\n  \"query56\": \"\",\n  \"type12\": \"\",\n  \"orderBy24\": \"\",\n  \"interactive24\": true,\n  \"first144\": 0,\n  \"query57\": \"\",\n  \"orderBy25\": \"\",\n  \"interactive25\": true,\n  \"first145\": 0,\n  \"query58\": \"\",\n  \"revisionRange12\": \"\",\n  \"after29\": \"\",\n  \"path60\": \"\",\n  \"first146\": 0,\n  \"first147\": 0,\n  \"recursive61\": true,\n  \"first148\": 0,\n  \"recursive62\": true,\n  \"recursiveSingleChild39\": true,\n  \"first149\": 0,\n  \"recursive63\": true,\n  \"recursiveSingleChild40\": true,\n  \"first150\": 0,\n  \"recursive64\": true,\n  \"recursiveSingleChild41\": true,\n  \"first151\": 0,\n  \"recursive65\": true,\n  \"first152\": 0,\n  \"recursive66\": true,\n  \"first153\": 0,\n  \"recursive67\": true,\n  \"recursiveSingleChild42\": true,\n  \"first154\": 0,\n  \"recursive68\": true,\n  \"recursiveSingleChild43\": true,\n  \"first155\": 0,\n  \"query59\": \"\",\n  \"first156\": 0,\n  \"recursive69\": true,\n  \"recursiveSingleChild44\": true,\n  \"first157\": 0,\n  \"recursive70\": true,\n  \"rev12\": \"\",\n  \"inputRevspec12\": \"\",\n  \"first158\": 0,\n  \"first159\": 0,\n  \"query60\": \"\",\n  \"type13\": \"\",\n  \"orderBy26\": \"\",\n  \"interactive26\": true,\n  \"first160\": 0,\n  \"query61\": \"\",\n  \"orderBy27\": \"\",\n  \"interactive27\": true,\n  \"first161\": 0,\n  \"query62\": \"\",\n  \"revisionRange13\": \"\",\n  \"after30\": \"\",\n  \"path61\": \"\",\n  \"first162\": 0,\n  \"first163\": 0,\n  \"recursive71\": true,\n  \"first164\": 0,\n  \"query63\": \"\",\n  \"first165\": 0,\n  \"recursive72\": true,\n  \"recursiveSingleChild45\": true,\n  \"first166\": 0,\n  \"recursive73\": true,\n  \"recursiveSingleChild46\": true,\n  \"first167\": 0,\n  \"query64\": \"\",\n  \"first168\": 0,\n  \"recursive74\": true,\n  \"recursiveSingleChild47\": true,\n  \"path62\": \"\",\n  \"recursive75\": true,\n  \"rev13\": \"\",\n  \"inputRevspec13\": \"\",\n  \"first169\": 0,\n  \"first170\": 0,\n  \"query65\": \"\",\n  \"type14\": \"\",\n  \"orderBy28\": \"\",\n  \"interactive28\": true,\n  \"first171\": 0,\n  \"query66\": \"\",\n  \"orderBy29\": \"\",\n  \"interactive29\": true,\n  \"first172\": 0,\n  \"query67\": \"\",\n  \"revisionRange14\": \"\",\n  \"after31\": \"\",\n  \"path63\": \"\",\n  \"first173\": 0,\n  \"first174\": 0,\n  \"recursive76\": true,\n  \"recursiveSingleChild48\": true,\n  \"path64\": \"\",\n  \"recursive77\": true,\n  \"first175\": 0,\n  \"recursive78\": true,\n  \"recursiveSingleChild49\": true,\n  \"path65\": \"\",\n  \"path66\": \"\",\n  \"first176\": 0,\n  \"query68\": \"\",\n  \"path67\": \"\",\n  \"after32\": \"\",\n  \"revspec12\": \"\",\n  \"first177\": 0,\n  \"recursive79\": true,\n  \"recursiveSingleChild50\": true,\n  \"first178\": 0,\n  \"recursive80\": true,\n  \"first179\": 0,\n  \"recursive81\": true,\n  \"first180\": 0,\n  \"recursive82\": true,\n  \"recursiveSingleChild51\": true,\n  \"first181\": 0,\n  \"recursive83\": true,\n  \"recursiveSingleChild52\": true,\n  \"first182\": 0,\n  \"recursive84\": true,\n  \"recursiveSingleChild53\": true,\n  \"path68\": \"\",\n  \"recursive85\": true,\n  \"startLine4\": 0,\n  \"endLine4\": 0,\n  \"ranges8\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout8\": true,\n  \"isLightTheme8\": true,\n  \"highlightLongLines8\": true,\n  \"line4\": 0,\n  \"character4\": 0,\n  \"first183\": 0,\n  \"recursive86\": true,\n  \"recursiveSingleChild54\": true,\n  \"path69\": \"\",\n  \"ranges9\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout9\": true,\n  \"isLightTheme9\": true,\n  \"highlightLongLines9\": true,\n  \"path70\": \"\",\n  \"first184\": 0,\n  \"query69\": \"\",\n  \"path71\": \"\",\n  \"after33\": \"\",\n  \"revspec13\": \"\",\n  \"first185\": 0,\n  \"query70\": \"\",\n  \"includePatterns4\": [\n    \"\"\n  ],\n  \"first186\": 0,\n  \"recursive87\": true,\n  \"recursiveSingleChild55\": true,\n  \"path72\": \"\",\n  \"recursive88\": true,\n  \"first187\": 0,\n  \"recursive89\": true,\n  \"recursiveSingleChild56\": true,\n  \"path73\": \"\",\n  \"path74\": \"\",\n  \"first188\": 0,\n  \"query71\": \"\",\n  \"path75\": \"\",\n  \"after34\": \"\",\n  \"revspec14\": \"\",\n  \"rev14\": \"\",\n  \"inputRevspec14\": \"\",\n  \"first189\": 0,\n  \"first190\": 0,\n  \"query72\": \"\",\n  \"type15\": \"\",\n  \"orderBy30\": \"\",\n  \"interactive30\": true,\n  \"first191\": 0,\n  \"query73\": \"\",\n  \"orderBy31\": \"\",\n  \"interactive31\": true,\n  \"first192\": 0,\n  \"query74\": \"\",\n  \"first193\": 0,\n  \"first194\": 0,\n  \"after35\": \"\",\n  \"base3\": \"\",\n  \"head3\": \"\",\n  \"fetchMissing3\": true,\n  \"revisionRange15\": \"\",\n  \"after36\": \"\",\n  \"path76\": \"\",\n  \"first195\": 0,\n  \"first196\": 0,\n  \"recursive90\": true,\n  \"recursiveSingleChild57\": true,\n  \"path77\": \"\",\n  \"recursive91\": true,\n  \"first197\": 0,\n  \"recursive92\": true,\n  \"recursiveSingleChild58\": true,\n  \"path78\": \"\",\n  \"path79\": \"\",\n  \"first198\": 0,\n  \"query75\": \"\",\n  \"path80\": \"\",\n  \"after37\": \"\",\n  \"revspec15\": \"\",\n  \"startLine5\": 0,\n  \"endLine5\": 0,\n  \"ranges10\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout10\": true,\n  \"isLightTheme10\": true,\n  \"highlightLongLines10\": true,\n  \"first199\": 0,\n  \"query76\": \"\",\n  \"first200\": 0,\n  \"recursive93\": true,\n  \"recursiveSingleChild59\": true,\n  \"line5\": 0,\n  \"character5\": 0,\n  \"first201\": 0,\n  \"recursive94\": true,\n  \"recursiveSingleChild60\": true,\n  \"path81\": \"\",\n  \"ranges11\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout11\": true,\n  \"isLightTheme11\": true,\n  \"highlightLongLines11\": true,\n  \"path82\": \"\",\n  \"rev15\": \"\",\n  \"inputRevspec15\": \"\",\n  \"first202\": 0,\n  \"first203\": 0,\n  \"query77\": \"\",\n  \"type16\": \"\",\n  \"orderBy32\": \"\",\n  \"interactive32\": true,\n  \"first204\": 0,\n  \"query78\": \"\",\n  \"orderBy33\": \"\",\n  \"interactive33\": true,\n  \"first205\": 0,\n  \"query79\": \"\",\n  \"revisionRange16\": \"\",\n  \"after38\": \"\",\n  \"path83\": \"\",\n  \"first206\": 0,\n  \"first207\": 0,\n  \"recursive95\": true,\n  \"recursiveSingleChild61\": true,\n  \"path84\": \"\",\n  \"recursive96\": true,\n  \"first208\": 0,\n  \"recursive97\": true,\n  \"recursiveSingleChild62\": true,\n  \"path85\": \"\",\n  \"path86\": \"\",\n  \"first209\": 0,\n  \"query80\": \"\",\n  \"path87\": \"\",\n  \"after39\": \"\",\n  \"revspec16\": \"\",\n  \"first210\": 0,\n  \"recursive98\": true,\n  \"recursiveSingleChild63\": true,\n  \"first211\": 0,\n  \"recursive99\": true,\n  \"first212\": 0,\n  \"recursive100\": true,\n  \"first213\": 0,\n  \"recursive101\": true,\n  \"recursiveSingleChild64\": true,\n  \"first214\": 0,\n  \"recursive102\": true,\n  \"recursiveSingleChild65\": true,\n  \"first215\": 0,\n  \"recursive103\": true,\n  \"recursiveSingleChild66\": true,\n  \"path88\": \"\",\n  \"recursive104\": true,\n  \"startLine6\": 0,\n  \"endLine6\": 0,\n  \"ranges12\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout12\": true,\n  \"isLightTheme12\": true,\n  \"highlightLongLines12\": true,\n  \"line6\": 0,\n  \"character6\": 0,\n  \"first216\": 0,\n  \"recursive105\": true,\n  \"recursiveSingleChild67\": true,\n  \"path89\": \"\",\n  \"ranges13\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout13\": true,\n  \"isLightTheme13\": true,\n  \"highlightLongLines13\": true,\n  \"path90\": \"\",\n  \"first217\": 0,\n  \"query81\": \"\",\n  \"path91\": \"\",\n  \"after40\": \"\",\n  \"revspec17\": \"\",\n  \"first218\": 0,\n  \"query82\": \"\",\n  \"includePatterns5\": [\n    \"\"\n  ],\n  \"first219\": 0,\n  \"query83\": \"\",\n  \"path92\": \"\",\n  \"after41\": \"\",\n  \"revspec18\": \"\",\n  \"first220\": 0,\n  \"recursive106\": true,\n  \"recursiveSingleChild68\": true,\n  \"first221\": 0,\n  \"query84\": \"\",\n  \"includePatterns6\": [\n    \"\"\n  ],\n  \"repoName\": \"\",\n  \"diffID\": 0,\n  \"baseRev\": \"\",\n  \"patch\": \"\",\n  \"description\": \"\",\n  \"authorName\": \"\",\n  \"authorEmail\": \"\",\n  \"date\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "logUserEvent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation logUserEvent ($event: UserEvent!, $userCookieID: String!) {\n    logUserEvent (event: $event, userCookieID: $userCookieID) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"event\": \"\",\n  \"userCookieID\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "logEvent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation logEvent ($event: String!, $userCookieID: String!, $firstSourceURL: String, $url: String!, $source: EventSource!, $cohortID: String, $referrer: String, $argument: String, $publicArgument: String, $deviceID: String, $eventID: Int, $insertID: String) {\n    logEvent (event: $event, userCookieID: $userCookieID, firstSourceURL: $firstSourceURL, url: $url, source: $source, cohortID: $cohortID, referrer: $referrer, argument: $argument, publicArgument: $publicArgument, deviceID: $deviceID, eventID: $eventID, insertID: $insertID) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"event\": \"\",\n  \"userCookieID\": \"\",\n  \"firstSourceURL\": \"\",\n  \"url\": \"\",\n  \"source\": \"\",\n  \"cohortID\": \"\",\n  \"referrer\": \"\",\n  \"argument\": \"\",\n  \"publicArgument\": \"\",\n  \"deviceID\": \"\",\n  \"eventID\": 0,\n  \"insertID\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendSavedSearchTestNotification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation sendSavedSearchTestNotification ($id: ID!) {\n    sendSavedSearchTestNotification (id: $id) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "settingsMutation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation settingsMutation ($edit: SettingsEdit!, $edit1: ConfigurationEdit!, $contents: String!, $input: SettingsMutationGroupInput!) {\n    settingsMutation (input: $input) {\n        editSettings (edit: $edit) {\n            empty {\n                alwaysNil\n            }\n        }\n        editConfiguration (edit: $edit1) {\n            empty {\n                alwaysNil\n            }\n        }\n        overwriteSettings (contents: $contents) {\n            empty {\n                alwaysNil\n            }\n        }\n    }\n}",
								"variables": "{\n  \"edit\": {\n    \"keyPath\": {\n      \"property\": \"\",\n      \"index\": 0\n    },\n    \"value\": \"\",\n    \"valueIsJSONCEncodedString\": true\n  },\n  \"edit1\": {\n    \"keyPath\": {\n      \"property\": \"\",\n      \"index\": 0\n    },\n    \"value\": \"\",\n    \"valueIsJSONCEncodedString\": true\n  },\n  \"contents\": \"\",\n  \"input\": {\n    \"subject\": 0,\n    \"lastID\": 0\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "configurationMutation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation configurationMutation ($edit: SettingsEdit!, $edit1: ConfigurationEdit!, $contents: String!, $input: SettingsMutationGroupInput!) {\n    configurationMutation (input: $input) {\n        editSettings (edit: $edit) {\n            empty {\n                alwaysNil\n            }\n        }\n        editConfiguration (edit: $edit1) {\n            empty {\n                alwaysNil\n            }\n        }\n        overwriteSettings (contents: $contents) {\n            empty {\n                alwaysNil\n            }\n        }\n    }\n}",
								"variables": "{\n  \"edit\": {\n    \"keyPath\": {\n      \"property\": \"\",\n      \"index\": 0\n    },\n    \"value\": \"\",\n    \"valueIsJSONCEncodedString\": true\n  },\n  \"edit1\": {\n    \"keyPath\": {\n      \"property\": \"\",\n      \"index\": 0\n    },\n    \"value\": \"\",\n    \"valueIsJSONCEncodedString\": true\n  },\n  \"contents\": \"\",\n  \"input\": {\n    \"subject\": 0,\n    \"lastID\": 0\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSiteConfiguration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateSiteConfiguration ($lastID: Int!, $input: String!) {\n    updateSiteConfiguration (lastID: $lastID, input: $input)\n}",
								"variables": "{\n  \"lastID\": 0,\n  \"input\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setUserIsSiteAdmin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setUserIsSiteAdmin ($userID: ID!, $siteAdmin: Boolean!) {\n    setUserIsSiteAdmin (userID: $userID, siteAdmin: $siteAdmin) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"userID\": 0,\n  \"siteAdmin\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalidateSessionsByID",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation invalidateSessionsByID ($userID: ID!) {\n    invalidateSessionsByID (userID: $userID) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"userID\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "reloadSite",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation reloadSite {\n    reloadSite {\n        alwaysNil\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "submitSurvey",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation submitSurvey ($input: SurveySubmissionInput!) {\n    submitSurvey (input: $input) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"input\": {\n    \"email\": \"\",\n    \"score\": 0,\n    \"reason\": \"\",\n    \"better\": \"\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "submitHappinessFeedback",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation submitHappinessFeedback ($input: HappinessFeedbackSubmissionInput!) {\n    submitHappinessFeedback (input: $input) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"input\": {\n    \"score\": 0,\n    \"feedback\": \"\",\n    \"currentPath\": \"\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "requestTrial",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation requestTrial ($email: String!) {\n    requestTrial (email: $email) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "extensionRegistry",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation extensionRegistry ($fields: [String!]!, $publisher: ID!, $name: String!, $fields1: [String!]!, $extension: ID!, $name1: String, $extension1: ID!, $fields2: [String!]!, $extensionID: String!, $manifest: String!, $bundle: String, $sourceMap: String, $force: Boolean) {\n    extensionRegistry {\n        createExtension (publisher: $publisher, name: $name) {\n            extension {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n        }\n        updateExtension (extension: $extension, name: $name1) {\n            extension {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields1)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n        }\n        deleteExtension (extension: $extension1) {\n            alwaysNil\n        }\n        publishExtension (extensionID: $extensionID, manifest: $manifest, bundle: $bundle, sourceMap: $sourceMap, force: $force) {\n            extension {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields2)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n        }\n    }\n}",
								"variables": "{\n  \"fields\": [\n    \"\"\n  ],\n  \"publisher\": 0,\n  \"name\": \"\",\n  \"fields1\": [\n    \"\"\n  ],\n  \"extension\": 0,\n  \"name1\": \"\",\n  \"extension1\": 0,\n  \"fields2\": [\n    \"\"\n  ],\n  \"extensionID\": \"\",\n  \"manifest\": \"\",\n  \"bundle\": \"\",\n  \"sourceMap\": \"\",\n  \"force\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createSavedSearch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createSavedSearch ($description: String!, $query: String!, $notifyOwner: Boolean!, $notifySlack: Boolean!, $orgID: ID, $userID: ID) {\n    createSavedSearch (description: $description, query: $query, notifyOwner: $notifyOwner, notifySlack: $notifySlack, orgID: $orgID, userID: $userID) {\n        id\n        description\n        query\n        notify\n        notifySlack\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        slackWebhookURL\n    }\n}",
								"variables": "{\n  \"description\": \"\",\n  \"query\": \"\",\n  \"notifyOwner\": true,\n  \"notifySlack\": true,\n  \"orgID\": 0,\n  \"userID\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSavedSearch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateSavedSearch ($id: ID!, $description: String!, $query: String!, $notifyOwner: Boolean!, $notifySlack: Boolean!, $orgID: ID, $userID: ID) {\n    updateSavedSearch (id: $id, description: $description, query: $query, notifyOwner: $notifyOwner, notifySlack: $notifySlack, orgID: $orgID, userID: $userID) {\n        id\n        description\n        query\n        notify\n        notifySlack\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        slackWebhookURL\n    }\n}",
								"variables": "{\n  \"id\": 0,\n  \"description\": \"\",\n  \"query\": \"\",\n  \"notifyOwner\": true,\n  \"notifySlack\": true,\n  \"orgID\": 0,\n  \"userID\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSavedSearch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteSavedSearch ($id: ID!) {\n    deleteSavedSearch (id: $id) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "triggerObservabilityTestAlert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation triggerObservabilityTestAlert ($level: String!) {\n    triggerObservabilityTestAlert (level: $level) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"level\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setExternalServiceRepos",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setExternalServiceRepos ($id: ID!, $repos: [String!], $allRepos: Boolean!) {\n    setExternalServiceRepos (id: $id, repos: $repos, allRepos: $allRepos) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"id\": 0,\n  \"repos\": [\n    \"\"\n  ],\n  \"allRepos\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SetMigrationDirection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation SetMigrationDirection ($id: ID!, $applyReverse: Boolean!) {\n    SetMigrationDirection (id: $id, applyReverse: $applyReverse) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"id\": 0,\n  \"applyReverse\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SetUserPublicRepos",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation SetUserPublicRepos ($userID: ID!, $repoURIs: [String!]!) {\n    SetUserPublicRepos (userID: $userID, repoURIs: $repoURIs) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"userID\": 0,\n  \"repoURIs\": [\n    \"\"\n  ]\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createFeatureFlag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFeatureFlag ($name: String!, $value: Boolean, $rolloutBasisPoints: Int) {\n    createFeatureFlag (name: $name, value: $value, rolloutBasisPoints: $rolloutBasisPoints) {\n        ... on FeatureFlagBoolean {\n            name\n            value\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n        ... on FeatureFlagRollout {\n            name\n            rolloutBasisPoints\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n    }\n}",
								"variables": "{\n  \"name\": \"\",\n  \"value\": true,\n  \"rolloutBasisPoints\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFeatureFlag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteFeatureFlag ($name: String!) {\n    deleteFeatureFlag (name: $name) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"name\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFeatureFlag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateFeatureFlag ($name: String!, $value: Boolean, $rolloutBasisPoints: Int) {\n    updateFeatureFlag (name: $name, value: $value, rolloutBasisPoints: $rolloutBasisPoints) {\n        ... on FeatureFlagBoolean {\n            name\n            value\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n        ... on FeatureFlagRollout {\n            name\n            rolloutBasisPoints\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n    }\n}",
								"variables": "{\n  \"name\": \"\",\n  \"value\": true,\n  \"rolloutBasisPoints\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createFeatureFlagOverride",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFeatureFlagOverride ($namespace: ID!, $flagName: String!, $value: Boolean!) {\n    createFeatureFlagOverride (namespace: $namespace, flagName: $flagName, value: $value) {\n        id\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        targetFlag {\n            ... on FeatureFlagBoolean {\n                name\n                value\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n            ... on FeatureFlagRollout {\n                name\n                rolloutBasisPoints\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n        }\n        value\n    }\n}",
								"variables": "{\n  \"namespace\": 0,\n  \"flagName\": \"\",\n  \"value\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFeatureFlagOverride",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteFeatureFlagOverride ($id: ID!) {\n    deleteFeatureFlagOverride (id: $id) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFeatureFlagOverride",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateFeatureFlagOverride ($id: ID!, $value: Boolean!) {\n    updateFeatureFlagOverride (id: $id, value: $value) {\n        id\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        targetFlag {\n            ... on FeatureFlagBoolean {\n                name\n                value\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n            ... on FeatureFlagRollout {\n                name\n                rolloutBasisPoints\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n        }\n        value\n    }\n}",
								"variables": "{\n  \"id\": 0,\n  \"value\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "overwriteTemporarySettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation overwriteTemporarySettings ($contents: String!) {\n    overwriteTemporarySettings (contents: $contents) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"contents\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editTemporarySettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation editTemporarySettings ($settingsToEdit: String!) {\n    editTemporarySettings (settingsToEdit: $settingsToEdit) {\n        alwaysNil\n    }\n}",
								"variables": "{\n  \"settingsToEdit\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "queries",
			"item": [
				{
					"name": "root",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query root ($id: ID!, $first: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path: String, $recursive1: Boolean, $first1: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path1: String!, $path2: String!, $first2: Int, $query: String, $path3: String, $after: String, $revspec: String!, $rev: String!, $inputRevspec: String, $first3: Int, $first4: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first5: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first6: Int, $query3: String, $first7: Int, $first8: Int, $after1: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange: String, $after2: String, $path4: String, $first9: Int, $name: String, $cloneURL: String, $uri: String, $name1: String, $cloneURL1: String, $rev1: String!, $inputRevspec1: String, $first10: Int, $first11: Int, $query4: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first12: Int, $query5: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first13: Int, $query6: String, $revisionRange1: String, $after3: String, $path5: String, $first14: Int, $namespace: ID, $first15: Int, $after4: String, $rev2: String!, $inputRevspec2: String, $first16: Int, $first17: Int, $query7: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first18: Int, $query8: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first19: Int, $query9: String, $revisionRange2: String, $after5: String, $path6: String, $first20: Int, $precise: Boolean, $first21: Int, $query10: String, $after6: String, $names: [String!], $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $failedFetch: Boolean, $orderBy6: RepositoryOrderBy, $descending: Boolean, $name2: String, $uri1: String, $first22: Int, $eventName: String, $first23: Int, $first24: Int, $precise1: Boolean, $first25: Int, $query11: String, $after7: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID: ID, $rev3: String!, $inputRevspec3: String, $first26: Int, $first27: Int, $query12: String, $type3: GitRefType, $orderBy7: GitRefOrder, $interactive6: Boolean, $first28: Int, $query13: String, $orderBy8: GitRefOrder, $interactive7: Boolean, $first29: Int, $query14: String, $revisionRange3: String, $after8: String, $path7: String, $first30: Int, $first31: Int, $eventName1: String, $first32: Int, $first33: Int, $precise2: Boolean, $first34: Int, $query15: String, $after9: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID1: ID, $rev4: String!, $inputRevspec4: String, $first35: Int, $first36: Int, $query16: String, $type4: GitRefType, $orderBy9: GitRefOrder, $interactive8: Boolean, $first37: Int, $query17: String, $orderBy10: GitRefOrder, $interactive9: Boolean, $first38: Int, $query18: String, $revisionRange4: String, $after10: String, $path8: String, $first39: Int, $username: String, $email: String, $first40: Int, $eventName2: String, $first41: Int, $first42: Int, $precise3: Boolean, $first43: Int, $query19: String, $after11: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID2: ID, $first44: Int, $query20: String, $tag: String, $activePeriod: UserActivePeriod, $name3: String!, $first45: Int, $query21: String, $markdown: String!, $options: MarkdownOptions, $code: String!, $fuzzyLanguage: String!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $id1: ID!, $first46: Int, $version: SearchVersion, $patternType: SearchPatternType, $query22: String, $versionContext: String, $query23: String, $patternType1: SearchPatternType, $first47: Int, $first48: Int, $user: ID, $serviceType: String, $serviceID: String, $clientID: String, $days: Int, $weeks: Int, $months: Int, $days1: Int, $first49: Int, $fields: [String!]!, $extensionID: String!, $first50: Int, $publisher: ID, $query24: String, $local: Boolean, $remote: Boolean, $extensionIDs: [String!], $prioritizeExtensionIDs: [String!], $first51: Int, $id2: ID!, $name4: String!, $user1: ID!, $codeHost: ID, $query25: String, $ids: [ID!]!, $seconds: Int!, $id3: ID!, $first52: Int, $first53: Int, $query26: String, $type5: GitRefType, $orderBy11: GitRefOrder, $interactive10: Boolean, $first54: Int, $query27: String, $orderBy12: GitRefOrder, $interactive11: Boolean, $first55: Int, $query28: String, $revisionRange5: String, $after12: String, $path9: String, $first56: Int, $first57: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $path10: String, $recursive4: Boolean, $first58: Int, $recursive5: Boolean, $recursiveSingleChild3: Boolean, $path11: String!, $path12: String!, $first59: Int, $query29: String, $path13: String, $after13: String, $revspec1: String!, $first60: Int, $recursive6: Boolean, $recursiveSingleChild4: Boolean, $first61: Int, $recursive7: Boolean, $first62: Int, $recursive8: Boolean, $first63: Int, $recursive9: Boolean, $recursiveSingleChild5: Boolean, $first64: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $first65: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path14: String, $recursive12: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first66: Int, $recursive13: Boolean, $recursiveSingleChild8: Boolean, $path15: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout2: Boolean!, $isLightTheme2: Boolean, $highlightLongLines1: Boolean, $path16: String!, $first67: Int, $query30: String, $path17: String, $after14: String, $revspec2: String!, $first68: Int, $query31: String, $includePatterns: [String!], $rev5: String!, $inputRevspec5: String, $first69: Int, $rev6: String!, $inputRevspec6: String, $first70: Int, $first71: Int, $query32: String, $type6: GitRefType, $orderBy13: GitRefOrder, $interactive12: Boolean, $first72: Int, $query33: String, $orderBy14: GitRefOrder, $interactive13: Boolean, $first73: Int, $query34: String, $revisionRange6: String, $after15: String, $path18: String, $first74: Int, $rev7: String!, $inputRevspec7: String, $first75: Int, $first76: Int, $query35: String, $type7: GitRefType, $orderBy15: GitRefOrder, $interactive14: Boolean, $first77: Int, $query36: String, $orderBy16: GitRefOrder, $interactive15: Boolean, $first78: Int, $query37: String, $revisionRange7: String, $after16: String, $path19: String, $first79: Int, $first80: Int, $query38: String, $type8: GitRefType, $orderBy17: GitRefOrder, $interactive16: Boolean, $first81: Int, $query39: String, $orderBy18: GitRefOrder, $interactive17: Boolean, $first82: Int, $query40: String, $rev8: String!, $inputRevspec8: String, $first83: Int, $first84: Int, $query41: String, $type9: GitRefType, $orderBy19: GitRefOrder, $interactive18: Boolean, $first85: Int, $query42: String, $orderBy20: GitRefOrder, $interactive19: Boolean, $first86: Int, $query43: String, $revisionRange8: String, $after17: String, $path20: String, $first87: Int, $rev9: String!, $inputRevspec9: String, $first88: Int, $first89: Int, $query44: String, $type10: GitRefType, $orderBy21: GitRefOrder, $interactive20: Boolean, $first90: Int, $query45: String, $orderBy22: GitRefOrder, $interactive21: Boolean, $first91: Int, $query46: String, $revisionRange9: String, $after18: String, $path21: String, $first92: Int, $first93: Int, $first94: Int, $after19: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $first95: Int, $revisionRange10: String, $after20: String, $path22: String, $first96: Int, $name5: String, $cloneURL2: String, $uri2: String, $name6: String, $cloneURL3: String, $first97: Int, $recursive14: Boolean, $recursiveSingleChild9: Boolean, $path23: String, $recursive15: Boolean, $first98: Int, $recursive16: Boolean, $recursiveSingleChild10: Boolean, $path24: String!, $path25: String!, $first99: Int, $query47: String, $path26: String, $after21: String, $revspec3: String!, $rev10: String!, $inputRevspec10: String, $first100: Int, $first101: Int, $query48: String, $type11: GitRefType, $orderBy23: GitRefOrder, $interactive22: Boolean, $first102: Int, $query49: String, $orderBy24: GitRefOrder, $interactive23: Boolean, $first103: Int, $query50: String, $first104: Int, $first105: Int, $after22: String, $base2: String, $head2: String, $fetchMissing2: Boolean, $revisionRange11: String, $after23: String, $path27: String, $first106: Int, $namespace1: ID, $first107: Int, $after24: String, $first108: Int, $recursive17: Boolean, $recursiveSingleChild11: Boolean, $path28: String, $recursive18: Boolean, $first109: Int, $recursive19: Boolean, $recursiveSingleChild12: Boolean, $path29: String!, $path30: String!, $first110: Int, $query51: String, $path31: String, $after25: String, $revspec4: String!, $rev11: String!, $inputRevspec11: String, $first111: Int, $first112: Int, $query52: String, $type12: GitRefType, $orderBy25: GitRefOrder, $interactive24: Boolean, $first113: Int, $query53: String, $orderBy26: GitRefOrder, $interactive25: Boolean, $first114: Int, $query54: String, $first115: Int, $first116: Int, $after26: String, $base3: String, $head3: String, $fetchMissing3: Boolean, $revisionRange12: String, $after27: String, $path32: String, $first117: Int, $precise4: Boolean, $first118: Int, $query55: String, $after28: String, $names1: [String!], $cloned4: Boolean, $notCloned4: Boolean, $indexed4: Boolean, $notIndexed4: Boolean, $failedFetch1: Boolean, $orderBy27: RepositoryOrderBy, $descending1: Boolean, $name7: String, $uri3: String, $first119: Int, $eventName3: String, $first120: Int, $first121: Int, $precise5: Boolean, $first122: Int, $query56: String, $after29: String, $cloned5: Boolean, $notCloned5: Boolean, $indexed5: Boolean, $notIndexed5: Boolean, $externalServiceID3: ID, $first123: Int, $eventName4: String, $first124: Int, $eventName5: String, $first125: Int, $first126: Int, $precise6: Boolean, $first127: Int, $query57: String, $after30: String, $cloned6: Boolean, $notCloned6: Boolean, $indexed6: Boolean, $notIndexed6: Boolean, $externalServiceID4: ID, $first128: Int, $first129: Int, $first130: Int, $eventName6: String, $first131: Int, $first132: Int, $precise7: Boolean, $first133: Int, $query58: String, $after31: String, $cloned7: Boolean, $notCloned7: Boolean, $indexed7: Boolean, $notIndexed7: Boolean, $externalServiceID5: ID, $rev12: String!, $inputRevspec12: String, $first134: Int, $first135: Int, $query59: String, $type13: GitRefType, $orderBy28: GitRefOrder, $interactive26: Boolean, $first136: Int, $query60: String, $orderBy29: GitRefOrder, $interactive27: Boolean, $first137: Int, $query61: String, $revisionRange13: String, $after32: String, $path33: String, $first138: Int, $precise8: Boolean, $first139: Int, $query62: String, $after33: String, $cloned8: Boolean, $notCloned8: Boolean, $indexed8: Boolean, $notIndexed8: Boolean, $externalServiceID6: ID, $first140: Int, $recursive20: Boolean, $recursiveSingleChild13: Boolean, $path34: String, $recursive21: Boolean, $first141: Int, $recursive22: Boolean, $recursiveSingleChild14: Boolean, $path35: String!, $path36: String!, $first142: Int, $query63: String, $path37: String, $after34: String, $revspec5: String!, $rev13: String!, $inputRevspec13: String, $first143: Int, $first144: Int, $query64: String, $type14: GitRefType, $orderBy30: GitRefOrder, $interactive28: Boolean, $first145: Int, $query65: String, $orderBy31: GitRefOrder, $interactive29: Boolean, $first146: Int, $query66: String, $first147: Int, $first148: Int, $after35: String, $base4: String, $head4: String, $fetchMissing4: Boolean, $revisionRange14: String, $after36: String, $path38: String, $first149: Int, $first150: Int, $eventName7: String, $first151: Int, $first152: Int, $precise9: Boolean, $first153: Int, $query67: String, $after37: String, $cloned9: Boolean, $notCloned9: Boolean, $indexed9: Boolean, $notIndexed9: Boolean, $externalServiceID7: ID, $first154: Int, $eventName8: String, $first155: Int, $eventName9: String, $first156: Int, $first157: Int, $precise10: Boolean, $first158: Int, $query68: String, $after38: String, $cloned10: Boolean, $notCloned10: Boolean, $indexed10: Boolean, $notIndexed10: Boolean, $externalServiceID8: ID, $first159: Int, $first160: Int, $first161: Int, $eventName10: String, $first162: Int, $first163: Int, $precise11: Boolean, $first164: Int, $query69: String, $after39: String, $cloned11: Boolean, $notCloned11: Boolean, $indexed11: Boolean, $notIndexed11: Boolean, $externalServiceID9: ID, $rev14: String!, $inputRevspec14: String, $first165: Int, $first166: Int, $query70: String, $type15: GitRefType, $orderBy32: GitRefOrder, $interactive30: Boolean, $first167: Int, $query71: String, $orderBy33: GitRefOrder, $interactive31: Boolean, $first168: Int, $query72: String, $revisionRange15: String, $after40: String, $path39: String, $first169: Int, $precise12: Boolean, $first170: Int, $query73: String, $after41: String, $cloned12: Boolean, $notCloned12: Boolean, $indexed12: Boolean, $notIndexed12: Boolean, $externalServiceID10: ID, $first171: Int, $recursive23: Boolean, $recursiveSingleChild15: Boolean, $path40: String, $recursive24: Boolean, $first172: Int, $recursive25: Boolean, $recursiveSingleChild16: Boolean, $path41: String!, $path42: String!, $first173: Int, $query74: String, $path43: String, $after42: String, $revspec6: String!, $rev15: String!, $inputRevspec15: String, $first174: Int, $first175: Int, $query75: String, $type16: GitRefType, $orderBy34: GitRefOrder, $interactive32: Boolean, $first176: Int, $query76: String, $orderBy35: GitRefOrder, $interactive33: Boolean, $first177: Int, $query77: String, $first178: Int, $first179: Int, $after43: String, $base5: String, $head5: String, $fetchMissing5: Boolean, $revisionRange16: String, $after44: String, $path44: String, $first180: Int, $username1: String, $email1: String, $first181: Int, $eventName11: String, $first182: Int, $first183: Int, $precise13: Boolean, $first184: Int, $query78: String, $after45: String, $cloned13: Boolean, $notCloned13: Boolean, $indexed13: Boolean, $notIndexed13: Boolean, $externalServiceID11: ID, $rev16: String!, $inputRevspec16: String, $first185: Int, $first186: Int, $query79: String, $type17: GitRefType, $orderBy36: GitRefOrder, $interactive34: Boolean, $first187: Int, $query80: String, $orderBy37: GitRefOrder, $interactive35: Boolean, $first188: Int, $query81: String, $revisionRange17: String, $after46: String, $path45: String, $first189: Int, $first190: Int, $query82: String, $tag1: String, $activePeriod1: UserActivePeriod, $first191: Int, $eventName12: String, $first192: Int, $first193: Int, $precise14: Boolean, $first194: Int, $query83: String, $after47: String, $cloned14: Boolean, $notCloned14: Boolean, $indexed14: Boolean, $notIndexed14: Boolean, $externalServiceID12: ID, $first195: Int, $eventName13: String, $first196: Int, $first197: Int, $precise15: Boolean, $first198: Int, $query84: String, $after48: String, $cloned15: Boolean, $notCloned15: Boolean, $indexed15: Boolean, $notIndexed15: Boolean, $externalServiceID13: ID, $first199: Int, $eventName14: String, $first200: Int, $first201: Int, $precise16: Boolean, $first202: Int, $query85: String, $after49: String, $cloned16: Boolean, $notCloned16: Boolean, $indexed16: Boolean, $notIndexed16: Boolean, $externalServiceID14: ID, $first203: Int, $eventName15: String, $first204: Int, $first205: Int, $precise17: Boolean, $first206: Int, $query86: String, $after50: String, $cloned17: Boolean, $notCloned17: Boolean, $indexed17: Boolean, $notIndexed17: Boolean, $externalServiceID15: ID, $name8: String!, $first207: Int, $query87: String, $markdown1: String!, $options1: MarkdownOptions, $code1: String!, $fuzzyLanguage1: String!, $disableTimeout3: Boolean!, $isLightTheme3: Boolean, $first208: Int, $eventName16: String, $first209: Int, $first210: Int, $precise18: Boolean, $first211: Int, $query88: String, $after51: String, $cloned18: Boolean, $notCloned18: Boolean, $indexed18: Boolean, $notIndexed18: Boolean, $externalServiceID16: ID, $id4: ID!, $rev17: String!, $inputRevspec17: String, $first212: Int, $first213: Int, $query89: String, $type18: GitRefType, $orderBy38: GitRefOrder, $interactive36: Boolean, $first214: Int, $query90: String, $orderBy39: GitRefOrder, $interactive37: Boolean, $first215: Int, $query91: String, $revisionRange18: String, $after52: String, $path46: String, $first216: Int, $rev18: String!, $inputRevspec18: String, $first217: Int, $first218: Int, $query92: String, $type19: GitRefType, $orderBy40: GitRefOrder, $interactive38: Boolean, $first219: Int, $query93: String, $orderBy41: GitRefOrder, $interactive39: Boolean, $first220: Int, $query94: String, $revisionRange19: String, $after53: String, $path47: String, $first221: Int, $rev19: String!, $inputRevspec19: String, $first222: Int, $first223: Int, $query95: String, $type20: GitRefType, $orderBy42: GitRefOrder, $interactive40: Boolean, $first224: Int, $query96: String, $orderBy43: GitRefOrder, $interactive41: Boolean, $first225: Int, $query97: String, $revisionRange20: String, $after54: String, $path48: String, $first226: Int, $rev20: String!, $inputRevspec20: String, $first227: Int, $first228: Int, $query98: String, $type21: GitRefType, $orderBy44: GitRefOrder, $interactive42: Boolean, $first229: Int, $query99: String, $orderBy45: GitRefOrder, $interactive43: Boolean, $first230: Int, $query100: String, $revisionRange21: String, $after55: String, $path49: String, $first231: Int, $first232: Int, $rev21: String!, $inputRevspec21: String, $first233: Int, $first234: Int, $query101: String, $type22: GitRefType, $orderBy46: GitRefOrder, $interactive44: Boolean, $first235: Int, $query102: String, $orderBy47: GitRefOrder, $interactive45: Boolean, $first236: Int, $query103: String, $revisionRange22: String, $after56: String, $path50: String, $first237: Int, $version1: SearchVersion, $patternType2: SearchPatternType, $query104: String, $versionContext1: String, $query105: String, $patternType3: SearchPatternType, $first238: Int, $eventName17: String, $first239: Int, $first240: Int, $precise19: Boolean, $first241: Int, $query106: String, $after57: String, $cloned19: Boolean, $notCloned19: Boolean, $indexed19: Boolean, $notIndexed19: Boolean, $externalServiceID17: ID, $first242: Int, $first243: Int, $user2: ID, $serviceType1: String, $serviceID1: String, $clientID1: String, $days2: Int, $weeks1: Int, $months1: Int, $days3: Int, $first244: Int, $eventName18: String, $first245: Int, $first246: Int, $precise20: Boolean, $first247: Int, $query107: String, $after58: String, $cloned20: Boolean, $notCloned20: Boolean, $indexed20: Boolean, $notIndexed20: Boolean, $externalServiceID18: ID, $first248: Int, $fields1: [String!]!, $extensionID1: String!, $fields2: [String!]!, $first249: Int, $publisher1: ID, $query108: String, $local1: Boolean, $remote1: Boolean, $extensionIDs1: [String!], $prioritizeExtensionIDs1: [String!], $first250: Int, $first251: Int, $eventName19: String, $first252: Int, $first253: Int, $precise21: Boolean, $first254: Int, $query109: String, $after59: String, $cloned21: Boolean, $notCloned21: Boolean, $indexed21: Boolean, $notIndexed21: Boolean, $externalServiceID19: ID, $fields3: [String!]!, $id5: ID!, $name9: String!, $user3: ID!, $codeHost1: ID, $query110: String, $ids1: [ID!]!, $seconds1: Int!) {\n    root {\n        root {\n            node (id: $id) {\n                id\n            }\n            repository (name: $name, cloneURL: $cloneURL, uri: $uri) {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev, inputRevspec: $inputRevspec) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path1) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first1, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first2, query: $query, path: $path3, after: $after) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first3) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first4, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first5, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first6, query: $query3) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first7) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first8, after: $after1) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange, after: $after2, path: $path4, first: $first9) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            repositoryRedirect (name: $name1, cloneURL: $cloneURL1) {\n                ... on Repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first10) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first11, query: $query4, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first12, query: $query5, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first13, query: $query6) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path5, first: $first14) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                ... on Redirect {\n                    url\n                }\n            }\n            externalServices (namespace: $namespace, first: $first15, after: $after4) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            repositories (first: $first21, query: $query10, after: $after6, names: $names, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, failedFetch: $failedFetch, orderBy: $orderBy6, descending: $descending) {\n                nodes {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first16) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first17, query: $query7, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first18, query: $query8, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first19, query: $query9) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after5, path: $path6, first: $first20) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                totalCount (precise: $precise)\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            phabricatorRepo (name: $name2, uri: $uri1) {\n                name\n                uri\n                callsign\n                url\n            }\n            currentUser {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first22, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first23) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first24) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first25, query: $query11, after: $after7, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise1)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first26) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first27, query: $query12, type: $type3, orderBy: $orderBy7, interactive: $interactive6) {\n                        totalCount\n                    }\n                    branches (first: $first28, query: $query13, orderBy: $orderBy8, interactive: $interactive7) {\n                        totalCount\n                    }\n                    tags (first: $first29, query: $query14) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after8, path: $path7, first: $first30) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            user (username: $username, email: $email) {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first31, eventName: $eventName1) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first32) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first33) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first34, query: $query15, after: $after9, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID1) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise2)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first35) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first36, query: $query16, type: $type4, orderBy: $orderBy9, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first37, query: $query17, orderBy: $orderBy10, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first38, query: $query18) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after10, path: $path8, first: $first39) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            users (first: $first44, query: $query20, tag: $tag, activePeriod: $activePeriod) {\n                nodes {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first40, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first41) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first42) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first43, query: $query19, after: $after11, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise3)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            organization (name: $name3) {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            organizations (first: $first45, query: $query21) {\n                nodes {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                totalCount\n            }\n            renderMarkdown (markdown: $markdown, options: $options)\n            highlightCode (code: $code, fuzzyLanguage: $fuzzyLanguage, disableTimeout: $disableTimeout, isLightTheme: $isLightTheme)\n            settingsSubject (id: $id1) {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            viewerSettings {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            viewerConfiguration {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            clientConfiguration {\n                contentScriptUrls\n                parentSourcegraph {\n                    url\n                }\n            }\n            searchFilterSuggestions {\n                repogroup\n                repo\n            }\n            search (version: $version, patternType: $patternType, query: $query22, versionContext: $versionContext) {\n                results {\n                    results {\n                        ... on FileMatch {\n                            revSpec {\n                                ... on GitRef {\n                                    id\n                                    name\n                                    abbrevName\n                                    displayName\n                                    prefix\n                                    type\n                                    url\n                                }\n                                ... on GitRevSpecExpr {\n                                    expr\n                                }\n                                ... on GitObject {\n                                    oid\n                                    abbreviatedOID\n                                    type\n                                }\n                            }\n                            limitHit\n                        }\n                        ... on CommitSearchResult {\n                            url\n                        }\n                        ... on Repository {\n                            id\n                            name\n                            uri\n                            description\n                            language\n                            createdAt\n                            updatedAt\n                            isFork\n                            isArchived\n                            isPrivate\n                            cloneInProgress\n                            url\n                            viewerCanAdminister\n                            stars\n                        }\n                    }\n                    matchCount\n                    resultCount\n                    approximateResultCount\n                    limitHit\n                    sparkline\n                    repositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    repositoriesCount\n                    cloning {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    missing {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    timedout {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    indexUnavailable\n                    alert {\n                        title\n                        description\n                    }\n                    elapsedMilliseconds\n                    dynamicFilters {\n                        value\n                        label\n                        count\n                        limitHit\n                        kind\n                    }\n                }\n                suggestions (first: $first46) {\n                    ... on Repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    ... on File {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    ... on Symbol {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    ... on Language {\n                        name\n                    }\n                }\n                stats {\n                    approximateResultCount\n                    sparkline\n                    languages {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                }\n            }\n            savedSearches {\n                id\n                description\n                query\n                notify\n                notifySlack\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                slackWebhookURL\n            }\n            repoGroups {\n                name\n                repositories\n            }\n            versionContexts {\n                name\n                description\n            }\n            parseSearchQuery (query: $query23, patternType: $patternType1)\n            site {\n                id\n                siteID\n                configuration {\n                    id\n                    effectiveContents\n                    validationMessages\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                canReloadSite\n                viewerCanAdminister\n                accessTokens (first: $first47) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                authProviders {\n                    nodes {\n                        serviceType\n                        serviceID\n                        clientID\n                        displayName\n                        isBuiltin\n                        authenticationURL\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first48, user: $user, serviceType: $serviceType, serviceID: $serviceID, clientID: $clientID) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                buildVersion\n                productVersion\n                updateCheck {\n                    pending\n                    checkedAt\n                    errorMessage\n                    updateVersionAvailable\n                }\n                needsRepositoryConfiguration\n                freeUsersExceeded\n                alerts {\n                    type\n                    message\n                    isDismissibleWithKey\n                }\n                hasCodeIntelligence\n                disableBuiltInSearches\n                sendsEmailVerificationEmails\n                productSubscription {\n                    productNameWithBrand\n                    actualUserCount\n                    actualUserCountDate\n                    maximumAllowedUserCount\n                    noLicenseWarningUserCount\n                    license {\n                        productNameWithBrand\n                        tags\n                        userCount\n                        expiresAt\n                    }\n                }\n                usageStatistics (days: $days, weeks: $weeks, months: $months) {\n                    daus {\n                        startTime\n                        userCount\n                        registeredUserCount\n                        anonymousUserCount\n                        integrationUserCount\n                    }\n                    waus {\n                        startTime\n                        userCount\n                        registeredUserCount\n                        anonymousUserCount\n                        integrationUserCount\n                    }\n                    maus {\n                        startTime\n                        userCount\n                        registeredUserCount\n                        anonymousUserCount\n                        integrationUserCount\n                    }\n                }\n                monitoringStatistics (days: $days1) {\n                    alerts {\n                        timestamp\n                        name\n                        serviceName\n                        owner\n                        average\n                    }\n                }\n                allowSiteSettingsEdits\n            }\n            surveyResponses (first: $first49) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                totalCount\n                last30DaysCount\n                averageScore\n                netPromoterScore\n            }\n            extensionRegistry {\n                extension (extensionID: $extensionID) {\n                    id\n                    uuid\n                    publisher {\n                        ... on User {\n                            id\n                            username\n                            email\n                            displayName\n                            avatarURL\n                            url\n                            settingsURL\n                            createdAt\n                            updatedAt\n                            siteAdmin\n                            builtinAuth\n                            tags\n                            viewerCanAdminister\n                            viewerCanChangeUsername\n                            databaseID\n                            namespaceName\n                        }\n                        ... on Org {\n                            id\n                            name\n                            displayName\n                            createdAt\n                            viewerCanAdminister\n                            viewerIsMember\n                            url\n                            settingsURL\n                            namespaceName\n                        }\n                    }\n                    extensionID\n                    extensionIDWithoutRegistry\n                    name\n                    manifest {\n                        raw\n                        jsonFields (fields: $fields)\n                        description\n                        bundleURL\n                    }\n                    createdAt\n                    updatedAt\n                    publishedAt\n                    url\n                    remoteURL\n                    registryName\n                    isLocal\n                    isWorkInProgress\n                    viewerCanAdminister\n                }\n                extensions (first: $first50, publisher: $publisher, query: $query24, local: $local, remote: $remote, extensionIDs: $extensionIDs, prioritizeExtensionIDs: $prioritizeExtensionIDs) {\n                    nodes {\n                        id\n                        uuid\n                        publisher {\n                            ... on User {\n                                id\n                                username\n                                email\n                                displayName\n                                avatarURL\n                                url\n                                settingsURL\n                                createdAt\n                                updatedAt\n                                siteAdmin\n                                builtinAuth\n                                tags\n                                viewerCanAdminister\n                                viewerCanChangeUsername\n                                databaseID\n                                namespaceName\n                            }\n                            ... on Org {\n                                id\n                                name\n                                displayName\n                                createdAt\n                                viewerCanAdminister\n                                viewerIsMember\n                                url\n                                settingsURL\n                                namespaceName\n                            }\n                        }\n                        extensionID\n                        extensionIDWithoutRegistry\n                        name\n                        createdAt\n                        updatedAt\n                        publishedAt\n                        url\n                        remoteURL\n                        registryName\n                        isLocal\n                        isWorkInProgress\n                        viewerCanAdminister\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    url\n                    error\n                }\n                publishers (first: $first51) {\n                    nodes {\n                        ... on User {\n                            id\n                            username\n                            email\n                            displayName\n                            avatarURL\n                            url\n                            settingsURL\n                            createdAt\n                            updatedAt\n                            siteAdmin\n                            builtinAuth\n                            tags\n                            viewerCanAdminister\n                            viewerCanChangeUsername\n                            databaseID\n                            namespaceName\n                        }\n                        ... on Org {\n                            id\n                            name\n                            displayName\n                            createdAt\n                            viewerCanAdminister\n                            viewerIsMember\n                            url\n                            settingsURL\n                            namespaceName\n                        }\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerPublishers {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                localExtensionIDPrefix\n                featuredExtensions {\n                    nodes {\n                        id\n                        uuid\n                        publisher {\n                            ... on User {\n                                id\n                                username\n                                email\n                                displayName\n                                avatarURL\n                                url\n                                settingsURL\n                                createdAt\n                                updatedAt\n                                siteAdmin\n                                builtinAuth\n                                tags\n                                viewerCanAdminister\n                                viewerCanChangeUsername\n                                databaseID\n                                namespaceName\n                            }\n                            ... on Org {\n                                id\n                                name\n                                displayName\n                                createdAt\n                                viewerCanAdminister\n                                viewerIsMember\n                                url\n                                settingsURL\n                                namespaceName\n                            }\n                        }\n                        extensionID\n                        extensionIDWithoutRegistry\n                        name\n                        createdAt\n                        updatedAt\n                        publishedAt\n                        url\n                        remoteURL\n                        registryName\n                        isLocal\n                        isWorkInProgress\n                        viewerCanAdminister\n                    }\n                    error\n                }\n            }\n            statusMessages {\n                ... on CloningProgress {\n                    message\n                }\n                ... on IndexingProgress {\n                    message\n                }\n                ... on ExternalServiceSyncError {\n                    message\n                    externalService {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                }\n                ... on SyncError {\n                    message\n                }\n                ... on IndexingError {\n                    message\n                }\n            }\n            repositoryStats {\n                gitDirBytes\n                indexedLinesCount\n            }\n            namespace (id: $id2) {\n                id\n                namespaceName\n                url\n            }\n            namespaceByName (name: $name4) {\n                id\n                namespaceName\n                url\n            }\n            affiliatedRepositories (user: $user1, codeHost: $codeHost, query: $query25) {\n                nodes {\n                    name\n                    codeHost {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    private\n                }\n            }\n            codeHostSyncDue (ids: $ids, seconds: $seconds)\n            outOfBandMigrations {\n                id\n                team\n                component\n                description\n                introduced\n                deprecated\n                progress\n                created\n                lastUpdated\n                nonDestructive\n                applyReverse\n                errors {\n                    message\n                    created\n                }\n            }\n            featureFlags {\n                ... on FeatureFlagBoolean {\n                    name\n                    value\n                    overrides {\n                        id\n                        targetFlag {\n                            ... on FeatureFlagBoolean {\n                                name\n                                value\n                            }\n                            ... on FeatureFlagRollout {\n                                name\n                                rolloutBasisPoints\n                            }\n                        }\n                        value\n                    }\n                }\n                ... on FeatureFlagRollout {\n                    name\n                    rolloutBasisPoints\n                    overrides {\n                        id\n                        targetFlag {\n                            ... on FeatureFlagBoolean {\n                                name\n                                value\n                            }\n                            ... on FeatureFlagRollout {\n                                name\n                                rolloutBasisPoints\n                            }\n                        }\n                        value\n                    }\n                }\n            }\n            viewerFeatureFlags {\n                name\n                value\n            }\n            temporarySettings {\n                contents\n            }\n        }\n        node (id: $id3) {\n            id\n        }\n        repository (name: $name5, cloneURL: $cloneURL2, uri: $uri2) {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first52) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first53, query: $query26, type: $type5, orderBy: $orderBy11, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first54, query: $query27, orderBy: $orderBy12, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first55, query: $query28) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange5, after: $after12, path: $path9, first: $first56) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path10, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first57, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    fileNames\n                    blob (path: $path11) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first58, recursive: $recursive5, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    file (path: $path12) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first59, query: $query29, path: $path13, after: $after13) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec1) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path14, recursive: $recursive12) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first61, recursive: $recursive7) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first60, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild4)\n                    }\n                    files (first: $first62, recursive: $recursive8) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first64, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first63, recursive: $recursive9, recursiveSingleChild: $recursiveSingleChild5)\n                    }\n                    isSingleChild (first: $first65, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                }\n                fileNames\n                blob (path: $path15) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first66, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild8)\n                }\n                file (path: $path16) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout2, isLightTheme: $isLightTheme2, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first67, query: $query30, path: $path17, after: $after14) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec2) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first68, query: $query31, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first69) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first70) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first71, query: $query32, type: $type6, orderBy: $orderBy13, interactive: $interactive12) {\n                        totalCount\n                    }\n                    branches (first: $first72, query: $query33, orderBy: $orderBy14, interactive: $interactive13) {\n                        totalCount\n                    }\n                    tags (first: $first73, query: $query34) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after15, path: $path18, first: $first74) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first75) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    gitRefs (first: $first76, query: $query35, type: $type7, orderBy: $orderBy15, interactive: $interactive14) {\n                        totalCount\n                    }\n                    branches (first: $first77, query: $query36, orderBy: $orderBy16, interactive: $interactive15) {\n                        totalCount\n                    }\n                    tags (first: $first78, query: $query37) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after16, path: $path19, first: $first79) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first80, query: $query38, type: $type8, orderBy: $orderBy17, interactive: $interactive16) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first81, query: $query39, orderBy: $orderBy18, interactive: $interactive17) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first82, query: $query40) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first83) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first84, query: $query41, type: $type9, orderBy: $orderBy19, interactive: $interactive18) {\n                        totalCount\n                    }\n                    branches (first: $first85, query: $query42, orderBy: $orderBy20, interactive: $interactive19) {\n                        totalCount\n                    }\n                    tags (first: $first86, query: $query43) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after17, path: $path20, first: $first87) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev9, inputRevspec: $inputRevspec9) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first88) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first89, query: $query44, type: $type10, orderBy: $orderBy21, interactive: $interactive20) {\n                        totalCount\n                    }\n                    branches (first: $first90, query: $query45, orderBy: $orderBy22, interactive: $interactive21) {\n                        totalCount\n                    }\n                    tags (first: $first91, query: $query46) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange9, after: $after18, path: $path21, first: $first92) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first93) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first94, after: $after19) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange10, after: $after20, path: $path22, first: $first96) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first95) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n        repositoryRedirect (name: $name6, cloneURL: $cloneURL3) {\n            ... on Repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev10, inputRevspec: $inputRevspec10) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path23, recursive: $recursive15) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first97, recursive: $recursive14, recursiveSingleChild: $recursiveSingleChild9)\n                    }\n                    fileNames\n                    blob (path: $path24) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first98, recursive: $recursive16, recursiveSingleChild: $recursiveSingleChild10)\n                    }\n                    file (path: $path25) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first99, query: $query47, path: $path26, after: $after21) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec3) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first100) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first101, query: $query48, type: $type11, orderBy: $orderBy23, interactive: $interactive22) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first102, query: $query49, orderBy: $orderBy24, interactive: $interactive23) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first103, query: $query50) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base2, head: $head2, fetchMissing: $fetchMissing2) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first104) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first105, after: $after22) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange11, after: $after23, path: $path27, first: $first106) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            ... on Redirect {\n                url\n            }\n        }\n        externalServices (namespace: $namespace1, first: $first107, after: $after24) {\n            nodes {\n                id\n                kind\n                displayName\n                config\n                createdAt\n                updatedAt\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                repoCount\n                webhookURL\n                warning\n                lastSyncError\n                lastSyncAt\n                nextSyncAt\n                grantedScopes\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        repositories (first: $first118, query: $query55, after: $after28, names: $names1, cloned: $cloned4, notCloned: $notCloned4, indexed: $indexed4, notIndexed: $notIndexed4, failedFetch: $failedFetch1, orderBy: $orderBy27, descending: $descending1) {\n            nodes {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev11, inputRevspec: $inputRevspec11) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path28, recursive: $recursive18) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first108, recursive: $recursive17, recursiveSingleChild: $recursiveSingleChild11)\n                    }\n                    fileNames\n                    blob (path: $path29) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first109, recursive: $recursive19, recursiveSingleChild: $recursiveSingleChild12)\n                    }\n                    file (path: $path30) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first110, query: $query51, path: $path31, after: $after25) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec4) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first111) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first112, query: $query52, type: $type12, orderBy: $orderBy25, interactive: $interactive24) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first113, query: $query53, orderBy: $orderBy26, interactive: $interactive25) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first114, query: $query54) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base3, head: $head3, fetchMissing: $fetchMissing3) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first115) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first116, after: $after26) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange12, after: $after27, path: $path32, first: $first117) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            totalCount (precise: $precise4)\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        phabricatorRepo (name: $name7, uri: $uri3) {\n            name\n            uri\n            callsign\n            url\n        }\n        currentUser {\n            id\n            username\n            email\n            displayName\n            avatarURL\n            url\n            settingsURL\n            createdAt\n            updatedAt\n            siteAdmin\n            builtinAuth\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first119, eventName: $eventName3) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first120) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first121) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first122, query: $query56, after: $after29, cloned: $cloned5, notCloned: $notCloned5, indexed: $indexed5, notIndexed: $notIndexed5, externalServiceID: $externalServiceID3) {\n                        totalCount (precise: $precise5)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            organizations {\n                nodes {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                totalCount\n            }\n            organizationMemberships {\n                nodes {\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    updatedAt\n                }\n                totalCount\n            }\n            tags\n            usageStatistics {\n                searchQueries\n                pageViews\n                codeIntelligenceActions\n                findReferencesActions\n                lastActiveTime\n                lastActiveCodeHostIntegrationTime\n            }\n            eventLogs (first: $first123, eventName: $eventName4) {\n                nodes {\n                    name\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    anonymousUserID\n                    url\n                    source\n                    argument\n                    version\n                    timestamp\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            emails {\n                email\n                isPrimary\n                verified\n                verificationPending\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first124, eventName: $eventName5) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first125) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first126) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first127, query: $query57, after: $after30, cloned: $cloned6, notCloned: $notCloned6, indexed: $indexed6, notIndexed: $notIndexed6, externalServiceID: $externalServiceID4) {\n                        totalCount (precise: $precise6)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                viewerCanManuallyVerify\n            }\n            accessTokens (first: $first128) {\n                nodes {\n                    id\n                    subject {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    scopes\n                    note\n                    creator {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    lastUsedAt\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            externalAccounts (first: $first129) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    serviceType\n                    serviceID\n                    clientID\n                    accountID\n                    createdAt\n                    updatedAt\n                    refreshURL\n                    accountData\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            session {\n                canSignOut\n            }\n            viewerCanAdminister\n            viewerCanChangeUsername\n            surveyResponses {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first130, eventName: $eventName6) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first131) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first132) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first133, query: $query58, after: $after31, cloned: $cloned7, notCloned: $notCloned7, indexed: $indexed7, notIndexed: $notIndexed7, externalServiceID: $externalServiceID5) {\n                        totalCount (precise: $precise7)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                email\n                score\n                reason\n                better\n                createdAt\n            }\n            databaseID\n            namespaceName\n            repositories (first: $first139, query: $query62, after: $after33, cloned: $cloned8, notCloned: $notCloned8, indexed: $indexed8, notIndexed: $notIndexed8, externalServiceID: $externalServiceID6) {\n                nodes {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev12, inputRevspec: $inputRevspec12) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first134) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first135, query: $query59, type: $type13, orderBy: $orderBy28, interactive: $interactive26) {\n                        totalCount\n                    }\n                    branches (first: $first136, query: $query60, orderBy: $orderBy29, interactive: $interactive27) {\n                        totalCount\n                    }\n                    tags (first: $first137, query: $query61) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange13, after: $after32, path: $path33, first: $first138) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                totalCount (precise: $precise8)\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            publicRepositories {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev13, inputRevspec: $inputRevspec13) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path34, recursive: $recursive21) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first140, recursive: $recursive20, recursiveSingleChild: $recursiveSingleChild13)\n                    }\n                    fileNames\n                    blob (path: $path35) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first141, recursive: $recursive22, recursiveSingleChild: $recursiveSingleChild14)\n                    }\n                    file (path: $path36) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first142, query: $query63, path: $path37, after: $after34) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec5) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first143) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first144, query: $query64, type: $type14, orderBy: $orderBy30, interactive: $interactive28) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first145, query: $query65, orderBy: $orderBy31, interactive: $interactive29) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first146, query: $query66) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base4, head: $head4, fetchMissing: $fetchMissing4) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first147) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first148, after: $after35) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange14, after: $after36, path: $path38, first: $first149) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n        }\n        user (username: $username1, email: $email1) {\n            id\n            username\n            email\n            displayName\n            avatarURL\n            url\n            settingsURL\n            createdAt\n            updatedAt\n            siteAdmin\n            builtinAuth\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first150, eventName: $eventName7) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first151) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first152) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first153, query: $query67, after: $after37, cloned: $cloned9, notCloned: $notCloned9, indexed: $indexed9, notIndexed: $notIndexed9, externalServiceID: $externalServiceID7) {\n                        totalCount (precise: $precise9)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            organizations {\n                nodes {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                totalCount\n            }\n            organizationMemberships {\n                nodes {\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    updatedAt\n                }\n                totalCount\n            }\n            tags\n            usageStatistics {\n                searchQueries\n                pageViews\n                codeIntelligenceActions\n                findReferencesActions\n                lastActiveTime\n                lastActiveCodeHostIntegrationTime\n            }\n            eventLogs (first: $first154, eventName: $eventName8) {\n                nodes {\n                    name\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    anonymousUserID\n                    url\n                    source\n                    argument\n                    version\n                    timestamp\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            emails {\n                email\n                isPrimary\n                verified\n                verificationPending\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first155, eventName: $eventName9) {\n                        totalCount\n                    }\n                    accessTokens (first: $first156) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first157) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first158, query: $query68, after: $after38, cloned: $cloned10, notCloned: $notCloned10, indexed: $indexed10, notIndexed: $notIndexed10, externalServiceID: $externalServiceID8) {\n                        totalCount (precise: $precise10)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                viewerCanManuallyVerify\n            }\n            accessTokens (first: $first159) {\n                nodes {\n                    id\n                    subject {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    scopes\n                    note\n                    creator {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    lastUsedAt\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            externalAccounts (first: $first160) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    serviceType\n                    serviceID\n                    clientID\n                    accountID\n                    createdAt\n                    updatedAt\n                    refreshURL\n                    accountData\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            session {\n                canSignOut\n            }\n            viewerCanAdminister\n            viewerCanChangeUsername\n            surveyResponses {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first161, eventName: $eventName10) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first162) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first163) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    databaseID\n                    namespaceName\n                    repositories (first: $first164, query: $query69, after: $after39, cloned: $cloned11, notCloned: $notCloned11, indexed: $indexed11, notIndexed: $notIndexed11, externalServiceID: $externalServiceID9) {\n                        totalCount (precise: $precise11)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                email\n                score\n                reason\n                better\n                createdAt\n            }\n            databaseID\n            namespaceName\n            repositories (first: $first170, query: $query73, after: $after41, cloned: $cloned12, notCloned: $notCloned12, indexed: $indexed12, notIndexed: $notIndexed12, externalServiceID: $externalServiceID10) {\n                nodes {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev14, inputRevspec: $inputRevspec14) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first165) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first166, query: $query70, type: $type15, orderBy: $orderBy32, interactive: $interactive30) {\n                        totalCount\n                    }\n                    branches (first: $first167, query: $query71, orderBy: $orderBy33, interactive: $interactive31) {\n                        totalCount\n                    }\n                    tags (first: $first168, query: $query72) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange15, after: $after40, path: $path39, first: $first169) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                totalCount (precise: $precise12)\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            publicRepositories {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev15, inputRevspec: $inputRevspec15) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path40, recursive: $recursive24) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first171, recursive: $recursive23, recursiveSingleChild: $recursiveSingleChild15)\n                    }\n                    fileNames\n                    blob (path: $path41) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first172, recursive: $recursive25, recursiveSingleChild: $recursiveSingleChild16)\n                    }\n                    file (path: $path42) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first173, query: $query74, path: $path43, after: $after42) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec6) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first174) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first175, query: $query75, type: $type16, orderBy: $orderBy34, interactive: $interactive32) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first176, query: $query76, orderBy: $orderBy35, interactive: $interactive33) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first177, query: $query77) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base5, head: $head5, fetchMissing: $fetchMissing5) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first178) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first179, after: $after43) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange16, after: $after44, path: $path44, first: $first180) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n        }\n        users (first: $first190, query: $query82, tag: $tag1, activePeriod: $activePeriod1) {\n            nodes {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first181, eventName: $eventName11) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first182) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first183) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first184, query: $query78, after: $after45, cloned: $cloned13, notCloned: $notCloned13, indexed: $indexed13, notIndexed: $notIndexed13, externalServiceID: $externalServiceID11) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise13)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev16, inputRevspec: $inputRevspec16) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first185) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first186, query: $query79, type: $type17, orderBy: $orderBy36, interactive: $interactive34) {\n                        totalCount\n                    }\n                    branches (first: $first187, query: $query80, orderBy: $orderBy37, interactive: $interactive35) {\n                        totalCount\n                    }\n                    tags (first: $first188, query: $query81) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange17, after: $after46, path: $path45, first: $first189) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        organization (name: $name8) {\n            id\n            name\n            displayName\n            createdAt\n            members {\n                nodes {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first191, eventName: $eventName12) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first192) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first193) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first194, query: $query83, after: $after47, cloned: $cloned14, notCloned: $notCloned14, indexed: $indexed14, notIndexed: $notIndexed14, externalServiceID: $externalServiceID12) {\n                        totalCount (precise: $precise14)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first195, eventName: $eventName13) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first196) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first197) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first198, query: $query84, after: $after48, cloned: $cloned15, notCloned: $notCloned15, indexed: $indexed15, notIndexed: $notIndexed15, externalServiceID: $externalServiceID13) {\n                        totalCount (precise: $precise15)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            viewerPendingInvitation {\n                id\n                organization {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                sender {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first199, eventName: $eventName14) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first200) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first201) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first202, query: $query85, after: $after49, cloned: $cloned16, notCloned: $notCloned16, indexed: $indexed16, notIndexed: $notIndexed16, externalServiceID: $externalServiceID14) {\n                        totalCount (precise: $precise16)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                recipient {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first203, eventName: $eventName15) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first204) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first205) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first206, query: $query86, after: $after50, cloned: $cloned17, notCloned: $notCloned17, indexed: $indexed17, notIndexed: $notIndexed17, externalServiceID: $externalServiceID15) {\n                        totalCount (precise: $precise17)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                notifiedAt\n                respondedAt\n                responseType\n                respondURL\n                revokedAt\n            }\n            viewerCanAdminister\n            viewerIsMember\n            url\n            settingsURL\n            namespaceName\n        }\n        organizations (first: $first207, query: $query87) {\n            nodes {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            totalCount\n        }\n        renderMarkdown (markdown: $markdown1, options: $options1)\n        highlightCode (code: $code1, fuzzyLanguage: $fuzzyLanguage1, disableTimeout: $disableTimeout3, isLightTheme: $isLightTheme3)\n        settingsSubject (id: $id4) {\n            id\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first208, eventName: $eventName16) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first209) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first210) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first211, query: $query88, after: $after51, cloned: $cloned18, notCloned: $notCloned18, indexed: $indexed18, notIndexed: $notIndexed18, externalServiceID: $externalServiceID16) {\n                        totalCount (precise: $precise18)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsURL\n            viewerCanAdminister\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n        }\n        viewerSettings {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        viewerConfiguration {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        clientConfiguration {\n            contentScriptUrls\n            parentSourcegraph {\n                url\n            }\n        }\n        searchFilterSuggestions {\n            repogroup\n            repo\n        }\n        search (version: $version1, patternType: $patternType2, query: $query104, versionContext: $versionContext1) {\n            results {\n                results {\n                    ... on FileMatch {\n                        revSpec {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        limitHit\n                    }\n                    ... on CommitSearchResult {\n                        url\n                    }\n                    ... on Repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                matchCount\n                resultCount\n                approximateResultCount\n                limitHit\n                sparkline\n                repositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev17, inputRevspec: $inputRevspec17) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first212) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first213, query: $query89, type: $type18, orderBy: $orderBy38, interactive: $interactive36) {\n                        totalCount\n                    }\n                    branches (first: $first214, query: $query90, orderBy: $orderBy39, interactive: $interactive37) {\n                        totalCount\n                    }\n                    tags (first: $first215, query: $query91) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange18, after: $after52, path: $path46, first: $first216) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                repositoriesCount\n                cloning {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev18, inputRevspec: $inputRevspec18) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first217) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first218, query: $query92, type: $type19, orderBy: $orderBy40, interactive: $interactive38) {\n                        totalCount\n                    }\n                    branches (first: $first219, query: $query93, orderBy: $orderBy41, interactive: $interactive39) {\n                        totalCount\n                    }\n                    tags (first: $first220, query: $query94) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange19, after: $after53, path: $path47, first: $first221) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                missing {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev19, inputRevspec: $inputRevspec19) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first222) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first223, query: $query95, type: $type20, orderBy: $orderBy42, interactive: $interactive40) {\n                        totalCount\n                    }\n                    branches (first: $first224, query: $query96, orderBy: $orderBy43, interactive: $interactive41) {\n                        totalCount\n                    }\n                    tags (first: $first225, query: $query97) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange20, after: $after54, path: $path48, first: $first226) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                timedout {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev20, inputRevspec: $inputRevspec20) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first227) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first228, query: $query98, type: $type21, orderBy: $orderBy44, interactive: $interactive42) {\n                        totalCount\n                    }\n                    branches (first: $first229, query: $query99, orderBy: $orderBy45, interactive: $interactive43) {\n                        totalCount\n                    }\n                    tags (first: $first230, query: $query100) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange21, after: $after55, path: $path49, first: $first231) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                indexUnavailable\n                alert {\n                    title\n                    description\n                    proposedQueries {\n                        description\n                        query\n                    }\n                }\n                elapsedMilliseconds\n                dynamicFilters {\n                    value\n                    label\n                    count\n                    limitHit\n                    kind\n                }\n            }\n            suggestions (first: $first232) {\n                ... on Repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev21, inputRevspec: $inputRevspec21) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first233) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first234, query: $query101, type: $type22, orderBy: $orderBy46, interactive: $interactive44) {\n                        totalCount\n                    }\n                    branches (first: $first235, query: $query102, orderBy: $orderBy47, interactive: $interactive45) {\n                        totalCount\n                    }\n                    tags (first: $first236, query: $query103) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange22, after: $after56, path: $path50, first: $first237) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                ... on File {\n                    path\n                    name\n                    isDirectory\n                    url\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                ... on Symbol {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                ... on Language {\n                    name\n                }\n            }\n            stats {\n                approximateResultCount\n                sparkline\n                languages {\n                    name\n                    totalBytes\n                    totalLines\n                }\n            }\n        }\n        savedSearches {\n            id\n            description\n            query\n            notify\n            notifySlack\n            namespace {\n                id\n                namespaceName\n                url\n            }\n            slackWebhookURL\n        }\n        repoGroups {\n            name\n            repositories\n        }\n        versionContexts {\n            name\n            description\n        }\n        parseSearchQuery (query: $query105, patternType: $patternType3)\n        site {\n            id\n            siteID\n            configuration {\n                id\n                effectiveContents\n                validationMessages\n            }\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first238, eventName: $eventName17) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first239) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first240) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first241, query: $query106, after: $after57, cloned: $cloned19, notCloned: $notCloned19, indexed: $indexed19, notIndexed: $notIndexed19, externalServiceID: $externalServiceID17) {\n                        totalCount (precise: $precise19)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            settingsURL\n            canReloadSite\n            viewerCanAdminister\n            accessTokens (first: $first242) {\n                nodes {\n                    id\n                    subject {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    scopes\n                    note\n                    creator {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    lastUsedAt\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            authProviders {\n                nodes {\n                    serviceType\n                    serviceID\n                    clientID\n                    displayName\n                    isBuiltin\n                    authenticationURL\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            externalAccounts (first: $first243, user: $user2, serviceType: $serviceType1, serviceID: $serviceID1, clientID: $clientID1) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    serviceType\n                    serviceID\n                    clientID\n                    accountID\n                    createdAt\n                    updatedAt\n                    refreshURL\n                    accountData\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            buildVersion\n            productVersion\n            updateCheck {\n                pending\n                checkedAt\n                errorMessage\n                updateVersionAvailable\n            }\n            needsRepositoryConfiguration\n            freeUsersExceeded\n            alerts {\n                type\n                message\n                isDismissibleWithKey\n            }\n            hasCodeIntelligence\n            disableBuiltInSearches\n            sendsEmailVerificationEmails\n            productSubscription {\n                productNameWithBrand\n                actualUserCount\n                actualUserCountDate\n                maximumAllowedUserCount\n                noLicenseWarningUserCount\n                license {\n                    productNameWithBrand\n                    tags\n                    userCount\n                    expiresAt\n                }\n            }\n            usageStatistics (days: $days2, weeks: $weeks1, months: $months1) {\n                daus {\n                    startTime\n                    userCount\n                    registeredUserCount\n                    anonymousUserCount\n                    integrationUserCount\n                }\n                waus {\n                    startTime\n                    userCount\n                    registeredUserCount\n                    anonymousUserCount\n                    integrationUserCount\n                }\n                maus {\n                    startTime\n                    userCount\n                    registeredUserCount\n                    anonymousUserCount\n                    integrationUserCount\n                }\n            }\n            monitoringStatistics (days: $days3) {\n                alerts {\n                    timestamp\n                    name\n                    serviceName\n                    owner\n                    average\n                }\n            }\n            allowSiteSettingsEdits\n        }\n        surveyResponses (first: $first248) {\n            nodes {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first244, eventName: $eventName18) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first245) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first246) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first247, query: $query107, after: $after58, cloned: $cloned20, notCloned: $notCloned20, indexed: $indexed20, notIndexed: $notIndexed20, externalServiceID: $externalServiceID18) {\n                        totalCount (precise: $precise20)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                email\n                score\n                reason\n                better\n                createdAt\n            }\n            totalCount\n            last30DaysCount\n            averageScore\n            netPromoterScore\n        }\n        extensionRegistry {\n            extension (extensionID: $extensionID1) {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields1)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n            extensions (first: $first249, publisher: $publisher1, query: $query108, local: $local1, remote: $remote1, extensionIDs: $extensionIDs1, prioritizeExtensionIDs: $prioritizeExtensionIDs1) {\n                nodes {\n                    id\n                    uuid\n                    publisher {\n                        ... on User {\n                            id\n                            username\n                            email\n                            displayName\n                            avatarURL\n                            url\n                            settingsURL\n                            createdAt\n                            updatedAt\n                            siteAdmin\n                            builtinAuth\n                            tags\n                            viewerCanAdminister\n                            viewerCanChangeUsername\n                            databaseID\n                            namespaceName\n                        }\n                        ... on Org {\n                            id\n                            name\n                            displayName\n                            createdAt\n                            viewerCanAdminister\n                            viewerIsMember\n                            url\n                            settingsURL\n                            namespaceName\n                        }\n                    }\n                    extensionID\n                    extensionIDWithoutRegistry\n                    name\n                    manifest {\n                        raw\n                        jsonFields (fields: $fields2)\n                        description\n                        bundleURL\n                    }\n                    createdAt\n                    updatedAt\n                    publishedAt\n                    url\n                    remoteURL\n                    registryName\n                    isLocal\n                    isWorkInProgress\n                    viewerCanAdminister\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n                url\n                error\n            }\n            publishers (first: $first250) {\n                nodes {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerPublishers {\n                ... on User {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first251, eventName: $eventName19) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first252) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first253) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first254, query: $query109, after: $after59, cloned: $cloned21, notCloned: $notCloned21, indexed: $indexed21, notIndexed: $notIndexed21, externalServiceID: $externalServiceID19) {\n                        totalCount (precise: $precise21)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                ... on Org {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n            }\n            localExtensionIDPrefix\n            featuredExtensions {\n                nodes {\n                    id\n                    uuid\n                    publisher {\n                        ... on User {\n                            id\n                            username\n                            email\n                            displayName\n                            avatarURL\n                            url\n                            settingsURL\n                            createdAt\n                            updatedAt\n                            siteAdmin\n                            builtinAuth\n                            tags\n                            viewerCanAdminister\n                            viewerCanChangeUsername\n                            databaseID\n                            namespaceName\n                        }\n                        ... on Org {\n                            id\n                            name\n                            displayName\n                            createdAt\n                            viewerCanAdminister\n                            viewerIsMember\n                            url\n                            settingsURL\n                            namespaceName\n                        }\n                    }\n                    extensionID\n                    extensionIDWithoutRegistry\n                    name\n                    manifest {\n                        raw\n                        jsonFields (fields: $fields3)\n                        description\n                        bundleURL\n                    }\n                    createdAt\n                    updatedAt\n                    publishedAt\n                    url\n                    remoteURL\n                    registryName\n                    isLocal\n                    isWorkInProgress\n                    viewerCanAdminister\n                }\n                error\n            }\n        }\n        statusMessages {\n            ... on CloningProgress {\n                message\n            }\n            ... on IndexingProgress {\n                message\n            }\n            ... on ExternalServiceSyncError {\n                message\n                externalService {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n            }\n            ... on SyncError {\n                message\n            }\n            ... on IndexingError {\n                message\n            }\n        }\n        repositoryStats {\n            gitDirBytes\n            indexedLinesCount\n        }\n        namespace (id: $id5) {\n            id\n            namespaceName\n            url\n        }\n        namespaceByName (name: $name9) {\n            id\n            namespaceName\n            url\n        }\n        affiliatedRepositories (user: $user3, codeHost: $codeHost1, query: $query110) {\n            nodes {\n                name\n                codeHost {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                private\n            }\n        }\n        codeHostSyncDue (ids: $ids1, seconds: $seconds1)\n        outOfBandMigrations {\n            id\n            team\n            component\n            description\n            introduced\n            deprecated\n            progress\n            created\n            lastUpdated\n            nonDestructive\n            applyReverse\n            errors {\n                message\n                created\n            }\n        }\n        featureFlags {\n            ... on FeatureFlagBoolean {\n                name\n                value\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n            ... on FeatureFlagRollout {\n                name\n                rolloutBasisPoints\n                overrides {\n                    id\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    targetFlag {\n                        ... on FeatureFlagBoolean {\n                            name\n                            value\n                        }\n                        ... on FeatureFlagRollout {\n                            name\n                            rolloutBasisPoints\n                        }\n                    }\n                    value\n                }\n            }\n        }\n        viewerFeatureFlags {\n            name\n            value\n        }\n        temporarySettings {\n            contents\n        }\n    }\n}",
								"variables": "{\n  \"id\": 0,\n  \"first\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path\": \"\",\n  \"recursive1\": true,\n  \"first1\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path1\": \"\",\n  \"path2\": \"\",\n  \"first2\": 0,\n  \"query\": \"\",\n  \"path3\": \"\",\n  \"after\": \"\",\n  \"revspec\": \"\",\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first3\": 0,\n  \"first4\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first5\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first6\": 0,\n  \"query3\": \"\",\n  \"first7\": 0,\n  \"first8\": 0,\n  \"after1\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange\": \"\",\n  \"after2\": \"\",\n  \"path4\": \"\",\n  \"first9\": 0,\n  \"name\": \"\",\n  \"cloneURL\": \"\",\n  \"uri\": \"\",\n  \"name1\": \"\",\n  \"cloneURL1\": \"\",\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"query4\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first12\": 0,\n  \"query5\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first13\": 0,\n  \"query6\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path5\": \"\",\n  \"first14\": 0,\n  \"namespace\": 0,\n  \"first15\": 0,\n  \"after4\": \"\",\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first16\": 0,\n  \"first17\": 0,\n  \"query7\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first18\": 0,\n  \"query8\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first19\": 0,\n  \"query9\": \"\",\n  \"revisionRange2\": \"\",\n  \"after5\": \"\",\n  \"path6\": \"\",\n  \"first20\": 0,\n  \"precise\": true,\n  \"first21\": 0,\n  \"query10\": \"\",\n  \"after6\": \"\",\n  \"names\": [\n    \"\"\n  ],\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"failedFetch\": true,\n  \"orderBy6\": \"\",\n  \"descending\": true,\n  \"name2\": \"\",\n  \"uri1\": \"\",\n  \"first22\": 0,\n  \"eventName\": \"\",\n  \"first23\": 0,\n  \"first24\": 0,\n  \"precise1\": true,\n  \"first25\": 0,\n  \"query11\": \"\",\n  \"after7\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"query12\": \"\",\n  \"type3\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive6\": true,\n  \"first28\": 0,\n  \"query13\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive7\": true,\n  \"first29\": 0,\n  \"query14\": \"\",\n  \"revisionRange3\": \"\",\n  \"after8\": \"\",\n  \"path7\": \"\",\n  \"first30\": 0,\n  \"first31\": 0,\n  \"eventName1\": \"\",\n  \"first32\": 0,\n  \"first33\": 0,\n  \"precise2\": true,\n  \"first34\": 0,\n  \"query15\": \"\",\n  \"after9\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID1\": 0,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first35\": 0,\n  \"first36\": 0,\n  \"query16\": \"\",\n  \"type4\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive8\": true,\n  \"first37\": 0,\n  \"query17\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive9\": true,\n  \"first38\": 0,\n  \"query18\": \"\",\n  \"revisionRange4\": \"\",\n  \"after10\": \"\",\n  \"path8\": \"\",\n  \"first39\": 0,\n  \"username\": \"\",\n  \"email\": \"\",\n  \"first40\": 0,\n  \"eventName2\": \"\",\n  \"first41\": 0,\n  \"first42\": 0,\n  \"precise3\": true,\n  \"first43\": 0,\n  \"query19\": \"\",\n  \"after11\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID2\": 0,\n  \"first44\": 0,\n  \"query20\": \"\",\n  \"tag\": \"\",\n  \"activePeriod\": \"\",\n  \"name3\": \"\",\n  \"first45\": 0,\n  \"query21\": \"\",\n  \"markdown\": \"\",\n  \"options\": {\n    \"alwaysNil\": \"\"\n  },\n  \"code\": \"\",\n  \"fuzzyLanguage\": \"\",\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"id1\": 0,\n  \"first46\": 0,\n  \"version\": \"\",\n  \"patternType\": \"\",\n  \"query22\": \"\",\n  \"versionContext\": \"\",\n  \"query23\": \"\",\n  \"patternType1\": \"\",\n  \"first47\": 0,\n  \"first48\": 0,\n  \"user\": 0,\n  \"serviceType\": \"\",\n  \"serviceID\": \"\",\n  \"clientID\": \"\",\n  \"days\": 0,\n  \"weeks\": 0,\n  \"months\": 0,\n  \"days1\": 0,\n  \"first49\": 0,\n  \"fields\": [\n    \"\"\n  ],\n  \"extensionID\": \"\",\n  \"first50\": 0,\n  \"publisher\": 0,\n  \"query24\": \"\",\n  \"local\": true,\n  \"remote\": true,\n  \"extensionIDs\": [\n    \"\"\n  ],\n  \"prioritizeExtensionIDs\": [\n    \"\"\n  ],\n  \"first51\": 0,\n  \"id2\": 0,\n  \"name4\": \"\",\n  \"user1\": 0,\n  \"codeHost\": 0,\n  \"query25\": \"\",\n  \"ids\": [\n    0\n  ],\n  \"seconds\": 0,\n  \"id3\": 0,\n  \"first52\": 0,\n  \"first53\": 0,\n  \"query26\": \"\",\n  \"type5\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive10\": true,\n  \"first54\": 0,\n  \"query27\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive11\": true,\n  \"first55\": 0,\n  \"query28\": \"\",\n  \"revisionRange5\": \"\",\n  \"after12\": \"\",\n  \"path9\": \"\",\n  \"first56\": 0,\n  \"first57\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"path10\": \"\",\n  \"recursive4\": true,\n  \"first58\": 0,\n  \"recursive5\": true,\n  \"recursiveSingleChild3\": true,\n  \"path11\": \"\",\n  \"path12\": \"\",\n  \"first59\": 0,\n  \"query29\": \"\",\n  \"path13\": \"\",\n  \"after13\": \"\",\n  \"revspec1\": \"\",\n  \"first60\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild4\": true,\n  \"first61\": 0,\n  \"recursive7\": true,\n  \"first62\": 0,\n  \"recursive8\": true,\n  \"first63\": 0,\n  \"recursive9\": true,\n  \"recursiveSingleChild5\": true,\n  \"first64\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"first65\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path14\": \"\",\n  \"recursive12\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first66\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild8\": true,\n  \"path15\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout2\": true,\n  \"isLightTheme2\": true,\n  \"highlightLongLines1\": true,\n  \"path16\": \"\",\n  \"first67\": 0,\n  \"query30\": \"\",\n  \"path17\": \"\",\n  \"after14\": \"\",\n  \"revspec2\": \"\",\n  \"first68\": 0,\n  \"query31\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first69\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first70\": 0,\n  \"first71\": 0,\n  \"query32\": \"\",\n  \"type6\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive12\": true,\n  \"first72\": 0,\n  \"query33\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive13\": true,\n  \"first73\": 0,\n  \"query34\": \"\",\n  \"revisionRange6\": \"\",\n  \"after15\": \"\",\n  \"path18\": \"\",\n  \"first74\": 0,\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first75\": 0,\n  \"first76\": 0,\n  \"query35\": \"\",\n  \"type7\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive14\": true,\n  \"first77\": 0,\n  \"query36\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive15\": true,\n  \"first78\": 0,\n  \"query37\": \"\",\n  \"revisionRange7\": \"\",\n  \"after16\": \"\",\n  \"path19\": \"\",\n  \"first79\": 0,\n  \"first80\": 0,\n  \"query38\": \"\",\n  \"type8\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive16\": true,\n  \"first81\": 0,\n  \"query39\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive17\": true,\n  \"first82\": 0,\n  \"query40\": \"\",\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first83\": 0,\n  \"first84\": 0,\n  \"query41\": \"\",\n  \"type9\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive18\": true,\n  \"first85\": 0,\n  \"query42\": \"\",\n  \"orderBy20\": \"\",\n  \"interactive19\": true,\n  \"first86\": 0,\n  \"query43\": \"\",\n  \"revisionRange8\": \"\",\n  \"after17\": \"\",\n  \"path20\": \"\",\n  \"first87\": 0,\n  \"rev9\": \"\",\n  \"inputRevspec9\": \"\",\n  \"first88\": 0,\n  \"first89\": 0,\n  \"query44\": \"\",\n  \"type10\": \"\",\n  \"orderBy21\": \"\",\n  \"interactive20\": true,\n  \"first90\": 0,\n  \"query45\": \"\",\n  \"orderBy22\": \"\",\n  \"interactive21\": true,\n  \"first91\": 0,\n  \"query46\": \"\",\n  \"revisionRange9\": \"\",\n  \"after18\": \"\",\n  \"path21\": \"\",\n  \"first92\": 0,\n  \"first93\": 0,\n  \"first94\": 0,\n  \"after19\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"first95\": 0,\n  \"revisionRange10\": \"\",\n  \"after20\": \"\",\n  \"path22\": \"\",\n  \"first96\": 0,\n  \"name5\": \"\",\n  \"cloneURL2\": \"\",\n  \"uri2\": \"\",\n  \"name6\": \"\",\n  \"cloneURL3\": \"\",\n  \"first97\": 0,\n  \"recursive14\": true,\n  \"recursiveSingleChild9\": true,\n  \"path23\": \"\",\n  \"recursive15\": true,\n  \"first98\": 0,\n  \"recursive16\": true,\n  \"recursiveSingleChild10\": true,\n  \"path24\": \"\",\n  \"path25\": \"\",\n  \"first99\": 0,\n  \"query47\": \"\",\n  \"path26\": \"\",\n  \"after21\": \"\",\n  \"revspec3\": \"\",\n  \"rev10\": \"\",\n  \"inputRevspec10\": \"\",\n  \"first100\": 0,\n  \"first101\": 0,\n  \"query48\": \"\",\n  \"type11\": \"\",\n  \"orderBy23\": \"\",\n  \"interactive22\": true,\n  \"first102\": 0,\n  \"query49\": \"\",\n  \"orderBy24\": \"\",\n  \"interactive23\": true,\n  \"first103\": 0,\n  \"query50\": \"\",\n  \"first104\": 0,\n  \"first105\": 0,\n  \"after22\": \"\",\n  \"base2\": \"\",\n  \"head2\": \"\",\n  \"fetchMissing2\": true,\n  \"revisionRange11\": \"\",\n  \"after23\": \"\",\n  \"path27\": \"\",\n  \"first106\": 0,\n  \"namespace1\": 0,\n  \"first107\": 0,\n  \"after24\": \"\",\n  \"first108\": 0,\n  \"recursive17\": true,\n  \"recursiveSingleChild11\": true,\n  \"path28\": \"\",\n  \"recursive18\": true,\n  \"first109\": 0,\n  \"recursive19\": true,\n  \"recursiveSingleChild12\": true,\n  \"path29\": \"\",\n  \"path30\": \"\",\n  \"first110\": 0,\n  \"query51\": \"\",\n  \"path31\": \"\",\n  \"after25\": \"\",\n  \"revspec4\": \"\",\n  \"rev11\": \"\",\n  \"inputRevspec11\": \"\",\n  \"first111\": 0,\n  \"first112\": 0,\n  \"query52\": \"\",\n  \"type12\": \"\",\n  \"orderBy25\": \"\",\n  \"interactive24\": true,\n  \"first113\": 0,\n  \"query53\": \"\",\n  \"orderBy26\": \"\",\n  \"interactive25\": true,\n  \"first114\": 0,\n  \"query54\": \"\",\n  \"first115\": 0,\n  \"first116\": 0,\n  \"after26\": \"\",\n  \"base3\": \"\",\n  \"head3\": \"\",\n  \"fetchMissing3\": true,\n  \"revisionRange12\": \"\",\n  \"after27\": \"\",\n  \"path32\": \"\",\n  \"first117\": 0,\n  \"precise4\": true,\n  \"first118\": 0,\n  \"query55\": \"\",\n  \"after28\": \"\",\n  \"names1\": [\n    \"\"\n  ],\n  \"cloned4\": true,\n  \"notCloned4\": true,\n  \"indexed4\": true,\n  \"notIndexed4\": true,\n  \"failedFetch1\": true,\n  \"orderBy27\": \"\",\n  \"descending1\": true,\n  \"name7\": \"\",\n  \"uri3\": \"\",\n  \"first119\": 0,\n  \"eventName3\": \"\",\n  \"first120\": 0,\n  \"first121\": 0,\n  \"precise5\": true,\n  \"first122\": 0,\n  \"query56\": \"\",\n  \"after29\": \"\",\n  \"cloned5\": true,\n  \"notCloned5\": true,\n  \"indexed5\": true,\n  \"notIndexed5\": true,\n  \"externalServiceID3\": 0,\n  \"first123\": 0,\n  \"eventName4\": \"\",\n  \"first124\": 0,\n  \"eventName5\": \"\",\n  \"first125\": 0,\n  \"first126\": 0,\n  \"precise6\": true,\n  \"first127\": 0,\n  \"query57\": \"\",\n  \"after30\": \"\",\n  \"cloned6\": true,\n  \"notCloned6\": true,\n  \"indexed6\": true,\n  \"notIndexed6\": true,\n  \"externalServiceID4\": 0,\n  \"first128\": 0,\n  \"first129\": 0,\n  \"first130\": 0,\n  \"eventName6\": \"\",\n  \"first131\": 0,\n  \"first132\": 0,\n  \"precise7\": true,\n  \"first133\": 0,\n  \"query58\": \"\",\n  \"after31\": \"\",\n  \"cloned7\": true,\n  \"notCloned7\": true,\n  \"indexed7\": true,\n  \"notIndexed7\": true,\n  \"externalServiceID5\": 0,\n  \"rev12\": \"\",\n  \"inputRevspec12\": \"\",\n  \"first134\": 0,\n  \"first135\": 0,\n  \"query59\": \"\",\n  \"type13\": \"\",\n  \"orderBy28\": \"\",\n  \"interactive26\": true,\n  \"first136\": 0,\n  \"query60\": \"\",\n  \"orderBy29\": \"\",\n  \"interactive27\": true,\n  \"first137\": 0,\n  \"query61\": \"\",\n  \"revisionRange13\": \"\",\n  \"after32\": \"\",\n  \"path33\": \"\",\n  \"first138\": 0,\n  \"precise8\": true,\n  \"first139\": 0,\n  \"query62\": \"\",\n  \"after33\": \"\",\n  \"cloned8\": true,\n  \"notCloned8\": true,\n  \"indexed8\": true,\n  \"notIndexed8\": true,\n  \"externalServiceID6\": 0,\n  \"first140\": 0,\n  \"recursive20\": true,\n  \"recursiveSingleChild13\": true,\n  \"path34\": \"\",\n  \"recursive21\": true,\n  \"first141\": 0,\n  \"recursive22\": true,\n  \"recursiveSingleChild14\": true,\n  \"path35\": \"\",\n  \"path36\": \"\",\n  \"first142\": 0,\n  \"query63\": \"\",\n  \"path37\": \"\",\n  \"after34\": \"\",\n  \"revspec5\": \"\",\n  \"rev13\": \"\",\n  \"inputRevspec13\": \"\",\n  \"first143\": 0,\n  \"first144\": 0,\n  \"query64\": \"\",\n  \"type14\": \"\",\n  \"orderBy30\": \"\",\n  \"interactive28\": true,\n  \"first145\": 0,\n  \"query65\": \"\",\n  \"orderBy31\": \"\",\n  \"interactive29\": true,\n  \"first146\": 0,\n  \"query66\": \"\",\n  \"first147\": 0,\n  \"first148\": 0,\n  \"after35\": \"\",\n  \"base4\": \"\",\n  \"head4\": \"\",\n  \"fetchMissing4\": true,\n  \"revisionRange14\": \"\",\n  \"after36\": \"\",\n  \"path38\": \"\",\n  \"first149\": 0,\n  \"first150\": 0,\n  \"eventName7\": \"\",\n  \"first151\": 0,\n  \"first152\": 0,\n  \"precise9\": true,\n  \"first153\": 0,\n  \"query67\": \"\",\n  \"after37\": \"\",\n  \"cloned9\": true,\n  \"notCloned9\": true,\n  \"indexed9\": true,\n  \"notIndexed9\": true,\n  \"externalServiceID7\": 0,\n  \"first154\": 0,\n  \"eventName8\": \"\",\n  \"first155\": 0,\n  \"eventName9\": \"\",\n  \"first156\": 0,\n  \"first157\": 0,\n  \"precise10\": true,\n  \"first158\": 0,\n  \"query68\": \"\",\n  \"after38\": \"\",\n  \"cloned10\": true,\n  \"notCloned10\": true,\n  \"indexed10\": true,\n  \"notIndexed10\": true,\n  \"externalServiceID8\": 0,\n  \"first159\": 0,\n  \"first160\": 0,\n  \"first161\": 0,\n  \"eventName10\": \"\",\n  \"first162\": 0,\n  \"first163\": 0,\n  \"precise11\": true,\n  \"first164\": 0,\n  \"query69\": \"\",\n  \"after39\": \"\",\n  \"cloned11\": true,\n  \"notCloned11\": true,\n  \"indexed11\": true,\n  \"notIndexed11\": true,\n  \"externalServiceID9\": 0,\n  \"rev14\": \"\",\n  \"inputRevspec14\": \"\",\n  \"first165\": 0,\n  \"first166\": 0,\n  \"query70\": \"\",\n  \"type15\": \"\",\n  \"orderBy32\": \"\",\n  \"interactive30\": true,\n  \"first167\": 0,\n  \"query71\": \"\",\n  \"orderBy33\": \"\",\n  \"interactive31\": true,\n  \"first168\": 0,\n  \"query72\": \"\",\n  \"revisionRange15\": \"\",\n  \"after40\": \"\",\n  \"path39\": \"\",\n  \"first169\": 0,\n  \"precise12\": true,\n  \"first170\": 0,\n  \"query73\": \"\",\n  \"after41\": \"\",\n  \"cloned12\": true,\n  \"notCloned12\": true,\n  \"indexed12\": true,\n  \"notIndexed12\": true,\n  \"externalServiceID10\": 0,\n  \"first171\": 0,\n  \"recursive23\": true,\n  \"recursiveSingleChild15\": true,\n  \"path40\": \"\",\n  \"recursive24\": true,\n  \"first172\": 0,\n  \"recursive25\": true,\n  \"recursiveSingleChild16\": true,\n  \"path41\": \"\",\n  \"path42\": \"\",\n  \"first173\": 0,\n  \"query74\": \"\",\n  \"path43\": \"\",\n  \"after42\": \"\",\n  \"revspec6\": \"\",\n  \"rev15\": \"\",\n  \"inputRevspec15\": \"\",\n  \"first174\": 0,\n  \"first175\": 0,\n  \"query75\": \"\",\n  \"type16\": \"\",\n  \"orderBy34\": \"\",\n  \"interactive32\": true,\n  \"first176\": 0,\n  \"query76\": \"\",\n  \"orderBy35\": \"\",\n  \"interactive33\": true,\n  \"first177\": 0,\n  \"query77\": \"\",\n  \"first178\": 0,\n  \"first179\": 0,\n  \"after43\": \"\",\n  \"base5\": \"\",\n  \"head5\": \"\",\n  \"fetchMissing5\": true,\n  \"revisionRange16\": \"\",\n  \"after44\": \"\",\n  \"path44\": \"\",\n  \"first180\": 0,\n  \"username1\": \"\",\n  \"email1\": \"\",\n  \"first181\": 0,\n  \"eventName11\": \"\",\n  \"first182\": 0,\n  \"first183\": 0,\n  \"precise13\": true,\n  \"first184\": 0,\n  \"query78\": \"\",\n  \"after45\": \"\",\n  \"cloned13\": true,\n  \"notCloned13\": true,\n  \"indexed13\": true,\n  \"notIndexed13\": true,\n  \"externalServiceID11\": 0,\n  \"rev16\": \"\",\n  \"inputRevspec16\": \"\",\n  \"first185\": 0,\n  \"first186\": 0,\n  \"query79\": \"\",\n  \"type17\": \"\",\n  \"orderBy36\": \"\",\n  \"interactive34\": true,\n  \"first187\": 0,\n  \"query80\": \"\",\n  \"orderBy37\": \"\",\n  \"interactive35\": true,\n  \"first188\": 0,\n  \"query81\": \"\",\n  \"revisionRange17\": \"\",\n  \"after46\": \"\",\n  \"path45\": \"\",\n  \"first189\": 0,\n  \"first190\": 0,\n  \"query82\": \"\",\n  \"tag1\": \"\",\n  \"activePeriod1\": \"\",\n  \"first191\": 0,\n  \"eventName12\": \"\",\n  \"first192\": 0,\n  \"first193\": 0,\n  \"precise14\": true,\n  \"first194\": 0,\n  \"query83\": \"\",\n  \"after47\": \"\",\n  \"cloned14\": true,\n  \"notCloned14\": true,\n  \"indexed14\": true,\n  \"notIndexed14\": true,\n  \"externalServiceID12\": 0,\n  \"first195\": 0,\n  \"eventName13\": \"\",\n  \"first196\": 0,\n  \"first197\": 0,\n  \"precise15\": true,\n  \"first198\": 0,\n  \"query84\": \"\",\n  \"after48\": \"\",\n  \"cloned15\": true,\n  \"notCloned15\": true,\n  \"indexed15\": true,\n  \"notIndexed15\": true,\n  \"externalServiceID13\": 0,\n  \"first199\": 0,\n  \"eventName14\": \"\",\n  \"first200\": 0,\n  \"first201\": 0,\n  \"precise16\": true,\n  \"first202\": 0,\n  \"query85\": \"\",\n  \"after49\": \"\",\n  \"cloned16\": true,\n  \"notCloned16\": true,\n  \"indexed16\": true,\n  \"notIndexed16\": true,\n  \"externalServiceID14\": 0,\n  \"first203\": 0,\n  \"eventName15\": \"\",\n  \"first204\": 0,\n  \"first205\": 0,\n  \"precise17\": true,\n  \"first206\": 0,\n  \"query86\": \"\",\n  \"after50\": \"\",\n  \"cloned17\": true,\n  \"notCloned17\": true,\n  \"indexed17\": true,\n  \"notIndexed17\": true,\n  \"externalServiceID15\": 0,\n  \"name8\": \"\",\n  \"first207\": 0,\n  \"query87\": \"\",\n  \"markdown1\": \"\",\n  \"options1\": {\n    \"alwaysNil\": \"\"\n  },\n  \"code1\": \"\",\n  \"fuzzyLanguage1\": \"\",\n  \"disableTimeout3\": true,\n  \"isLightTheme3\": true,\n  \"first208\": 0,\n  \"eventName16\": \"\",\n  \"first209\": 0,\n  \"first210\": 0,\n  \"precise18\": true,\n  \"first211\": 0,\n  \"query88\": \"\",\n  \"after51\": \"\",\n  \"cloned18\": true,\n  \"notCloned18\": true,\n  \"indexed18\": true,\n  \"notIndexed18\": true,\n  \"externalServiceID16\": 0,\n  \"id4\": 0,\n  \"rev17\": \"\",\n  \"inputRevspec17\": \"\",\n  \"first212\": 0,\n  \"first213\": 0,\n  \"query89\": \"\",\n  \"type18\": \"\",\n  \"orderBy38\": \"\",\n  \"interactive36\": true,\n  \"first214\": 0,\n  \"query90\": \"\",\n  \"orderBy39\": \"\",\n  \"interactive37\": true,\n  \"first215\": 0,\n  \"query91\": \"\",\n  \"revisionRange18\": \"\",\n  \"after52\": \"\",\n  \"path46\": \"\",\n  \"first216\": 0,\n  \"rev18\": \"\",\n  \"inputRevspec18\": \"\",\n  \"first217\": 0,\n  \"first218\": 0,\n  \"query92\": \"\",\n  \"type19\": \"\",\n  \"orderBy40\": \"\",\n  \"interactive38\": true,\n  \"first219\": 0,\n  \"query93\": \"\",\n  \"orderBy41\": \"\",\n  \"interactive39\": true,\n  \"first220\": 0,\n  \"query94\": \"\",\n  \"revisionRange19\": \"\",\n  \"after53\": \"\",\n  \"path47\": \"\",\n  \"first221\": 0,\n  \"rev19\": \"\",\n  \"inputRevspec19\": \"\",\n  \"first222\": 0,\n  \"first223\": 0,\n  \"query95\": \"\",\n  \"type20\": \"\",\n  \"orderBy42\": \"\",\n  \"interactive40\": true,\n  \"first224\": 0,\n  \"query96\": \"\",\n  \"orderBy43\": \"\",\n  \"interactive41\": true,\n  \"first225\": 0,\n  \"query97\": \"\",\n  \"revisionRange20\": \"\",\n  \"after54\": \"\",\n  \"path48\": \"\",\n  \"first226\": 0,\n  \"rev20\": \"\",\n  \"inputRevspec20\": \"\",\n  \"first227\": 0,\n  \"first228\": 0,\n  \"query98\": \"\",\n  \"type21\": \"\",\n  \"orderBy44\": \"\",\n  \"interactive42\": true,\n  \"first229\": 0,\n  \"query99\": \"\",\n  \"orderBy45\": \"\",\n  \"interactive43\": true,\n  \"first230\": 0,\n  \"query100\": \"\",\n  \"revisionRange21\": \"\",\n  \"after55\": \"\",\n  \"path49\": \"\",\n  \"first231\": 0,\n  \"first232\": 0,\n  \"rev21\": \"\",\n  \"inputRevspec21\": \"\",\n  \"first233\": 0,\n  \"first234\": 0,\n  \"query101\": \"\",\n  \"type22\": \"\",\n  \"orderBy46\": \"\",\n  \"interactive44\": true,\n  \"first235\": 0,\n  \"query102\": \"\",\n  \"orderBy47\": \"\",\n  \"interactive45\": true,\n  \"first236\": 0,\n  \"query103\": \"\",\n  \"revisionRange22\": \"\",\n  \"after56\": \"\",\n  \"path50\": \"\",\n  \"first237\": 0,\n  \"version1\": \"\",\n  \"patternType2\": \"\",\n  \"query104\": \"\",\n  \"versionContext1\": \"\",\n  \"query105\": \"\",\n  \"patternType3\": \"\",\n  \"first238\": 0,\n  \"eventName17\": \"\",\n  \"first239\": 0,\n  \"first240\": 0,\n  \"precise19\": true,\n  \"first241\": 0,\n  \"query106\": \"\",\n  \"after57\": \"\",\n  \"cloned19\": true,\n  \"notCloned19\": true,\n  \"indexed19\": true,\n  \"notIndexed19\": true,\n  \"externalServiceID17\": 0,\n  \"first242\": 0,\n  \"first243\": 0,\n  \"user2\": 0,\n  \"serviceType1\": \"\",\n  \"serviceID1\": \"\",\n  \"clientID1\": \"\",\n  \"days2\": 0,\n  \"weeks1\": 0,\n  \"months1\": 0,\n  \"days3\": 0,\n  \"first244\": 0,\n  \"eventName18\": \"\",\n  \"first245\": 0,\n  \"first246\": 0,\n  \"precise20\": true,\n  \"first247\": 0,\n  \"query107\": \"\",\n  \"after58\": \"\",\n  \"cloned20\": true,\n  \"notCloned20\": true,\n  \"indexed20\": true,\n  \"notIndexed20\": true,\n  \"externalServiceID18\": 0,\n  \"first248\": 0,\n  \"fields1\": [\n    \"\"\n  ],\n  \"extensionID1\": \"\",\n  \"fields2\": [\n    \"\"\n  ],\n  \"first249\": 0,\n  \"publisher1\": 0,\n  \"query108\": \"\",\n  \"local1\": true,\n  \"remote1\": true,\n  \"extensionIDs1\": [\n    \"\"\n  ],\n  \"prioritizeExtensionIDs1\": [\n    \"\"\n  ],\n  \"first250\": 0,\n  \"first251\": 0,\n  \"eventName19\": \"\",\n  \"first252\": 0,\n  \"first253\": 0,\n  \"precise21\": true,\n  \"first254\": 0,\n  \"query109\": \"\",\n  \"after59\": \"\",\n  \"cloned21\": true,\n  \"notCloned21\": true,\n  \"indexed21\": true,\n  \"notIndexed21\": true,\n  \"externalServiceID19\": 0,\n  \"fields3\": [\n    \"\"\n  ],\n  \"id5\": 0,\n  \"name9\": \"\",\n  \"user3\": 0,\n  \"codeHost1\": 0,\n  \"query110\": \"\",\n  \"ids1\": [\n    0\n  ],\n  \"seconds1\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "node",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query node ($id: ID!) {\n    node (id: $id) {\n        id\n    }\n}",
								"variables": "{\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "repository",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query repository ($first: Int, $first1: Int, $query: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first2: Int, $query1: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first3: Int, $query2: String, $first4: Int, $first5: Int, $after: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange: String, $after1: String, $path: String, $first6: Int, $first7: Int, $first8: Int, $query3: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first9: Int, $query4: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first10: Int, $query5: String, $revisionRange1: String, $after2: String, $path1: String, $first11: Int, $first12: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path2: String, $recursive1: Boolean, $first13: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path3: String!, $path4: String!, $first14: Int, $query6: String, $path5: String, $after3: String, $revspec: String!, $first15: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $first16: Int, $recursive4: Boolean, $first17: Int, $recursive5: Boolean, $first18: Int, $recursive6: Boolean, $recursiveSingleChild3: Boolean, $first19: Int, $recursive7: Boolean, $recursiveSingleChild4: Boolean, $first20: Int, $recursive8: Boolean, $recursiveSingleChild5: Boolean, $path6: String, $recursive9: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first21: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $path7: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path8: String!, $first22: Int, $query7: String, $path9: String, $after4: String, $revspec1: String!, $first23: Int, $query8: String, $includePatterns: [String!], $first24: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path10: String!, $path11: String!, $first25: Int, $query9: String, $path12: String, $after5: String, $revspec2: String!, $first26: Int, $first27: Int, $query10: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first28: Int, $query11: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first29: Int, $query12: String, $revisionRange2: String, $after6: String, $path13: String, $first30: Int, $first31: Int, $recursive12: Boolean, $recursiveSingleChild8: Boolean, $first32: Int, $recursive13: Boolean, $first33: Int, $recursive14: Boolean, $first34: Int, $recursive15: Boolean, $recursiveSingleChild9: Boolean, $first35: Int, $recursive16: Boolean, $recursiveSingleChild10: Boolean, $first36: Int, $recursive17: Boolean, $recursiveSingleChild11: Boolean, $first37: Int, $recursive18: Boolean, $first38: Int, $recursive19: Boolean, $first39: Int, $recursive20: Boolean, $recursiveSingleChild12: Boolean, $first40: Int, $recursive21: Boolean, $recursiveSingleChild13: Boolean, $first41: Int, $query13: String, $first42: Int, $recursive22: Boolean, $recursiveSingleChild14: Boolean, $path14: String, $recursive23: Boolean, $first43: Int, $recursive24: Boolean, $recursiveSingleChild15: Boolean, $path15: String, $recursive25: Boolean, $path16: String!, $first44: Int, $query14: String, $path17: String, $after7: String, $revspec3: String!, $first45: Int, $first46: Int, $query15: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first47: Int, $query16: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first48: Int, $query17: String, $revisionRange3: String, $after8: String, $path18: String, $first49: Int, $startLine1: Int!, $endLine1: Int!, $ranges2: [HighlightLineRange!]!, $disableTimeout2: Boolean!, $isLightTheme2: Boolean, $highlightLongLines2: Boolean, $first50: Int, $query18: String, $line1: Int!, $character1: Int!, $first51: Int, $recursive26: Boolean, $recursiveSingleChild16: Boolean, $path19: String!, $ranges3: [HighlightLineRange!]!, $disableTimeout3: Boolean!, $isLightTheme3: Boolean, $highlightLongLines3: Boolean, $path20: String!, $first52: Int, $recursive27: Boolean, $recursiveSingleChild17: Boolean, $path21: String, $recursive28: Boolean, $first53: Int, $recursive29: Boolean, $recursiveSingleChild18: Boolean, $path22: String!, $path23: String!, $first54: Int, $query19: String, $path24: String, $after9: String, $revspec4: String!, $first55: Int, $query20: String, $path25: String, $after10: String, $revspec5: String!, $first56: Int, $query21: String, $includePatterns1: [String!], $rev: String!, $inputRevspec: String, $first57: Int, $first58: Int, $recursive30: Boolean, $recursiveSingleChild19: Boolean, $path26: String, $recursive31: Boolean, $first59: Int, $recursive32: Boolean, $recursiveSingleChild20: Boolean, $path27: String!, $path28: String!, $first60: Int, $query22: String, $path29: String, $after11: String, $revspec6: String!, $rev1: String!, $inputRevspec1: String, $first61: Int, $first62: Int, $query23: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first63: Int, $query24: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first64: Int, $query25: String, $first65: Int, $first66: Int, $after12: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $revisionRange4: String, $after13: String, $path30: String, $first67: Int, $first68: Int, $recursive33: Boolean, $recursiveSingleChild21: Boolean, $path31: String, $recursive34: Boolean, $first69: Int, $recursive35: Boolean, $recursiveSingleChild22: Boolean, $path32: String!, $path33: String!, $first70: Int, $query26: String, $path34: String, $after14: String, $revspec7: String!, $first71: Int, $recursive36: Boolean, $recursiveSingleChild23: Boolean, $path35: String, $recursive37: Boolean, $first72: Int, $recursive38: Boolean, $recursiveSingleChild24: Boolean, $path36: String!, $path37: String!, $first73: Int, $query27: String, $path38: String, $after15: String, $revspec8: String!, $rev2: String!, $inputRevspec2: String, $first74: Int, $first75: Int, $query28: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first76: Int, $query29: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first77: Int, $query30: String, $first78: Int, $first79: Int, $after16: String, $base2: String, $head2: String, $fetchMissing2: Boolean, $revisionRange5: String, $after17: String, $path39: String, $first80: Int, $rev3: String!, $inputRevspec3: String, $first81: Int, $first82: Int, $query31: String, $orderBy12: GitRefOrder, $interactive12: Boolean, $first83: Int, $query32: String, $revisionRange6: String, $after18: String, $path40: String, $first84: Int, $first85: Int, $query33: String, $type6: GitRefType, $orderBy13: GitRefOrder, $interactive13: Boolean, $rev4: String!, $inputRevspec4: String, $first86: Int, $first87: Int, $query34: String, $type7: GitRefType, $orderBy14: GitRefOrder, $interactive14: Boolean, $first88: Int, $query35: String, $revisionRange7: String, $after19: String, $path41: String, $first89: Int, $first90: Int, $query36: String, $orderBy15: GitRefOrder, $interactive15: Boolean, $rev5: String!, $inputRevspec5: String, $first91: Int, $first92: Int, $query37: String, $type8: GitRefType, $orderBy16: GitRefOrder, $interactive16: Boolean, $first93: Int, $query38: String, $orderBy17: GitRefOrder, $interactive17: Boolean, $revisionRange8: String, $after20: String, $path42: String, $first94: Int, $first95: Int, $query39: String, $first96: Int, $recursive39: Boolean, $recursiveSingleChild25: Boolean, $path43: String, $recursive40: Boolean, $first97: Int, $recursive41: Boolean, $recursiveSingleChild26: Boolean, $path44: String!, $path45: String!, $first98: Int, $query40: String, $path46: String, $after21: String, $revspec9: String!, $rev6: String!, $inputRevspec6: String, $first99: Int, $first100: Int, $query41: String, $type9: GitRefType, $orderBy18: GitRefOrder, $interactive18: Boolean, $first101: Int, $query42: String, $orderBy19: GitRefOrder, $interactive19: Boolean, $first102: Int, $query43: String, $first103: Int, $first104: Int, $after22: String, $base3: String, $head3: String, $fetchMissing3: Boolean, $revisionRange9: String, $after23: String, $path47: String, $first105: Int, $first106: Int, $recursive42: Boolean, $recursiveSingleChild27: Boolean, $path48: String, $recursive43: Boolean, $first107: Int, $recursive44: Boolean, $recursiveSingleChild28: Boolean, $path49: String!, $path50: String!, $first108: Int, $query44: String, $path51: String, $after24: String, $revspec10: String!, $rev7: String!, $inputRevspec7: String, $first109: Int, $first110: Int, $query45: String, $type10: GitRefType, $orderBy20: GitRefOrder, $interactive20: Boolean, $first111: Int, $query46: String, $orderBy21: GitRefOrder, $interactive21: Boolean, $first112: Int, $query47: String, $first113: Int, $first114: Int, $after25: String, $base4: String, $head4: String, $fetchMissing4: Boolean, $revisionRange10: String, $after26: String, $path52: String, $first115: Int, $first116: Int, $recursive45: Boolean, $recursiveSingleChild29: Boolean, $path53: String, $recursive46: Boolean, $first117: Int, $recursive47: Boolean, $recursiveSingleChild30: Boolean, $path54: String!, $path55: String!, $first118: Int, $query48: String, $path56: String, $after27: String, $revspec11: String!, $first119: Int, $first120: Int, $after28: String, $base5: String, $head5: String, $fetchMissing5: Boolean, $rev8: String!, $inputRevspec8: String, $first121: Int, $first122: Int, $query49: String, $type11: GitRefType, $orderBy22: GitRefOrder, $interactive22: Boolean, $first123: Int, $query50: String, $orderBy23: GitRefOrder, $interactive23: Boolean, $first124: Int, $query51: String, $first125: Int, $revisionRange11: String, $after29: String, $path57: String, $first126: Int, $name: String, $cloneURL: String, $uri: String) {\n    repository (name: $name, cloneURL: $cloneURL, uri: $uri) {\n        id\n        name\n        uri\n        description\n        language\n        createdAt\n        updatedAt\n        commit (rev: $rev, inputRevspec: $inputRevspec) {\n            id\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first1, query: $query, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first2, query: $query1, orderBy: $orderBy1, interactive: $interactive1) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first3, query: $query2) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first4) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first5, after: $after) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first6) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            oid\n            abbreviatedOID\n            author {\n                person {\n                    name\n                    email\n                    displayName\n                    avatarURL\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                }\n                date\n            }\n            committer {\n                person {\n                    name\n                    email\n                    displayName\n                    avatarURL\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                }\n                date\n            }\n            message\n            subject\n            body\n            parents {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first7) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first8, query: $query3, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first9, query: $query4, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first10, query: $query5) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after2, path: $path1, first: $first11) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path2, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first12, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first13, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path4) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first14, query: $query6, path: $path5, after: $after3) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path6, recursive: $recursive9) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first16, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first15, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    files (first: $first17, recursive: $recursive5) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first19, recursive: $recursive7, recursiveSingleChild: $recursiveSingleChild4) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first18, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    isSingleChild (first: $first20, recursive: $recursive8, recursiveSingleChild: $recursiveSingleChild5)\n                }\n                fileNames\n                blob (path: $path7) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first21, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6)\n                }\n                file (path: $path8) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first22, query: $query7, path: $path9, after: $after4) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec1) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first23, query: $query8, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            url\n            canonicalURL\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            tree (path: $path14, recursive: $recursive23) {\n                path\n                isRoot\n                name\n                isDirectory\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    fileNames\n                    blob (path: $path10) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first24, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                    }\n                    file (path: $path11) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first25, query: $query9, path: $path12, after: $after5) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec2) {\n                        behind\n                        ahead\n                    }\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first26) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first27, query: $query10, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first28, query: $query11, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first29, query: $query12) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after6, path: $path13, first: $first30) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                rawZipArchiveURL\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                directories (first: $first37, recursive: $recursive18) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first32, recursive: $recursive13) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first31, recursive: $recursive12, recursiveSingleChild: $recursiveSingleChild8)\n                    }\n                    files (first: $first33, recursive: $recursive14) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first35, recursive: $recursive16, recursiveSingleChild: $recursiveSingleChild10) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first34, recursive: $recursive15, recursiveSingleChild: $recursiveSingleChild9)\n                    }\n                    isSingleChild (first: $first36, recursive: $recursive17, recursiveSingleChild: $recursiveSingleChild11)\n                }\n                files (first: $first38, recursive: $recursive19) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                entries (first: $first40, recursive: $recursive21, recursiveSingleChild: $recursiveSingleChild13) {\n                    path\n                    name\n                    isDirectory\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    isSingleChild (first: $first39, recursive: $recursive20, recursiveSingleChild: $recursiveSingleChild12)\n                }\n                symbols (first: $first41, query: $query13) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                isSingleChild (first: $first42, recursive: $recursive22, recursiveSingleChild: $recursiveSingleChild14)\n            }\n            fileNames\n            blob (path: $path19) {\n                path\n                name\n                isDirectory\n                content\n                byteSize\n                binary\n                richHTML\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path15, recursive: $recursive25) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first43, recursive: $recursive24, recursiveSingleChild: $recursiveSingleChild15)\n                    }\n                    fileNames\n                    file (path: $path16) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first44, query: $query14, path: $path17, after: $after7) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec3) {\n                        behind\n                        ahead\n                    }\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first45) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first46, query: $query15, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                        totalCount\n                    }\n                    branches (first: $first47, query: $query16, orderBy: $orderBy7, interactive: $interactive7) {\n                        totalCount\n                    }\n                    tags (first: $first48, query: $query17) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after8, path: $path18, first: $first49) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                blame (startLine: $startLine1, endLine: $endLine1) {\n                    startLine\n                    endLine\n                    startByte\n                    endByte\n                    rev\n                    author {\n                        date\n                    }\n                    message\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    filename\n                }\n                highlight (disableTimeout: $disableTimeout2, isLightTheme: $isLightTheme2, highlightLongLines: $highlightLongLines2) {\n                    aborted\n                    html\n                    lineRanges (ranges: $ranges2)\n                }\n                submodule {\n                    url\n                    commit\n                    path\n                }\n                symbols (first: $first50, query: $query18) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                symbol (line: $line1, character: $character1) {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                isSingleChild (first: $first51, recursive: $recursive26, recursiveSingleChild: $recursiveSingleChild16)\n            }\n            file (path: $path20) {\n                path\n                name\n                isDirectory\n                content\n                byteSize\n                binary\n                richHTML\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                highlight (disableTimeout: $disableTimeout3, isLightTheme: $isLightTheme3, highlightLongLines: $highlightLongLines3) {\n                    aborted\n                    html\n                    lineRanges (ranges: $ranges3)\n                }\n            }\n            languages\n            languageStatistics {\n                name\n                totalBytes\n                totalLines\n            }\n            ancestors (first: $first55, query: $query20, path: $path25, after: $after10) {\n                nodes {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path21, recursive: $recursive28) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first52, recursive: $recursive27, recursiveSingleChild: $recursiveSingleChild17)\n                    }\n                    fileNames\n                    blob (path: $path22) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first53, recursive: $recursive29, recursiveSingleChild: $recursiveSingleChild18)\n                    }\n                    file (path: $path23) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first54, query: $query19, path: $path24, after: $after9) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec4) {\n                        behind\n                        ahead\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            behindAhead (revspec: $revspec5) {\n                behind\n                ahead\n            }\n            symbols (first: $first56, query: $query21, includePatterns: $includePatterns1) {\n                nodes {\n                    name\n                    containerName\n                    kind\n                    language\n                    location {\n                        url\n                        canonicalURL\n                    }\n                    url\n                    canonicalURL\n                    fileLocal\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n        }\n        mirrorInfo {\n            remoteURL\n            cloneInProgress\n            cloneProgress\n            cloned\n            updatedAt\n            updateSchedule {\n                intervalSeconds\n                due\n                index\n                total\n            }\n            updateQueue {\n                index\n                updating\n                total\n            }\n        }\n        externalRepository {\n            id\n            serviceType\n            serviceID\n        }\n        isFork\n        isArchived\n        isPrivate\n        externalServices (first: $first57) {\n            nodes {\n                id\n                kind\n                displayName\n                config\n                createdAt\n                updatedAt\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                repoCount\n                webhookURL\n                warning\n                lastSyncError\n                lastSyncAt\n                nextSyncAt\n                grantedScopes\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        cloneInProgress\n        textSearchIndex {\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path26, recursive: $recursive31) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first58, recursive: $recursive30, recursiveSingleChild: $recursiveSingleChild19)\n                    }\n                    fileNames\n                    blob (path: $path27) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first59, recursive: $recursive32, recursiveSingleChild: $recursiveSingleChild20)\n                    }\n                    file (path: $path28) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first60, query: $query22, path: $path29, after: $after11) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec6) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first61) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first62, query: $query23, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first63, query: $query24, orderBy: $orderBy9, interactive: $interactive9) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first64, query: $query25) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first65) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first66, after: $after12) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange4, after: $after13, path: $path30, first: $first67) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            status {\n                updatedAt\n                contentByteSize\n                contentFilesCount\n                indexByteSize\n                indexShardsCount\n                newLinesCount\n                defaultBranchNewLinesCount\n                otherBranchesNewLinesCount\n            }\n            refs {\n                ref {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                indexed\n                current\n                indexedCommit {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n            }\n        }\n        url\n        externalURLs {\n            url\n            serviceKind\n            serviceType\n        }\n        defaultBranch {\n            id\n            name\n            abbrevName\n            displayName\n            prefix\n            type\n            target {\n                oid\n                abbreviatedOID\n                commit {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path31, recursive: $recursive34) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first68, recursive: $recursive33, recursiveSingleChild: $recursiveSingleChild21)\n                    }\n                    fileNames\n                    blob (path: $path32) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first69, recursive: $recursive35, recursiveSingleChild: $recursiveSingleChild22)\n                    }\n                    file (path: $path33) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first70, query: $query26, path: $path34, after: $after14) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec7) {\n                        behind\n                        ahead\n                    }\n                }\n                type\n            }\n            repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path35, recursive: $recursive37) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first71, recursive: $recursive36, recursiveSingleChild: $recursiveSingleChild23)\n                    }\n                    fileNames\n                    blob (path: $path36) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first72, recursive: $recursive38, recursiveSingleChild: $recursiveSingleChild24)\n                    }\n                    file (path: $path37) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first73, query: $query27, path: $path38, after: $after15) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec8) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first74) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                gitRefs (first: $first75, query: $query28, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first76, query: $query29, orderBy: $orderBy11, interactive: $interactive11) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first77, query: $query30) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base2, head: $head2, fetchMissing: $fetchMissing2) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first78) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first79, after: $after16) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange5, after: $after17, path: $path39, first: $first80) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            url\n        }\n        gitRefs (first: $first85, query: $query33, type: $type6, orderBy: $orderBy13, interactive: $interactive13) {\n            nodes {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first81) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    branches (first: $first82, query: $query31, orderBy: $orderBy12, interactive: $interactive12) {\n                        totalCount\n                    }\n                    tags (first: $first83, query: $query32) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after18, path: $path40, first: $first84) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        branches (first: $first90, query: $query36, orderBy: $orderBy15, interactive: $interactive15) {\n            nodes {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first86) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first87, query: $query34, type: $type7, orderBy: $orderBy14, interactive: $interactive14) {\n                        totalCount\n                    }\n                    tags (first: $first88, query: $query35) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after19, path: $path41, first: $first89) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        tags (first: $first95, query: $query39) {\n            nodes {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first91) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first92, query: $query37, type: $type8, orderBy: $orderBy16, interactive: $interactive16) {\n                        totalCount\n                    }\n                    branches (first: $first93, query: $query38, orderBy: $orderBy17, interactive: $interactive17) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after20, path: $path42, first: $first94) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        comparison (base: $base5, head: $head5, fetchMissing: $fetchMissing5) {\n            baseRepository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path43, recursive: $recursive40) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first96, recursive: $recursive39, recursiveSingleChild: $recursiveSingleChild25)\n                    }\n                    fileNames\n                    blob (path: $path44) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first97, recursive: $recursive41, recursiveSingleChild: $recursiveSingleChild26)\n                    }\n                    file (path: $path45) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first98, query: $query40, path: $path46, after: $after21) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec9) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first99) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first100, query: $query41, type: $type9, orderBy: $orderBy18, interactive: $interactive18) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first101, query: $query42, orderBy: $orderBy19, interactive: $interactive19) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first102, query: $query43) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base3, head: $head3, fetchMissing: $fetchMissing3) {\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first103) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first104, after: $after22) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange9, after: $after23, path: $path47, first: $first105) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            headRepository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path48, recursive: $recursive43) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first106, recursive: $recursive42, recursiveSingleChild: $recursiveSingleChild27)\n                    }\n                    fileNames\n                    blob (path: $path49) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first107, recursive: $recursive44, recursiveSingleChild: $recursiveSingleChild28)\n                    }\n                    file (path: $path50) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first108, query: $query44, path: $path51, after: $after24) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec10) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first109) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first110, query: $query45, type: $type10, orderBy: $orderBy20, interactive: $interactive20) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first111, query: $query46, orderBy: $orderBy21, interactive: $interactive21) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first112, query: $query47) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base4, head: $head4, fetchMissing: $fetchMissing4) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first113) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first114, after: $after25) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange10, after: $after26, path: $path52, first: $first115) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            range {\n                expr\n                base {\n                    ... on GitRef {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    ... on GitRevSpecExpr {\n                        expr\n                    }\n                    ... on GitObject {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                baseRevSpec {\n                    expr\n                    object {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                head {\n                    ... on GitRef {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    ... on GitRevSpecExpr {\n                        expr\n                    }\n                    ... on GitObject {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                headRevSpec {\n                    expr\n                    object {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                mergeBase {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n            }\n            commits (first: $first119) {\n                nodes {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path53, recursive: $recursive46) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first116, recursive: $recursive45, recursiveSingleChild: $recursiveSingleChild29)\n                    }\n                    fileNames\n                    blob (path: $path54) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first117, recursive: $recursive47, recursiveSingleChild: $recursiveSingleChild30)\n                    }\n                    file (path: $path55) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first118, query: $query48, path: $path56, after: $after27) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec11) {\n                        behind\n                        ahead\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            fileDiffs (first: $first120, after: $after28) {\n                nodes {\n                    oldPath\n                    oldFile {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    newPath\n                    newFile {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    mostRelevantFile {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    hunks {\n                        oldNoNewlineAt\n                        section\n                        body\n                    }\n                    stat {\n                        added\n                        changed\n                        deleted\n                    }\n                    internalID\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n                diffStat {\n                    added\n                    changed\n                    deleted\n                }\n                rawDiff\n            }\n        }\n        contributors (revisionRange: $revisionRange11, after: $after29, path: $path57, first: $first126) {\n            nodes {\n                person {\n                    name\n                    email\n                    displayName\n                    avatarURL\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                }\n                count\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first121) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first122, query: $query49, type: $type11, orderBy: $orderBy22, interactive: $interactive22) {\n                        totalCount\n                    }\n                    branches (first: $first123, query: $query50, orderBy: $orderBy23, interactive: $interactive23) {\n                        totalCount\n                    }\n                    tags (first: $first124, query: $query51) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                commits (first: $first125) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        viewerCanAdminister\n        label {\n            text\n            html\n        }\n        detail {\n            text\n            html\n        }\n        matches {\n            url\n            body {\n                text\n                html\n            }\n            highlights {\n                line\n                character\n                length\n            }\n        }\n        codeIntelligenceCommitGraph {\n            stale\n            updatedAt\n        }\n        stars\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"first1\": 0,\n  \"query\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first2\": 0,\n  \"query1\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first3\": 0,\n  \"query2\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"after\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first6\": 0,\n  \"first7\": 0,\n  \"first8\": 0,\n  \"query3\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first9\": 0,\n  \"query4\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first10\": 0,\n  \"query5\": \"\",\n  \"revisionRange1\": \"\",\n  \"after2\": \"\",\n  \"path1\": \"\",\n  \"first11\": 0,\n  \"first12\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path2\": \"\",\n  \"recursive1\": true,\n  \"first13\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path3\": \"\",\n  \"path4\": \"\",\n  \"first14\": 0,\n  \"query6\": \"\",\n  \"path5\": \"\",\n  \"after3\": \"\",\n  \"revspec\": \"\",\n  \"first15\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"first16\": 0,\n  \"recursive4\": true,\n  \"first17\": 0,\n  \"recursive5\": true,\n  \"first18\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild3\": true,\n  \"first19\": 0,\n  \"recursive7\": true,\n  \"recursiveSingleChild4\": true,\n  \"first20\": 0,\n  \"recursive8\": true,\n  \"recursiveSingleChild5\": true,\n  \"path6\": \"\",\n  \"recursive9\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first21\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"path7\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path8\": \"\",\n  \"first22\": 0,\n  \"query7\": \"\",\n  \"path9\": \"\",\n  \"after4\": \"\",\n  \"revspec1\": \"\",\n  \"first23\": 0,\n  \"query8\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"first24\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path10\": \"\",\n  \"path11\": \"\",\n  \"first25\": 0,\n  \"query9\": \"\",\n  \"path12\": \"\",\n  \"after5\": \"\",\n  \"revspec2\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"query10\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first28\": 0,\n  \"query11\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first29\": 0,\n  \"query12\": \"\",\n  \"revisionRange2\": \"\",\n  \"after6\": \"\",\n  \"path13\": \"\",\n  \"first30\": 0,\n  \"first31\": 0,\n  \"recursive12\": true,\n  \"recursiveSingleChild8\": true,\n  \"first32\": 0,\n  \"recursive13\": true,\n  \"first33\": 0,\n  \"recursive14\": true,\n  \"first34\": 0,\n  \"recursive15\": true,\n  \"recursiveSingleChild9\": true,\n  \"first35\": 0,\n  \"recursive16\": true,\n  \"recursiveSingleChild10\": true,\n  \"first36\": 0,\n  \"recursive17\": true,\n  \"recursiveSingleChild11\": true,\n  \"first37\": 0,\n  \"recursive18\": true,\n  \"first38\": 0,\n  \"recursive19\": true,\n  \"first39\": 0,\n  \"recursive20\": true,\n  \"recursiveSingleChild12\": true,\n  \"first40\": 0,\n  \"recursive21\": true,\n  \"recursiveSingleChild13\": true,\n  \"first41\": 0,\n  \"query13\": \"\",\n  \"first42\": 0,\n  \"recursive22\": true,\n  \"recursiveSingleChild14\": true,\n  \"path14\": \"\",\n  \"recursive23\": true,\n  \"first43\": 0,\n  \"recursive24\": true,\n  \"recursiveSingleChild15\": true,\n  \"path15\": \"\",\n  \"recursive25\": true,\n  \"path16\": \"\",\n  \"first44\": 0,\n  \"query14\": \"\",\n  \"path17\": \"\",\n  \"after7\": \"\",\n  \"revspec3\": \"\",\n  \"first45\": 0,\n  \"first46\": 0,\n  \"query15\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first47\": 0,\n  \"query16\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first48\": 0,\n  \"query17\": \"\",\n  \"revisionRange3\": \"\",\n  \"after8\": \"\",\n  \"path18\": \"\",\n  \"first49\": 0,\n  \"startLine1\": 0,\n  \"endLine1\": 0,\n  \"ranges2\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout2\": true,\n  \"isLightTheme2\": true,\n  \"highlightLongLines2\": true,\n  \"first50\": 0,\n  \"query18\": \"\",\n  \"line1\": 0,\n  \"character1\": 0,\n  \"first51\": 0,\n  \"recursive26\": true,\n  \"recursiveSingleChild16\": true,\n  \"path19\": \"\",\n  \"ranges3\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout3\": true,\n  \"isLightTheme3\": true,\n  \"highlightLongLines3\": true,\n  \"path20\": \"\",\n  \"first52\": 0,\n  \"recursive27\": true,\n  \"recursiveSingleChild17\": true,\n  \"path21\": \"\",\n  \"recursive28\": true,\n  \"first53\": 0,\n  \"recursive29\": true,\n  \"recursiveSingleChild18\": true,\n  \"path22\": \"\",\n  \"path23\": \"\",\n  \"first54\": 0,\n  \"query19\": \"\",\n  \"path24\": \"\",\n  \"after9\": \"\",\n  \"revspec4\": \"\",\n  \"first55\": 0,\n  \"query20\": \"\",\n  \"path25\": \"\",\n  \"after10\": \"\",\n  \"revspec5\": \"\",\n  \"first56\": 0,\n  \"query21\": \"\",\n  \"includePatterns1\": [\n    \"\"\n  ],\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first57\": 0,\n  \"first58\": 0,\n  \"recursive30\": true,\n  \"recursiveSingleChild19\": true,\n  \"path26\": \"\",\n  \"recursive31\": true,\n  \"first59\": 0,\n  \"recursive32\": true,\n  \"recursiveSingleChild20\": true,\n  \"path27\": \"\",\n  \"path28\": \"\",\n  \"first60\": 0,\n  \"query22\": \"\",\n  \"path29\": \"\",\n  \"after11\": \"\",\n  \"revspec6\": \"\",\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first61\": 0,\n  \"first62\": 0,\n  \"query23\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first63\": 0,\n  \"query24\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first64\": 0,\n  \"query25\": \"\",\n  \"first65\": 0,\n  \"first66\": 0,\n  \"after12\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"revisionRange4\": \"\",\n  \"after13\": \"\",\n  \"path30\": \"\",\n  \"first67\": 0,\n  \"first68\": 0,\n  \"recursive33\": true,\n  \"recursiveSingleChild21\": true,\n  \"path31\": \"\",\n  \"recursive34\": true,\n  \"first69\": 0,\n  \"recursive35\": true,\n  \"recursiveSingleChild22\": true,\n  \"path32\": \"\",\n  \"path33\": \"\",\n  \"first70\": 0,\n  \"query26\": \"\",\n  \"path34\": \"\",\n  \"after14\": \"\",\n  \"revspec7\": \"\",\n  \"first71\": 0,\n  \"recursive36\": true,\n  \"recursiveSingleChild23\": true,\n  \"path35\": \"\",\n  \"recursive37\": true,\n  \"first72\": 0,\n  \"recursive38\": true,\n  \"recursiveSingleChild24\": true,\n  \"path36\": \"\",\n  \"path37\": \"\",\n  \"first73\": 0,\n  \"query27\": \"\",\n  \"path38\": \"\",\n  \"after15\": \"\",\n  \"revspec8\": \"\",\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first74\": 0,\n  \"first75\": 0,\n  \"query28\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first76\": 0,\n  \"query29\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first77\": 0,\n  \"query30\": \"\",\n  \"first78\": 0,\n  \"first79\": 0,\n  \"after16\": \"\",\n  \"base2\": \"\",\n  \"head2\": \"\",\n  \"fetchMissing2\": true,\n  \"revisionRange5\": \"\",\n  \"after17\": \"\",\n  \"path39\": \"\",\n  \"first80\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first81\": 0,\n  \"first82\": 0,\n  \"query31\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first83\": 0,\n  \"query32\": \"\",\n  \"revisionRange6\": \"\",\n  \"after18\": \"\",\n  \"path40\": \"\",\n  \"first84\": 0,\n  \"first85\": 0,\n  \"query33\": \"\",\n  \"type6\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first86\": 0,\n  \"first87\": 0,\n  \"query34\": \"\",\n  \"type7\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive14\": true,\n  \"first88\": 0,\n  \"query35\": \"\",\n  \"revisionRange7\": \"\",\n  \"after19\": \"\",\n  \"path41\": \"\",\n  \"first89\": 0,\n  \"first90\": 0,\n  \"query36\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive15\": true,\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first91\": 0,\n  \"first92\": 0,\n  \"query37\": \"\",\n  \"type8\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive16\": true,\n  \"first93\": 0,\n  \"query38\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive17\": true,\n  \"revisionRange8\": \"\",\n  \"after20\": \"\",\n  \"path42\": \"\",\n  \"first94\": 0,\n  \"first95\": 0,\n  \"query39\": \"\",\n  \"first96\": 0,\n  \"recursive39\": true,\n  \"recursiveSingleChild25\": true,\n  \"path43\": \"\",\n  \"recursive40\": true,\n  \"first97\": 0,\n  \"recursive41\": true,\n  \"recursiveSingleChild26\": true,\n  \"path44\": \"\",\n  \"path45\": \"\",\n  \"first98\": 0,\n  \"query40\": \"\",\n  \"path46\": \"\",\n  \"after21\": \"\",\n  \"revspec9\": \"\",\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first99\": 0,\n  \"first100\": 0,\n  \"query41\": \"\",\n  \"type9\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive18\": true,\n  \"first101\": 0,\n  \"query42\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive19\": true,\n  \"first102\": 0,\n  \"query43\": \"\",\n  \"first103\": 0,\n  \"first104\": 0,\n  \"after22\": \"\",\n  \"base3\": \"\",\n  \"head3\": \"\",\n  \"fetchMissing3\": true,\n  \"revisionRange9\": \"\",\n  \"after23\": \"\",\n  \"path47\": \"\",\n  \"first105\": 0,\n  \"first106\": 0,\n  \"recursive42\": true,\n  \"recursiveSingleChild27\": true,\n  \"path48\": \"\",\n  \"recursive43\": true,\n  \"first107\": 0,\n  \"recursive44\": true,\n  \"recursiveSingleChild28\": true,\n  \"path49\": \"\",\n  \"path50\": \"\",\n  \"first108\": 0,\n  \"query44\": \"\",\n  \"path51\": \"\",\n  \"after24\": \"\",\n  \"revspec10\": \"\",\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first109\": 0,\n  \"first110\": 0,\n  \"query45\": \"\",\n  \"type10\": \"\",\n  \"orderBy20\": \"\",\n  \"interactive20\": true,\n  \"first111\": 0,\n  \"query46\": \"\",\n  \"orderBy21\": \"\",\n  \"interactive21\": true,\n  \"first112\": 0,\n  \"query47\": \"\",\n  \"first113\": 0,\n  \"first114\": 0,\n  \"after25\": \"\",\n  \"base4\": \"\",\n  \"head4\": \"\",\n  \"fetchMissing4\": true,\n  \"revisionRange10\": \"\",\n  \"after26\": \"\",\n  \"path52\": \"\",\n  \"first115\": 0,\n  \"first116\": 0,\n  \"recursive45\": true,\n  \"recursiveSingleChild29\": true,\n  \"path53\": \"\",\n  \"recursive46\": true,\n  \"first117\": 0,\n  \"recursive47\": true,\n  \"recursiveSingleChild30\": true,\n  \"path54\": \"\",\n  \"path55\": \"\",\n  \"first118\": 0,\n  \"query48\": \"\",\n  \"path56\": \"\",\n  \"after27\": \"\",\n  \"revspec11\": \"\",\n  \"first119\": 0,\n  \"first120\": 0,\n  \"after28\": \"\",\n  \"base5\": \"\",\n  \"head5\": \"\",\n  \"fetchMissing5\": true,\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first121\": 0,\n  \"first122\": 0,\n  \"query49\": \"\",\n  \"type11\": \"\",\n  \"orderBy22\": \"\",\n  \"interactive22\": true,\n  \"first123\": 0,\n  \"query50\": \"\",\n  \"orderBy23\": \"\",\n  \"interactive23\": true,\n  \"first124\": 0,\n  \"query51\": \"\",\n  \"first125\": 0,\n  \"revisionRange11\": \"\",\n  \"after29\": \"\",\n  \"path57\": \"\",\n  \"first126\": 0,\n  \"name\": \"\",\n  \"cloneURL\": \"\",\n  \"uri\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositoryRedirect",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query repositoryRedirect ($name: String, $cloneURL: String, $rev: String!, $inputRevspec: String, $first: Int, $first1: Int, $query: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first2: Int, $query1: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first3: Int, $query2: String, $revisionRange: String, $after: String, $path: String, $first4: Int, $first5: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path1: String, $recursive1: Boolean, $first6: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path2: String!, $path3: String!, $first7: Int, $query3: String, $path4: String, $after1: String, $revspec: String!, $first8: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $first9: Int, $recursive4: Boolean, $first10: Int, $recursive5: Boolean, $first11: Int, $recursive6: Boolean, $recursiveSingleChild3: Boolean, $first12: Int, $recursive7: Boolean, $recursiveSingleChild4: Boolean, $first13: Int, $recursive8: Boolean, $recursiveSingleChild5: Boolean, $path5: String, $recursive9: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first14: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $path6: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path7: String!, $first15: Int, $query4: String, $path8: String, $after2: String, $revspec1: String!, $first16: Int, $query5: String, $includePatterns: [String!], $rev1: String!, $inputRevspec1: String, $first17: Int, $rev2: String!, $inputRevspec2: String, $first18: Int, $first19: Int, $query6: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first20: Int, $query7: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first21: Int, $query8: String, $revisionRange1: String, $after3: String, $path9: String, $first22: Int, $rev3: String!, $inputRevspec3: String, $first23: Int, $first24: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first25: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first26: Int, $query11: String, $revisionRange2: String, $after4: String, $path10: String, $first27: Int, $first28: Int, $query12: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first29: Int, $query13: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first30: Int, $query14: String, $rev4: String!, $inputRevspec4: String, $first31: Int, $first32: Int, $query15: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first33: Int, $query16: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first34: Int, $query17: String, $revisionRange3: String, $after5: String, $path11: String, $first35: Int, $rev5: String!, $inputRevspec5: String, $first36: Int, $first37: Int, $query18: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first38: Int, $query19: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first39: Int, $query20: String, $revisionRange4: String, $after6: String, $path12: String, $first40: Int, $first41: Int, $first42: Int, $after7: String, $base: String, $head: String, $fetchMissing: Boolean, $first43: Int, $revisionRange5: String, $after8: String, $path13: String, $first44: Int) {\n    repositoryRedirect (name: $name, cloneURL: $cloneURL) {\n        ... on Repository {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first1, query: $query, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first2, query: $query1, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first3, query: $query2) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after, path: $path, first: $first4) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first5, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first6, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first7, query: $query3, path: $path4, after: $after1) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path5, recursive: $recursive9) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first8, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    files (first: $first10, recursive: $recursive5) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first12, recursive: $recursive7, recursiveSingleChild: $recursiveSingleChild4) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first11, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    isSingleChild (first: $first13, recursive: $recursive8, recursiveSingleChild: $recursiveSingleChild5)\n                }\n                fileNames\n                blob (path: $path6) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first14, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6)\n                }\n                file (path: $path7) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first15, query: $query4, path: $path8, after: $after2) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec1) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first16, query: $query5, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first17) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first18) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first19, query: $query6, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first20, query: $query7, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first21, query: $query8) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path9, first: $first22) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first23) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first24, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first25, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first26, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after4, path: $path10, first: $first27) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first28, query: $query12, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first29, query: $query13, orderBy: $orderBy7, interactive: $interactive7) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first30, query: $query14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query15, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query16, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query17) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after5, path: $path11, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first36) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first37, query: $query18, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first38, query: $query19, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first39, query: $query20) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after6, path: $path12, first: $first40) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first41) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first42, after: $after7) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange5, after: $after8, path: $path13, first: $first44) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first43) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n        ... on Redirect {\n            url\n        }\n    }\n}",
								"variables": "{\n  \"name\": \"\",\n  \"cloneURL\": \"\",\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first\": 0,\n  \"first1\": 0,\n  \"query\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first2\": 0,\n  \"query1\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first3\": 0,\n  \"query2\": \"\",\n  \"revisionRange\": \"\",\n  \"after\": \"\",\n  \"path\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path1\": \"\",\n  \"recursive1\": true,\n  \"first6\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"path4\": \"\",\n  \"after1\": \"\",\n  \"revspec\": \"\",\n  \"first8\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"first9\": 0,\n  \"recursive4\": true,\n  \"first10\": 0,\n  \"recursive5\": true,\n  \"first11\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild3\": true,\n  \"first12\": 0,\n  \"recursive7\": true,\n  \"recursiveSingleChild4\": true,\n  \"first13\": 0,\n  \"recursive8\": true,\n  \"recursiveSingleChild5\": true,\n  \"path5\": \"\",\n  \"recursive9\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first14\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"path6\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path7\": \"\",\n  \"first15\": 0,\n  \"query4\": \"\",\n  \"path8\": \"\",\n  \"after2\": \"\",\n  \"revspec1\": \"\",\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first17\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first18\": 0,\n  \"first19\": 0,\n  \"query6\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first20\": 0,\n  \"query7\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path9\": \"\",\n  \"first22\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first23\": 0,\n  \"first24\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first25\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first26\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after4\": \"\",\n  \"path10\": \"\",\n  \"first27\": 0,\n  \"first28\": 0,\n  \"query12\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first29\": 0,\n  \"query13\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first30\": 0,\n  \"query14\": \"\",\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query15\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first33\": 0,\n  \"query16\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first34\": 0,\n  \"query17\": \"\",\n  \"revisionRange3\": \"\",\n  \"after5\": \"\",\n  \"path11\": \"\",\n  \"first35\": 0,\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first36\": 0,\n  \"first37\": 0,\n  \"query18\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first38\": 0,\n  \"query19\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first39\": 0,\n  \"query20\": \"\",\n  \"revisionRange4\": \"\",\n  \"after6\": \"\",\n  \"path12\": \"\",\n  \"first40\": 0,\n  \"first41\": 0,\n  \"first42\": 0,\n  \"after7\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"first43\": 0,\n  \"revisionRange5\": \"\",\n  \"after8\": \"\",\n  \"path13\": \"\",\n  \"first44\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "externalServices",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query externalServices ($namespace: ID, $first: Int, $after: String) {\n    externalServices (namespace: $namespace, first: $first, after: $after) {\n        nodes {\n            id\n            kind\n            displayName\n            config\n            createdAt\n            updatedAt\n            namespace {\n                id\n                namespaceName\n                url\n            }\n            repoCount\n            webhookURL\n            warning\n            lastSyncError\n            lastSyncAt\n            nextSyncAt\n            grantedScopes\n        }\n        totalCount\n        pageInfo {\n            endCursor\n            hasNextPage\n        }\n    }\n}",
								"variables": "{\n  \"namespace\": 0,\n  \"first\": 0,\n  \"after\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query repositories ($rev: String!, $inputRevspec: String, $first: Int, $first1: Int, $query: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first2: Int, $query1: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first3: Int, $query2: String, $revisionRange: String, $after: String, $path: String, $first4: Int, $first5: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path1: String, $recursive1: Boolean, $first6: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path2: String!, $path3: String!, $first7: Int, $query3: String, $path4: String, $after1: String, $revspec: String!, $first8: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $first9: Int, $recursive4: Boolean, $first10: Int, $recursive5: Boolean, $first11: Int, $recursive6: Boolean, $recursiveSingleChild3: Boolean, $first12: Int, $recursive7: Boolean, $recursiveSingleChild4: Boolean, $first13: Int, $recursive8: Boolean, $recursiveSingleChild5: Boolean, $path5: String, $recursive9: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first14: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $path6: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path7: String!, $first15: Int, $query4: String, $path8: String, $after2: String, $revspec1: String!, $first16: Int, $query5: String, $includePatterns: [String!], $rev1: String!, $inputRevspec1: String, $first17: Int, $rev2: String!, $inputRevspec2: String, $first18: Int, $first19: Int, $query6: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first20: Int, $query7: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first21: Int, $query8: String, $revisionRange1: String, $after3: String, $path9: String, $first22: Int, $rev3: String!, $inputRevspec3: String, $first23: Int, $first24: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first25: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first26: Int, $query11: String, $revisionRange2: String, $after4: String, $path10: String, $first27: Int, $first28: Int, $query12: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first29: Int, $query13: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first30: Int, $query14: String, $rev4: String!, $inputRevspec4: String, $first31: Int, $first32: Int, $query15: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first33: Int, $query16: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first34: Int, $query17: String, $revisionRange3: String, $after5: String, $path11: String, $first35: Int, $rev5: String!, $inputRevspec5: String, $first36: Int, $first37: Int, $query18: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first38: Int, $query19: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first39: Int, $query20: String, $revisionRange4: String, $after6: String, $path12: String, $first40: Int, $first41: Int, $first42: Int, $after7: String, $base: String, $head: String, $fetchMissing: Boolean, $first43: Int, $revisionRange5: String, $after8: String, $path13: String, $first44: Int, $precise: Boolean, $first45: Int, $query21: String, $after9: String, $names: [String!], $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $failedFetch: Boolean, $orderBy12: RepositoryOrderBy, $descending: Boolean) {\n    repositories (first: $first45, query: $query21, after: $after9, names: $names, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, failedFetch: $failedFetch, orderBy: $orderBy12, descending: $descending) {\n        nodes {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first1, query: $query, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first2, query: $query1, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first3, query: $query2) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after, path: $path, first: $first4) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first5, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first6, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first7, query: $query3, path: $path4, after: $after1) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path5, recursive: $recursive9) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first8, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    files (first: $first10, recursive: $recursive5) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first12, recursive: $recursive7, recursiveSingleChild: $recursiveSingleChild4) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first11, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    isSingleChild (first: $first13, recursive: $recursive8, recursiveSingleChild: $recursiveSingleChild5)\n                }\n                fileNames\n                blob (path: $path6) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first14, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6)\n                }\n                file (path: $path7) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first15, query: $query4, path: $path8, after: $after2) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec1) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first16, query: $query5, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first17) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first18) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first19, query: $query6, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first20, query: $query7, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first21, query: $query8) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path9, first: $first22) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first23) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first24, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first25, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first26, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after4, path: $path10, first: $first27) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first28, query: $query12, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first29, query: $query13, orderBy: $orderBy7, interactive: $interactive7) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first30, query: $query14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query15, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query16, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query17) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after5, path: $path11, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first36) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first37, query: $query18, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first38, query: $query19, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first39, query: $query20) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after6, path: $path12, first: $first40) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first41) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first42, after: $after7) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange5, after: $after8, path: $path13, first: $first44) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first43) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n        totalCount (precise: $precise)\n        pageInfo {\n            endCursor\n            hasNextPage\n        }\n    }\n}",
								"variables": "{\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first\": 0,\n  \"first1\": 0,\n  \"query\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first2\": 0,\n  \"query1\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first3\": 0,\n  \"query2\": \"\",\n  \"revisionRange\": \"\",\n  \"after\": \"\",\n  \"path\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path1\": \"\",\n  \"recursive1\": true,\n  \"first6\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"path4\": \"\",\n  \"after1\": \"\",\n  \"revspec\": \"\",\n  \"first8\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"first9\": 0,\n  \"recursive4\": true,\n  \"first10\": 0,\n  \"recursive5\": true,\n  \"first11\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild3\": true,\n  \"first12\": 0,\n  \"recursive7\": true,\n  \"recursiveSingleChild4\": true,\n  \"first13\": 0,\n  \"recursive8\": true,\n  \"recursiveSingleChild5\": true,\n  \"path5\": \"\",\n  \"recursive9\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first14\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"path6\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path7\": \"\",\n  \"first15\": 0,\n  \"query4\": \"\",\n  \"path8\": \"\",\n  \"after2\": \"\",\n  \"revspec1\": \"\",\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first17\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first18\": 0,\n  \"first19\": 0,\n  \"query6\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first20\": 0,\n  \"query7\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path9\": \"\",\n  \"first22\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first23\": 0,\n  \"first24\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first25\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first26\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after4\": \"\",\n  \"path10\": \"\",\n  \"first27\": 0,\n  \"first28\": 0,\n  \"query12\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first29\": 0,\n  \"query13\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first30\": 0,\n  \"query14\": \"\",\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query15\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first33\": 0,\n  \"query16\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first34\": 0,\n  \"query17\": \"\",\n  \"revisionRange3\": \"\",\n  \"after5\": \"\",\n  \"path11\": \"\",\n  \"first35\": 0,\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first36\": 0,\n  \"first37\": 0,\n  \"query18\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first38\": 0,\n  \"query19\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first39\": 0,\n  \"query20\": \"\",\n  \"revisionRange4\": \"\",\n  \"after6\": \"\",\n  \"path12\": \"\",\n  \"first40\": 0,\n  \"first41\": 0,\n  \"first42\": 0,\n  \"after7\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"first43\": 0,\n  \"revisionRange5\": \"\",\n  \"after8\": \"\",\n  \"path13\": \"\",\n  \"first44\": 0,\n  \"precise\": true,\n  \"first45\": 0,\n  \"query21\": \"\",\n  \"after9\": \"\",\n  \"names\": [\n    \"\"\n  ],\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"failedFetch\": true,\n  \"orderBy12\": \"\",\n  \"descending\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "phabricatorRepo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query phabricatorRepo ($name: String, $uri: String) {\n    phabricatorRepo (name: $name, uri: $uri) {\n        name\n        uri\n        callsign\n        url\n    }\n}",
								"variables": "{\n  \"name\": \"\",\n  \"uri\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "currentUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query currentUser ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first13: Int, $eventName2: String, $first14: Int, $first15: Int, $precise2: Boolean, $first16: Int, $query5: String, $after3: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $first17: Int, $eventName3: String, $first18: Int, $eventName4: String, $first19: Int, $first20: Int, $precise3: Boolean, $first21: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev1: String!, $inputRevspec1: String, $first22: Int, $first23: Int, $query7: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first24: Int, $query8: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first25: Int, $query9: String, $revisionRange1: String, $after5: String, $path1: String, $first26: Int, $first27: Int, $eventName5: String, $first28: Int, $first29: Int, $precise4: Boolean, $first30: Int, $query10: String, $after6: String, $cloned4: Boolean, $notCloned4: Boolean, $indexed4: Boolean, $notIndexed4: Boolean, $externalServiceID4: ID, $first31: Int, $eventName6: String, $first32: Int, $first33: Int, $precise5: Boolean, $first34: Int, $query11: String, $after7: String, $cloned5: Boolean, $notCloned5: Boolean, $indexed5: Boolean, $notIndexed5: Boolean, $externalServiceID5: ID, $first35: Int, $first36: Int, $eventName7: String, $first37: Int, $first38: Int, $precise6: Boolean, $first39: Int, $query12: String, $after8: String, $cloned6: Boolean, $notCloned6: Boolean, $indexed6: Boolean, $notIndexed6: Boolean, $externalServiceID6: ID, $first40: Int, $first41: Int, $eventName8: String, $first42: Int, $first43: Int, $precise7: Boolean, $first44: Int, $query13: String, $after9: String, $cloned7: Boolean, $notCloned7: Boolean, $indexed7: Boolean, $notIndexed7: Boolean, $externalServiceID7: ID, $rev2: String!, $inputRevspec2: String, $first45: Int, $first46: Int, $query14: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first47: Int, $query15: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first48: Int, $query16: String, $revisionRange2: String, $after10: String, $path2: String, $first49: Int, $first50: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path3: String, $recursive1: Boolean, $first51: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path4: String!, $path5: String!, $first52: Int, $query17: String, $path6: String, $after11: String, $revspec: String!, $rev3: String!, $inputRevspec3: String, $first53: Int, $first54: Int, $query18: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first55: Int, $query19: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first56: Int, $query20: String, $first57: Int, $first58: Int, $after12: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange3: String, $after13: String, $path7: String, $first59: Int, $precise8: Boolean, $first60: Int, $query21: String, $after14: String, $cloned8: Boolean, $notCloned8: Boolean, $indexed8: Boolean, $notIndexed8: Boolean, $externalServiceID8: ID, $rev4: String!, $inputRevspec4: String, $first61: Int, $first62: Int, $query22: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first63: Int, $query23: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first64: Int, $query24: String, $revisionRange4: String, $after15: String, $path8: String, $first65: Int, $first66: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $path9: String, $recursive4: Boolean, $first67: Int, $recursive5: Boolean, $recursiveSingleChild3: Boolean, $path10: String!, $path11: String!, $first68: Int, $query25: String, $path12: String, $after16: String, $revspec1: String!, $first69: Int, $recursive6: Boolean, $recursiveSingleChild4: Boolean, $first70: Int, $recursive7: Boolean, $first71: Int, $recursive8: Boolean, $first72: Int, $recursive9: Boolean, $recursiveSingleChild5: Boolean, $first73: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $first74: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path13: String, $recursive12: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first75: Int, $recursive13: Boolean, $recursiveSingleChild8: Boolean, $path14: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path15: String!, $first76: Int, $query26: String, $path16: String, $after17: String, $revspec2: String!, $first77: Int, $query27: String, $includePatterns: [String!], $rev5: String!, $inputRevspec5: String, $first78: Int, $rev6: String!, $inputRevspec6: String, $first79: Int, $first80: Int, $query28: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first81: Int, $query29: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first82: Int, $query30: String, $revisionRange5: String, $after18: String, $path17: String, $first83: Int, $rev7: String!, $inputRevspec7: String, $first84: Int, $first85: Int, $query31: String, $type6: GitRefType, $orderBy12: GitRefOrder, $interactive12: Boolean, $first86: Int, $query32: String, $orderBy13: GitRefOrder, $interactive13: Boolean, $first87: Int, $query33: String, $revisionRange6: String, $after19: String, $path18: String, $first88: Int, $first89: Int, $query34: String, $type7: GitRefType, $orderBy14: GitRefOrder, $interactive14: Boolean, $first90: Int, $query35: String, $orderBy15: GitRefOrder, $interactive15: Boolean, $first91: Int, $query36: String, $rev8: String!, $inputRevspec8: String, $first92: Int, $first93: Int, $query37: String, $type8: GitRefType, $orderBy16: GitRefOrder, $interactive16: Boolean, $first94: Int, $query38: String, $orderBy17: GitRefOrder, $interactive17: Boolean, $first95: Int, $query39: String, $revisionRange7: String, $after20: String, $path19: String, $first96: Int, $rev9: String!, $inputRevspec9: String, $first97: Int, $first98: Int, $query40: String, $type9: GitRefType, $orderBy18: GitRefOrder, $interactive18: Boolean, $first99: Int, $query41: String, $orderBy19: GitRefOrder, $interactive19: Boolean, $first100: Int, $query42: String, $revisionRange8: String, $after21: String, $path20: String, $first101: Int, $first102: Int, $first103: Int, $after22: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $first104: Int, $revisionRange9: String, $after23: String, $path21: String, $first105: Int) {\n    currentUser {\n        id\n        username\n        email\n        displayName\n        avatarURL\n        url\n        settingsURL\n        createdAt\n        updatedAt\n        siteAdmin\n        builtinAuth\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        organizations {\n            nodes {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            totalCount\n        }\n        organizationMemberships {\n            nodes {\n                organization {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first9, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first10) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first11) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                updatedAt\n            }\n            totalCount\n        }\n        tags\n        usageStatistics {\n            searchQueries\n            pageViews\n            codeIntelligenceActions\n            findReferencesActions\n            lastActiveTime\n            lastActiveCodeHostIntegrationTime\n        }\n        eventLogs (first: $first17, eventName: $eventName3) {\n            nodes {\n                name\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first13, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first14) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first15) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first16, query: $query5, after: $after3, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                anonymousUserID\n                url\n                source\n                argument\n                version\n                timestamp\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        emails {\n            email\n            isPrimary\n            verified\n            verificationPending\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first18, eventName: $eventName4) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first19) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first20) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first21, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first22) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first23, query: $query7, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first24, query: $query8, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first25, query: $query9) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after5, path: $path1, first: $first26) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            viewerCanManuallyVerify\n        }\n        accessTokens (first: $first35) {\n            nodes {\n                id\n                subject {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first27, eventName: $eventName5) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first28) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first29) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first30, query: $query10, after: $after6, cloned: $cloned4, notCloned: $notCloned4, indexed: $indexed4, notIndexed: $notIndexed4, externalServiceID: $externalServiceID4) {\n                        totalCount (precise: $precise4)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                scopes\n                note\n                creator {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first31, eventName: $eventName6) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first32) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first33) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first34, query: $query11, after: $after7, cloned: $cloned5, notCloned: $notCloned5, indexed: $indexed5, notIndexed: $notIndexed5, externalServiceID: $externalServiceID5) {\n                        totalCount (precise: $precise5)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                lastUsedAt\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        externalAccounts (first: $first40) {\n            nodes {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first36, eventName: $eventName7) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first37) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first38) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first39, query: $query12, after: $after8, cloned: $cloned6, notCloned: $notCloned6, indexed: $indexed6, notIndexed: $notIndexed6, externalServiceID: $externalServiceID6) {\n                        totalCount (precise: $precise6)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                serviceType\n                serviceID\n                clientID\n                accountID\n                createdAt\n                updatedAt\n                refreshURL\n                accountData\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        session {\n            canSignOut\n        }\n        viewerCanAdminister\n        viewerCanChangeUsername\n        surveyResponses {\n            id\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first41, eventName: $eventName8) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first42) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first43) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first44, query: $query13, after: $after9, cloned: $cloned7, notCloned: $notCloned7, indexed: $indexed7, notIndexed: $notIndexed7, externalServiceID: $externalServiceID7) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise7)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first45) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first46, query: $query14, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first47, query: $query15, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first48, query: $query16) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after10, path: $path2, first: $first49) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            email\n            score\n            reason\n            better\n            createdAt\n        }\n        databaseID\n        namespaceName\n        repositories (first: $first60, query: $query21, after: $after14, cloned: $cloned8, notCloned: $notCloned8, indexed: $indexed8, notIndexed: $notIndexed8, externalServiceID: $externalServiceID8) {\n            nodes {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path3, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first50, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path4) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first51, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path5) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first52, query: $query17, path: $path6, after: $after11) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first53) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first54, query: $query18, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first55, query: $query19, orderBy: $orderBy7, interactive: $interactive7) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first56, query: $query20) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first57) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first58, after: $after12) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange3, after: $after13, path: $path7, first: $first59) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            totalCount (precise: $precise8)\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        publicRepositories {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first61) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first62, query: $query22, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first63, query: $query23, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first64, query: $query24) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after15, path: $path8, first: $first65) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first66, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    fileNames\n                    blob (path: $path10) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first67, recursive: $recursive5, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    file (path: $path11) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first68, query: $query25, path: $path12, after: $after16) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec1) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path13, recursive: $recursive12) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first70, recursive: $recursive7) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first69, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild4)\n                    }\n                    files (first: $first71, recursive: $recursive8) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first73, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first72, recursive: $recursive9, recursiveSingleChild: $recursiveSingleChild5)\n                    }\n                    isSingleChild (first: $first74, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                }\n                fileNames\n                blob (path: $path14) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first75, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild8)\n                }\n                file (path: $path15) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first76, query: $query26, path: $path16, after: $after17) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec2) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first77, query: $query27, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first78) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first79) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first80, query: $query28, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first81, query: $query29, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first82, query: $query30) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange5, after: $after18, path: $path17, first: $first83) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first84) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first85, query: $query31, type: $type6, orderBy: $orderBy12, interactive: $interactive12) {\n                        totalCount\n                    }\n                    branches (first: $first86, query: $query32, orderBy: $orderBy13, interactive: $interactive13) {\n                        totalCount\n                    }\n                    tags (first: $first87, query: $query33) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after19, path: $path18, first: $first88) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first89, query: $query34, type: $type7, orderBy: $orderBy14, interactive: $interactive14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first90, query: $query35, orderBy: $orderBy15, interactive: $interactive15) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first91, query: $query36) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first92) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first93, query: $query37, type: $type8, orderBy: $orderBy16, interactive: $interactive16) {\n                        totalCount\n                    }\n                    branches (first: $first94, query: $query38, orderBy: $orderBy17, interactive: $interactive17) {\n                        totalCount\n                    }\n                    tags (first: $first95, query: $query39) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after20, path: $path19, first: $first96) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev9, inputRevspec: $inputRevspec9) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first97) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first98, query: $query40, type: $type9, orderBy: $orderBy18, interactive: $interactive18) {\n                        totalCount\n                    }\n                    branches (first: $first99, query: $query41, orderBy: $orderBy19, interactive: $interactive19) {\n                        totalCount\n                    }\n                    tags (first: $first100, query: $query42) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after21, path: $path20, first: $first101) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first102) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first103, after: $after22) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange9, after: $after23, path: $path21, first: $first105) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first104) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first13\": 0,\n  \"eventName2\": \"\",\n  \"first14\": 0,\n  \"first15\": 0,\n  \"precise2\": true,\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"after3\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"first17\": 0,\n  \"eventName3\": \"\",\n  \"first18\": 0,\n  \"eventName4\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise3\": true,\n  \"first21\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first22\": 0,\n  \"first23\": 0,\n  \"query7\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first24\": 0,\n  \"query8\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first25\": 0,\n  \"query9\": \"\",\n  \"revisionRange1\": \"\",\n  \"after5\": \"\",\n  \"path1\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"eventName5\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"precise4\": true,\n  \"first30\": 0,\n  \"query10\": \"\",\n  \"after6\": \"\",\n  \"cloned4\": true,\n  \"notCloned4\": true,\n  \"indexed4\": true,\n  \"notIndexed4\": true,\n  \"externalServiceID4\": 0,\n  \"first31\": 0,\n  \"eventName6\": \"\",\n  \"first32\": 0,\n  \"first33\": 0,\n  \"precise5\": true,\n  \"first34\": 0,\n  \"query11\": \"\",\n  \"after7\": \"\",\n  \"cloned5\": true,\n  \"notCloned5\": true,\n  \"indexed5\": true,\n  \"notIndexed5\": true,\n  \"externalServiceID5\": 0,\n  \"first35\": 0,\n  \"first36\": 0,\n  \"eventName7\": \"\",\n  \"first37\": 0,\n  \"first38\": 0,\n  \"precise6\": true,\n  \"first39\": 0,\n  \"query12\": \"\",\n  \"after8\": \"\",\n  \"cloned6\": true,\n  \"notCloned6\": true,\n  \"indexed6\": true,\n  \"notIndexed6\": true,\n  \"externalServiceID6\": 0,\n  \"first40\": 0,\n  \"first41\": 0,\n  \"eventName8\": \"\",\n  \"first42\": 0,\n  \"first43\": 0,\n  \"precise7\": true,\n  \"first44\": 0,\n  \"query13\": \"\",\n  \"after9\": \"\",\n  \"cloned7\": true,\n  \"notCloned7\": true,\n  \"indexed7\": true,\n  \"notIndexed7\": true,\n  \"externalServiceID7\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first45\": 0,\n  \"first46\": 0,\n  \"query14\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first47\": 0,\n  \"query15\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first48\": 0,\n  \"query16\": \"\",\n  \"revisionRange2\": \"\",\n  \"after10\": \"\",\n  \"path2\": \"\",\n  \"first49\": 0,\n  \"first50\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path3\": \"\",\n  \"recursive1\": true,\n  \"first51\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path4\": \"\",\n  \"path5\": \"\",\n  \"first52\": 0,\n  \"query17\": \"\",\n  \"path6\": \"\",\n  \"after11\": \"\",\n  \"revspec\": \"\",\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first53\": 0,\n  \"first54\": 0,\n  \"query18\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first55\": 0,\n  \"query19\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first56\": 0,\n  \"query20\": \"\",\n  \"first57\": 0,\n  \"first58\": 0,\n  \"after12\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange3\": \"\",\n  \"after13\": \"\",\n  \"path7\": \"\",\n  \"first59\": 0,\n  \"precise8\": true,\n  \"first60\": 0,\n  \"query21\": \"\",\n  \"after14\": \"\",\n  \"cloned8\": true,\n  \"notCloned8\": true,\n  \"indexed8\": true,\n  \"notIndexed8\": true,\n  \"externalServiceID8\": 0,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first61\": 0,\n  \"first62\": 0,\n  \"query22\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first63\": 0,\n  \"query23\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first64\": 0,\n  \"query24\": \"\",\n  \"revisionRange4\": \"\",\n  \"after15\": \"\",\n  \"path8\": \"\",\n  \"first65\": 0,\n  \"first66\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"path9\": \"\",\n  \"recursive4\": true,\n  \"first67\": 0,\n  \"recursive5\": true,\n  \"recursiveSingleChild3\": true,\n  \"path10\": \"\",\n  \"path11\": \"\",\n  \"first68\": 0,\n  \"query25\": \"\",\n  \"path12\": \"\",\n  \"after16\": \"\",\n  \"revspec1\": \"\",\n  \"first69\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild4\": true,\n  \"first70\": 0,\n  \"recursive7\": true,\n  \"first71\": 0,\n  \"recursive8\": true,\n  \"first72\": 0,\n  \"recursive9\": true,\n  \"recursiveSingleChild5\": true,\n  \"first73\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"first74\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path13\": \"\",\n  \"recursive12\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first75\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild8\": true,\n  \"path14\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path15\": \"\",\n  \"first76\": 0,\n  \"query26\": \"\",\n  \"path16\": \"\",\n  \"after17\": \"\",\n  \"revspec2\": \"\",\n  \"first77\": 0,\n  \"query27\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first78\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first79\": 0,\n  \"first80\": 0,\n  \"query28\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first81\": 0,\n  \"query29\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first82\": 0,\n  \"query30\": \"\",\n  \"revisionRange5\": \"\",\n  \"after18\": \"\",\n  \"path17\": \"\",\n  \"first83\": 0,\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first84\": 0,\n  \"first85\": 0,\n  \"query31\": \"\",\n  \"type6\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first86\": 0,\n  \"query32\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"first87\": 0,\n  \"query33\": \"\",\n  \"revisionRange6\": \"\",\n  \"after19\": \"\",\n  \"path18\": \"\",\n  \"first88\": 0,\n  \"first89\": 0,\n  \"query34\": \"\",\n  \"type7\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive14\": true,\n  \"first90\": 0,\n  \"query35\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive15\": true,\n  \"first91\": 0,\n  \"query36\": \"\",\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first92\": 0,\n  \"first93\": 0,\n  \"query37\": \"\",\n  \"type8\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive16\": true,\n  \"first94\": 0,\n  \"query38\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive17\": true,\n  \"first95\": 0,\n  \"query39\": \"\",\n  \"revisionRange7\": \"\",\n  \"after20\": \"\",\n  \"path19\": \"\",\n  \"first96\": 0,\n  \"rev9\": \"\",\n  \"inputRevspec9\": \"\",\n  \"first97\": 0,\n  \"first98\": 0,\n  \"query40\": \"\",\n  \"type9\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive18\": true,\n  \"first99\": 0,\n  \"query41\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive19\": true,\n  \"first100\": 0,\n  \"query42\": \"\",\n  \"revisionRange8\": \"\",\n  \"after21\": \"\",\n  \"path20\": \"\",\n  \"first101\": 0,\n  \"first102\": 0,\n  \"first103\": 0,\n  \"after22\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"first104\": 0,\n  \"revisionRange9\": \"\",\n  \"after23\": \"\",\n  \"path21\": \"\",\n  \"first105\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "token 04ce9eafece299aaa2f3e522295053389e911edc",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first13: Int, $first14: Int, $precise2: Boolean, $first15: Int, $query5: String, $after3: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $first16: Int, $eventName2: String, $first17: Int, $eventName3: String, $first18: Int, $first19: Int, $precise3: Boolean, $first20: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev1: String!, $inputRevspec1: String, $first21: Int, $first22: Int, $query7: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first23: Int, $query8: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first24: Int, $query9: String, $revisionRange1: String, $after5: String, $path1: String, $first25: Int, $first26: Int, $eventName4: String, $first27: Int, $first28: Int, $precise4: Boolean, $first29: Int, $query10: String, $after6: String, $cloned4: Boolean, $notCloned4: Boolean, $indexed4: Boolean, $notIndexed4: Boolean, $externalServiceID4: ID, $first30: Int, $eventName5: String, $first31: Int, $first32: Int, $precise5: Boolean, $first33: Int, $query11: String, $after7: String, $cloned5: Boolean, $notCloned5: Boolean, $indexed5: Boolean, $notIndexed5: Boolean, $externalServiceID5: ID, $first34: Int, $first35: Int, $eventName6: String, $first36: Int, $precise6: Boolean, $first37: Int, $query12: String, $after8: String, $cloned6: Boolean, $notCloned6: Boolean, $indexed6: Boolean, $notIndexed6: Boolean, $externalServiceID6: ID, $first38: Int, $first39: Int, $eventName7: String, $first40: Int, $first41: Int, $precise7: Boolean, $first42: Int, $query13: String, $after9: String, $cloned7: Boolean, $notCloned7: Boolean, $indexed7: Boolean, $notIndexed7: Boolean, $externalServiceID7: ID, $rev2: String!, $inputRevspec2: String, $first43: Int, $first44: Int, $query14: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first45: Int, $query15: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first46: Int, $query16: String, $revisionRange2: String, $after10: String, $path2: String, $first47: Int, $first48: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path3: String, $recursive1: Boolean, $first49: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path4: String!, $path5: String!, $first50: Int, $query17: String, $path6: String, $after11: String, $revspec: String!, $rev3: String!, $inputRevspec3: String, $first51: Int, $first52: Int, $query18: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first53: Int, $query19: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first54: Int, $query20: String, $first55: Int, $first56: Int, $after12: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange3: String, $after13: String, $path7: String, $first57: Int, $precise8: Boolean, $first58: Int, $query21: String, $after14: String, $cloned8: Boolean, $notCloned8: Boolean, $indexed8: Boolean, $notIndexed8: Boolean, $externalServiceID8: ID, $rev4: String!, $inputRevspec4: String, $first59: Int, $first60: Int, $query22: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first61: Int, $query23: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first62: Int, $query24: String, $revisionRange4: String, $after15: String, $path8: String, $first63: Int, $first64: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $path9: String, $recursive4: Boolean, $first65: Int, $recursive5: Boolean, $recursiveSingleChild3: Boolean, $path10: String!, $path11: String!, $first66: Int, $query25: String, $path12: String, $after16: String, $revspec1: String!, $first67: Int, $recursive6: Boolean, $recursiveSingleChild4: Boolean, $first68: Int, $recursive7: Boolean, $first69: Int, $recursive8: Boolean, $first70: Int, $recursive9: Boolean, $recursiveSingleChild5: Boolean, $first71: Int, $recursive10: Boolean, $recursiveSingleChild6: Boolean, $first72: Int, $recursive11: Boolean, $recursiveSingleChild7: Boolean, $path13: String, $recursive12: Boolean, $startLine: Int!, $endLine: Int!, $ranges: [HighlightLineRange!]!, $disableTimeout: Boolean!, $isLightTheme: Boolean, $highlightLongLines: Boolean, $line: Int!, $character: Int!, $first73: Int, $recursive13: Boolean, $recursiveSingleChild8: Boolean, $path14: String!, $ranges1: [HighlightLineRange!]!, $disableTimeout1: Boolean!, $isLightTheme1: Boolean, $highlightLongLines1: Boolean, $path15: String!, $first74: Int, $query26: String, $path16: String, $after17: String, $revspec2: String!, $first75: Int, $query27: String, $includePatterns: [String!], $rev5: String!, $inputRevspec5: String, $first76: Int, $rev6: String!, $inputRevspec6: String, $first77: Int, $first78: Int, $query28: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first79: Int, $query29: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first80: Int, $query30: String, $revisionRange5: String, $after18: String, $path17: String, $first81: Int, $rev7: String!, $inputRevspec7: String, $first82: Int, $first83: Int, $query31: String, $type6: GitRefType, $orderBy12: GitRefOrder, $interactive12: Boolean, $first84: Int, $query32: String, $orderBy13: GitRefOrder, $interactive13: Boolean, $first85: Int, $query33: String, $revisionRange6: String, $after19: String, $path18: String, $first86: Int, $first87: Int, $query34: String, $type7: GitRefType, $orderBy14: GitRefOrder, $interactive14: Boolean, $first88: Int, $query35: String, $orderBy15: GitRefOrder, $interactive15: Boolean, $first89: Int, $query36: String, $rev8: String!, $inputRevspec8: String, $first90: Int, $first91: Int, $query37: String, $type8: GitRefType, $orderBy16: GitRefOrder, $interactive16: Boolean, $first92: Int, $query38: String, $orderBy17: GitRefOrder, $interactive17: Boolean, $first93: Int, $query39: String, $revisionRange7: String, $after20: String, $path19: String, $first94: Int, $rev9: String!, $inputRevspec9: String, $first95: Int, $first96: Int, $query40: String, $type9: GitRefType, $orderBy18: GitRefOrder, $interactive18: Boolean, $first97: Int, $query41: String, $orderBy19: GitRefOrder, $interactive19: Boolean, $first98: Int, $query42: String, $revisionRange8: String, $after21: String, $path20: String, $first99: Int, $first100: Int, $first101: Int, $after22: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $first102: Int, $revisionRange9: String, $after23: String, $path21: String, $first103: Int, $username: String, $email: String) {\n    user (username: $username, email: $email) {\n        id\n        username\n        email\n        displayName\n        avatarURL\n        url\n        settingsURL\n        createdAt\n        updatedAt\n        siteAdmin\n        builtinAuth\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        organizations {\n            nodes {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            totalCount\n        }\n        organizationMemberships {\n            nodes {\n                organization {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first9, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first10) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first11) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                updatedAt\n            }\n            totalCount\n        }\n        tags\n        usageStatistics {\n            searchQueries\n            pageViews\n            codeIntelligenceActions\n            findReferencesActions\n            lastActiveTime\n            lastActiveCodeHostIntegrationTime\n        }\n        eventLogs (first: $first16, eventName: $eventName2) {\n            nodes {\n                name\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first13) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first14) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first15, query: $query5, after: $after3, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                anonymousUserID\n                url\n                source\n                argument\n                version\n                timestamp\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        emails {\n            email\n            isPrimary\n            verified\n            verificationPending\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first17, eventName: $eventName3) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                accessTokens (first: $first18) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first19) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first20, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first21) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first22, query: $query7, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first23, query: $query8, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first24, query: $query9) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after5, path: $path1, first: $first25) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            viewerCanManuallyVerify\n        }\n        accessTokens (first: $first34) {\n            nodes {\n                id\n                subject {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first26, eventName: $eventName4) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first27) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first28) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first29, query: $query10, after: $after6, cloned: $cloned4, notCloned: $notCloned4, indexed: $indexed4, notIndexed: $notIndexed4, externalServiceID: $externalServiceID4) {\n                        totalCount (precise: $precise4)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                scopes\n                note\n                creator {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first30, eventName: $eventName5) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first31) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first32) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first33, query: $query11, after: $after7, cloned: $cloned5, notCloned: $notCloned5, indexed: $indexed5, notIndexed: $notIndexed5, externalServiceID: $externalServiceID5) {\n                        totalCount (precise: $precise5)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                lastUsedAt\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        externalAccounts (first: $first38) {\n            nodes {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first35, eventName: $eventName6) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first36) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first37, query: $query12, after: $after8, cloned: $cloned6, notCloned: $notCloned6, indexed: $indexed6, notIndexed: $notIndexed6, externalServiceID: $externalServiceID6) {\n                        totalCount (precise: $precise6)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                serviceType\n                serviceID\n                clientID\n                accountID\n                createdAt\n                updatedAt\n                refreshURL\n                accountData\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        session {\n            canSignOut\n        }\n        viewerCanAdminister\n        viewerCanChangeUsername\n        surveyResponses {\n            id\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first39, eventName: $eventName7) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first40) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first41) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                databaseID\n                namespaceName\n                repositories (first: $first42, query: $query13, after: $after9, cloned: $cloned7, notCloned: $notCloned7, indexed: $indexed7, notIndexed: $notIndexed7, externalServiceID: $externalServiceID7) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise7)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first43) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first44, query: $query14, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first45, query: $query15, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first46, query: $query16) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after10, path: $path2, first: $first47) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            email\n            score\n            reason\n            better\n            createdAt\n        }\n        databaseID\n        namespaceName\n        repositories (first: $first58, query: $query21, after: $after14, cloned: $cloned8, notCloned: $notCloned8, indexed: $indexed8, notIndexed: $notIndexed8, externalServiceID: $externalServiceID8) {\n            nodes {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path3, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first48, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path4) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first49, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path5) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first50, query: $query17, path: $path6, after: $after11) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first51) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first52, query: $query18, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first53, query: $query19, orderBy: $orderBy7, interactive: $interactive7) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first54, query: $query20) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first55) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first56, after: $after12) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange3, after: $after13, path: $path7, first: $first57) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            totalCount (precise: $precise8)\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        publicRepositories {\n            id\n            name\n            uri\n            description\n            language\n            createdAt\n            updatedAt\n            commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                id\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first59) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first60, query: $query22, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                        totalCount\n                    }\n                    branches (first: $first61, query: $query23, orderBy: $orderBy9, interactive: $interactive9) {\n                        totalCount\n                    }\n                    tags (first: $first62, query: $query24) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange4, after: $after15, path: $path8, first: $first63) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                oid\n                abbreviatedOID\n                author {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                committer {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    date\n                }\n                message\n                subject\n                body\n                parents {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path9, recursive: $recursive4) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first64, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    fileNames\n                    blob (path: $path10) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first65, recursive: $recursive5, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    file (path: $path11) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first66, query: $query25, path: $path12, after: $after16) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec1) {\n                        behind\n                        ahead\n                    }\n                }\n                url\n                canonicalURL\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                tree (path: $path13, recursive: $recursive12) {\n                    path\n                    isRoot\n                    name\n                    isDirectory\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    rawZipArchiveURL\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    directories (first: $first68, recursive: $recursive7) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first67, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild4)\n                    }\n                    files (first: $first69, recursive: $recursive8) {\n                        path\n                        name\n                        isDirectory\n                        url\n                    }\n                    entries (first: $first71, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild6) {\n                        path\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first70, recursive: $recursive9, recursiveSingleChild: $recursiveSingleChild5)\n                    }\n                    isSingleChild (first: $first72, recursive: $recursive11, recursiveSingleChild: $recursiveSingleChild7)\n                }\n                fileNames\n                blob (path: $path14) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    blame (startLine: $startLine, endLine: $endLine) {\n                        startLine\n                        endLine\n                        startByte\n                        endByte\n                        rev\n                        message\n                        filename\n                    }\n                    highlight (disableTimeout: $disableTimeout, isLightTheme: $isLightTheme, highlightLongLines: $highlightLongLines) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges)\n                    }\n                    submodule {\n                        url\n                        commit\n                        path\n                    }\n                    symbol (line: $line, character: $character) {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    isSingleChild (first: $first73, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild8)\n                }\n                file (path: $path15) {\n                    path\n                    name\n                    isDirectory\n                    content\n                    byteSize\n                    binary\n                    richHTML\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    highlight (disableTimeout: $disableTimeout1, isLightTheme: $isLightTheme1, highlightLongLines: $highlightLongLines1) {\n                        aborted\n                        html\n                        lineRanges (ranges: $ranges1)\n                    }\n                }\n                languages\n                languageStatistics {\n                    name\n                    totalBytes\n                    totalLines\n                }\n                ancestors (first: $first74, query: $query26, path: $path16, after: $after17) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                behindAhead (revspec: $revspec2) {\n                    behind\n                    ahead\n                }\n                symbols (first: $first75, query: $query27, includePatterns: $includePatterns) {\n                    nodes {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n            }\n            mirrorInfo {\n                remoteURL\n                cloneInProgress\n                cloneProgress\n                cloned\n                updatedAt\n                updateSchedule {\n                    intervalSeconds\n                    due\n                    index\n                    total\n                }\n                updateQueue {\n                    index\n                    updating\n                    total\n                }\n            }\n            externalRepository {\n                id\n                serviceType\n                serviceID\n            }\n            isFork\n            isArchived\n            isPrivate\n            externalServices (first: $first76) {\n                nodes {\n                    id\n                    kind\n                    displayName\n                    config\n                    createdAt\n                    updatedAt\n                    namespace {\n                        id\n                        namespaceName\n                        url\n                    }\n                    repoCount\n                    webhookURL\n                    warning\n                    lastSyncError\n                    lastSyncAt\n                    nextSyncAt\n                    grantedScopes\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            cloneInProgress\n            textSearchIndex {\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first77) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first78, query: $query28, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                        totalCount\n                    }\n                    branches (first: $first79, query: $query29, orderBy: $orderBy11, interactive: $interactive11) {\n                        totalCount\n                    }\n                    tags (first: $first80, query: $query30) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange5, after: $after18, path: $path17, first: $first81) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                status {\n                    updatedAt\n                    contentByteSize\n                    contentFilesCount\n                    indexByteSize\n                    indexShardsCount\n                    newLinesCount\n                    defaultBranchNewLinesCount\n                    otherBranchesNewLinesCount\n                }\n                refs {\n                    ref {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    indexed\n                    current\n                    indexedCommit {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n            }\n            url\n            externalURLs {\n                url\n                serviceKind\n                serviceType\n            }\n            defaultBranch {\n                id\n                name\n                abbrevName\n                displayName\n                prefix\n                type\n                target {\n                    oid\n                    abbreviatedOID\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    type\n                }\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev7, inputRevspec: $inputRevspec7) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first82) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first83, query: $query31, type: $type6, orderBy: $orderBy12, interactive: $interactive12) {\n                        totalCount\n                    }\n                    branches (first: $first84, query: $query32, orderBy: $orderBy13, interactive: $interactive13) {\n                        totalCount\n                    }\n                    tags (first: $first85, query: $query33) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after19, path: $path18, first: $first86) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                url\n            }\n            gitRefs (first: $first87, query: $query34, type: $type7, orderBy: $orderBy14, interactive: $interactive14) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            branches (first: $first88, query: $query35, orderBy: $orderBy15, interactive: $interactive15) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            tags (first: $first89, query: $query36) {\n                nodes {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                baseRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev8, inputRevspec: $inputRevspec8) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first90) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first91, query: $query37, type: $type8, orderBy: $orderBy16, interactive: $interactive16) {\n                        totalCount\n                    }\n                    branches (first: $first92, query: $query38, orderBy: $orderBy17, interactive: $interactive17) {\n                        totalCount\n                    }\n                    tags (first: $first93, query: $query39) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange7, after: $after20, path: $path19, first: $first94) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                headRepository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev9, inputRevspec: $inputRevspec9) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first95) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first96, query: $query40, type: $type9, orderBy: $orderBy18, interactive: $interactive18) {\n                        totalCount\n                    }\n                    branches (first: $first97, query: $query41, orderBy: $orderBy19, interactive: $interactive19) {\n                        totalCount\n                    }\n                    tags (first: $first98, query: $query42) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange8, after: $after21, path: $path20, first: $first99) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                range {\n                    expr\n                    base {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    baseRevSpec {\n                        expr\n                    }\n                    head {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    headRevSpec {\n                        expr\n                    }\n                    mergeBase {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                }\n                commits (first: $first100) {\n                    nodes {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                fileDiffs (first: $first101, after: $after22) {\n                    nodes {\n                        oldPath\n                        newPath\n                        internalID\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                    diffStat {\n                        added\n                        changed\n                        deleted\n                    }\n                    rawDiff\n                }\n            }\n            contributors (revisionRange: $revisionRange9, after: $after23, path: $path21, first: $first103) {\n                nodes {\n                    person {\n                        name\n                        email\n                        displayName\n                        avatarURL\n                    }\n                    count\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    commits (first: $first102) {\n                        totalCount\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            viewerCanAdminister\n            label {\n                text\n                html\n            }\n            detail {\n                text\n                html\n            }\n            matches {\n                url\n                body {\n                    text\n                    html\n                }\n                highlights {\n                    line\n                    character\n                    length\n                }\n            }\n            codeIntelligenceCommitGraph {\n                stale\n                updatedAt\n            }\n            stars\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first13\": 0,\n  \"first14\": 0,\n  \"precise2\": true,\n  \"first15\": 0,\n  \"query5\": \"\",\n  \"after3\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"first16\": 0,\n  \"eventName2\": \"\",\n  \"first17\": 0,\n  \"eventName3\": \"\",\n  \"first18\": 0,\n  \"first19\": 0,\n  \"precise3\": true,\n  \"first20\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first21\": 0,\n  \"first22\": 0,\n  \"query7\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first23\": 0,\n  \"query8\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first24\": 0,\n  \"query9\": \"\",\n  \"revisionRange1\": \"\",\n  \"after5\": \"\",\n  \"path1\": \"\",\n  \"first25\": 0,\n  \"first26\": 0,\n  \"eventName4\": \"\",\n  \"first27\": 0,\n  \"first28\": 0,\n  \"precise4\": true,\n  \"first29\": 0,\n  \"query10\": \"\",\n  \"after6\": \"\",\n  \"cloned4\": true,\n  \"notCloned4\": true,\n  \"indexed4\": true,\n  \"notIndexed4\": true,\n  \"externalServiceID4\": 0,\n  \"first30\": 0,\n  \"eventName5\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"precise5\": true,\n  \"first33\": 0,\n  \"query11\": \"\",\n  \"after7\": \"\",\n  \"cloned5\": true,\n  \"notCloned5\": true,\n  \"indexed5\": true,\n  \"notIndexed5\": true,\n  \"externalServiceID5\": 0,\n  \"first34\": 0,\n  \"first35\": 0,\n  \"eventName6\": \"\",\n  \"first36\": 0,\n  \"precise6\": true,\n  \"first37\": 0,\n  \"query12\": \"\",\n  \"after8\": \"\",\n  \"cloned6\": true,\n  \"notCloned6\": true,\n  \"indexed6\": true,\n  \"notIndexed6\": true,\n  \"externalServiceID6\": 0,\n  \"first38\": 0,\n  \"first39\": 0,\n  \"eventName7\": \"\",\n  \"first40\": 0,\n  \"first41\": 0,\n  \"precise7\": true,\n  \"first42\": 0,\n  \"query13\": \"\",\n  \"after9\": \"\",\n  \"cloned7\": true,\n  \"notCloned7\": true,\n  \"indexed7\": true,\n  \"notIndexed7\": true,\n  \"externalServiceID7\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first43\": 0,\n  \"first44\": 0,\n  \"query14\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first45\": 0,\n  \"query15\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first46\": 0,\n  \"query16\": \"\",\n  \"revisionRange2\": \"\",\n  \"after10\": \"\",\n  \"path2\": \"\",\n  \"first47\": 0,\n  \"first48\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path3\": \"\",\n  \"recursive1\": true,\n  \"first49\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path4\": \"\",\n  \"path5\": \"\",\n  \"first50\": 0,\n  \"query17\": \"\",\n  \"path6\": \"\",\n  \"after11\": \"\",\n  \"revspec\": \"\",\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first51\": 0,\n  \"first52\": 0,\n  \"query18\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first53\": 0,\n  \"query19\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first54\": 0,\n  \"query20\": \"\",\n  \"first55\": 0,\n  \"first56\": 0,\n  \"after12\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange3\": \"\",\n  \"after13\": \"\",\n  \"path7\": \"\",\n  \"first57\": 0,\n  \"precise8\": true,\n  \"first58\": 0,\n  \"query21\": \"\",\n  \"after14\": \"\",\n  \"cloned8\": true,\n  \"notCloned8\": true,\n  \"indexed8\": true,\n  \"notIndexed8\": true,\n  \"externalServiceID8\": 0,\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first59\": 0,\n  \"first60\": 0,\n  \"query22\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first61\": 0,\n  \"query23\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first62\": 0,\n  \"query24\": \"\",\n  \"revisionRange4\": \"\",\n  \"after15\": \"\",\n  \"path8\": \"\",\n  \"first63\": 0,\n  \"first64\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"path9\": \"\",\n  \"recursive4\": true,\n  \"first65\": 0,\n  \"recursive5\": true,\n  \"recursiveSingleChild3\": true,\n  \"path10\": \"\",\n  \"path11\": \"\",\n  \"first66\": 0,\n  \"query25\": \"\",\n  \"path12\": \"\",\n  \"after16\": \"\",\n  \"revspec1\": \"\",\n  \"first67\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild4\": true,\n  \"first68\": 0,\n  \"recursive7\": true,\n  \"first69\": 0,\n  \"recursive8\": true,\n  \"first70\": 0,\n  \"recursive9\": true,\n  \"recursiveSingleChild5\": true,\n  \"first71\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild6\": true,\n  \"first72\": 0,\n  \"recursive11\": true,\n  \"recursiveSingleChild7\": true,\n  \"path13\": \"\",\n  \"recursive12\": true,\n  \"startLine\": 0,\n  \"endLine\": 0,\n  \"ranges\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout\": true,\n  \"isLightTheme\": true,\n  \"highlightLongLines\": true,\n  \"line\": 0,\n  \"character\": 0,\n  \"first73\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild8\": true,\n  \"path14\": \"\",\n  \"ranges1\": {\n    \"startLine\": 0,\n    \"endLine\": 0\n  },\n  \"disableTimeout1\": true,\n  \"isLightTheme1\": true,\n  \"highlightLongLines1\": true,\n  \"path15\": \"\",\n  \"first74\": 0,\n  \"query26\": \"\",\n  \"path16\": \"\",\n  \"after17\": \"\",\n  \"revspec2\": \"\",\n  \"first75\": 0,\n  \"query27\": \"\",\n  \"includePatterns\": [\n    \"\"\n  ],\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first76\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first77\": 0,\n  \"first78\": 0,\n  \"query28\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first79\": 0,\n  \"query29\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first80\": 0,\n  \"query30\": \"\",\n  \"revisionRange5\": \"\",\n  \"after18\": \"\",\n  \"path17\": \"\",\n  \"first81\": 0,\n  \"rev7\": \"\",\n  \"inputRevspec7\": \"\",\n  \"first82\": 0,\n  \"first83\": 0,\n  \"query31\": \"\",\n  \"type6\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first84\": 0,\n  \"query32\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"first85\": 0,\n  \"query33\": \"\",\n  \"revisionRange6\": \"\",\n  \"after19\": \"\",\n  \"path18\": \"\",\n  \"first86\": 0,\n  \"first87\": 0,\n  \"query34\": \"\",\n  \"type7\": \"\",\n  \"orderBy14\": \"\",\n  \"interactive14\": true,\n  \"first88\": 0,\n  \"query35\": \"\",\n  \"orderBy15\": \"\",\n  \"interactive15\": true,\n  \"first89\": 0,\n  \"query36\": \"\",\n  \"rev8\": \"\",\n  \"inputRevspec8\": \"\",\n  \"first90\": 0,\n  \"first91\": 0,\n  \"query37\": \"\",\n  \"type8\": \"\",\n  \"orderBy16\": \"\",\n  \"interactive16\": true,\n  \"first92\": 0,\n  \"query38\": \"\",\n  \"orderBy17\": \"\",\n  \"interactive17\": true,\n  \"first93\": 0,\n  \"query39\": \"\",\n  \"revisionRange7\": \"\",\n  \"after20\": \"\",\n  \"path19\": \"\",\n  \"first94\": 0,\n  \"rev9\": \"\",\n  \"inputRevspec9\": \"\",\n  \"first95\": 0,\n  \"first96\": 0,\n  \"query40\": \"\",\n  \"type9\": \"\",\n  \"orderBy18\": \"\",\n  \"interactive18\": true,\n  \"first97\": 0,\n  \"query41\": \"\",\n  \"orderBy19\": \"\",\n  \"interactive19\": true,\n  \"first98\": 0,\n  \"query42\": \"\",\n  \"revisionRange8\": \"\",\n  \"after21\": \"\",\n  \"path20\": \"\",\n  \"first99\": 0,\n  \"first100\": 0,\n  \"first101\": 0,\n  \"after22\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"first102\": 0,\n  \"revisionRange9\": \"\",\n  \"after23\": \"\",\n  \"path21\": \"\",\n  \"first103\": 0,\n  \"username\": \"\",\n  \"email\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "users",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query users ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $first4: Int, $eventName1: String, $first5: Int, $eventName2: String, $first6: Int, $first7: Int, $precise1: Boolean, $first8: Int, $query1: String, $after1: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first9: Int, $first10: Int, $first11: Int, $eventName3: String, $first12: Int, $first13: Int, $precise2: Boolean, $first14: Int, $query2: String, $after2: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev: String!, $inputRevspec: String, $first15: Int, $first16: Int, $query3: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first17: Int, $query4: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first18: Int, $query5: String, $revisionRange: String, $after3: String, $path: String, $first19: Int, $precise3: Boolean, $first20: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $first21: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $path1: String, $recursive1: Boolean, $first22: Int, $recursive2: Boolean, $recursiveSingleChild1: Boolean, $path2: String!, $path3: String!, $first23: Int, $query7: String, $path4: String, $after5: String, $revspec: String!, $rev1: String!, $inputRevspec1: String, $first24: Int, $first25: Int, $query8: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first26: Int, $query9: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first27: Int, $query10: String, $first28: Int, $first29: Int, $after6: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange1: String, $after7: String, $path5: String, $first30: Int, $first31: Int, $query11: String, $tag: String, $activePeriod: UserActivePeriod) {\n    users (first: $first31, query: $query11, tag: $tag, activePeriod: $activePeriod) {\n        nodes {\n            id\n            username\n            email\n            displayName\n            avatarURL\n            url\n            settingsURL\n            createdAt\n            updatedAt\n            siteAdmin\n            builtinAuth\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            organizations {\n                nodes {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                totalCount\n            }\n            organizationMemberships {\n                nodes {\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    updatedAt\n                }\n                totalCount\n            }\n            tags\n            usageStatistics {\n                searchQueries\n                pageViews\n                codeIntelligenceActions\n                findReferencesActions\n                lastActiveTime\n                lastActiveCodeHostIntegrationTime\n            }\n            eventLogs (first: $first4, eventName: $eventName1) {\n                nodes {\n                    name\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    anonymousUserID\n                    url\n                    source\n                    argument\n                    version\n                    timestamp\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            emails {\n                email\n                isPrimary\n                verified\n                verificationPending\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first5, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first6) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first7) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first8, query: $query1, after: $after1, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                viewerCanManuallyVerify\n            }\n            accessTokens (first: $first9) {\n                nodes {\n                    id\n                    subject {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    scopes\n                    note\n                    creator {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    lastUsedAt\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            externalAccounts (first: $first10) {\n                nodes {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    serviceType\n                    serviceID\n                    clientID\n                    accountID\n                    createdAt\n                    updatedAt\n                    refreshURL\n                    accountData\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            session {\n                canSignOut\n            }\n            viewerCanAdminister\n            viewerCanChangeUsername\n            surveyResponses {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first11, eventName: $eventName3) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first12) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first13) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first14, query: $query2, after: $after2, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                email\n                score\n                reason\n                better\n                createdAt\n            }\n            databaseID\n            namespaceName\n            repositories (first: $first20, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                nodes {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first15) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first16, query: $query3, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first17, query: $query4, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first18, query: $query5) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after3, path: $path, first: $first19) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n                totalCount (precise: $precise3)\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            publicRepositories {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive1) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first21, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first22, recursive: $recursive2, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first23, query: $query7, path: $path4, after: $after5) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first24) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first25, query: $query8, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first26, query: $query9, orderBy: $orderBy3, interactive: $interactive3) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first27, query: $query10) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first28) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first29, after: $after6) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange1, after: $after7, path: $path5, first: $first30) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n        }\n        totalCount\n        pageInfo {\n            endCursor\n            hasNextPage\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"first4\": 0,\n  \"eventName1\": \"\",\n  \"first5\": 0,\n  \"eventName2\": \"\",\n  \"first6\": 0,\n  \"first7\": 0,\n  \"precise1\": true,\n  \"first8\": 0,\n  \"query1\": \"\",\n  \"after1\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first9\": 0,\n  \"first10\": 0,\n  \"first11\": 0,\n  \"eventName3\": \"\",\n  \"first12\": 0,\n  \"first13\": 0,\n  \"precise2\": true,\n  \"first14\": 0,\n  \"query2\": \"\",\n  \"after2\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first15\": 0,\n  \"first16\": 0,\n  \"query3\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first17\": 0,\n  \"query4\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first18\": 0,\n  \"query5\": \"\",\n  \"revisionRange\": \"\",\n  \"after3\": \"\",\n  \"path\": \"\",\n  \"first19\": 0,\n  \"precise3\": true,\n  \"first20\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"first21\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"path1\": \"\",\n  \"recursive1\": true,\n  \"first22\": 0,\n  \"recursive2\": true,\n  \"recursiveSingleChild1\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first23\": 0,\n  \"query7\": \"\",\n  \"path4\": \"\",\n  \"after5\": \"\",\n  \"revspec\": \"\",\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first24\": 0,\n  \"first25\": 0,\n  \"query8\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first26\": 0,\n  \"query9\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first27\": 0,\n  \"query10\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"after6\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange1\": \"\",\n  \"after7\": \"\",\n  \"path5\": \"\",\n  \"first30\": 0,\n  \"first31\": 0,\n  \"query11\": \"\",\n  \"tag\": \"\",\n  \"activePeriod\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "organization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query organization ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $rev1: String!, $inputRevspec1: String, $first13: Int, $first14: Int, $query5: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first15: Int, $query6: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first16: Int, $query7: String, $revisionRange1: String, $after3: String, $path1: String, $first17: Int, $first18: Int, $eventName2: String, $first19: Int, $first20: Int, $precise2: Boolean, $first21: Int, $query8: String, $after4: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev2: String!, $inputRevspec2: String, $first22: Int, $first23: Int, $query9: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first24: Int, $query10: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first25: Int, $query11: String, $revisionRange2: String, $after5: String, $path2: String, $first26: Int, $first27: Int, $eventName3: String, $first28: Int, $first29: Int, $precise3: Boolean, $first30: Int, $query12: String, $after6: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $rev3: String!, $inputRevspec3: String, $first31: Int, $first32: Int, $query13: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first33: Int, $query14: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first34: Int, $query15: String, $revisionRange3: String, $after7: String, $path3: String, $first35: Int, $name: String!) {\n    organization (name: $name) {\n        id\n        name\n        displayName\n        createdAt\n        members {\n            nodes {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first9, eventName: $eventName1) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first10) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first11) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise1)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first13) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first14, query: $query5, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                        totalCount\n                    }\n                    branches (first: $first15, query: $query6, orderBy: $orderBy3, interactive: $interactive3) {\n                        totalCount\n                    }\n                    tags (first: $first16, query: $query7) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange1, after: $after3, path: $path1, first: $first17) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        viewerPendingInvitation {\n            id\n            organization {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n            sender {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first18, eventName: $eventName2) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first19) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first20) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first21, query: $query8, after: $after4, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise2)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first22) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first23, query: $query9, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                        totalCount\n                    }\n                    branches (first: $first24, query: $query10, orderBy: $orderBy5, interactive: $interactive5) {\n                        totalCount\n                    }\n                    tags (first: $first25, query: $query11) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange2, after: $after5, path: $path2, first: $first26) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            recipient {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first27, eventName: $eventName3) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first28) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first29) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first30, query: $query12, after: $after6, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise3)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first31) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first32, query: $query13, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                        totalCount\n                    }\n                    branches (first: $first33, query: $query14, orderBy: $orderBy7, interactive: $interactive7) {\n                        totalCount\n                    }\n                    tags (first: $first34, query: $query15) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange3, after: $after7, path: $path3, first: $first35) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            notifiedAt\n            respondedAt\n            responseType\n            respondURL\n            revokedAt\n        }\n        viewerCanAdminister\n        viewerIsMember\n        url\n        settingsURL\n        namespaceName\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first13\": 0,\n  \"first14\": 0,\n  \"query5\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first15\": 0,\n  \"query6\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first16\": 0,\n  \"query7\": \"\",\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path1\": \"\",\n  \"first17\": 0,\n  \"first18\": 0,\n  \"eventName2\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise2\": true,\n  \"first21\": 0,\n  \"query8\": \"\",\n  \"after4\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first22\": 0,\n  \"first23\": 0,\n  \"query9\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first24\": 0,\n  \"query10\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first25\": 0,\n  \"query11\": \"\",\n  \"revisionRange2\": \"\",\n  \"after5\": \"\",\n  \"path2\": \"\",\n  \"first26\": 0,\n  \"first27\": 0,\n  \"eventName3\": \"\",\n  \"first28\": 0,\n  \"first29\": 0,\n  \"precise3\": true,\n  \"first30\": 0,\n  \"query12\": \"\",\n  \"after6\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first31\": 0,\n  \"first32\": 0,\n  \"query13\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first33\": 0,\n  \"query14\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first34\": 0,\n  \"query15\": \"\",\n  \"revisionRange3\": \"\",\n  \"after7\": \"\",\n  \"path3\": \"\",\n  \"first35\": 0,\n  \"name\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "organizations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query organizations ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $first4: Int, $eventName1: String, $first5: Int, $first6: Int, $precise1: Boolean, $first7: Int, $query1: String, $after1: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first8: Int, $eventName2: String, $first9: Int, $first10: Int, $precise2: Boolean, $first11: Int, $query2: String, $after2: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $first12: Int, $eventName3: String, $first13: Int, $first14: Int, $precise3: Boolean, $first15: Int, $query3: String, $after3: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $first16: Int, $query4: String) {\n    organizations (first: $first16, query: $query4) {\n        nodes {\n            id\n            name\n            displayName\n            createdAt\n            members {\n                nodes {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                totalCount\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first4, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first5) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first6) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first7, query: $query1, after: $after1, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n            viewerPendingInvitation {\n                id\n                organization {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n                sender {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first8, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first9) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first10) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first11, query: $query2, after: $after2, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                recipient {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first12, eventName: $eventName3) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first13) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first14) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first15, query: $query3, after: $after3, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                        totalCount (precise: $precise3)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                notifiedAt\n                respondedAt\n                responseType\n                respondURL\n                revokedAt\n            }\n            viewerCanAdminister\n            viewerIsMember\n            url\n            settingsURL\n            namespaceName\n        }\n        totalCount\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"first4\": 0,\n  \"eventName1\": \"\",\n  \"first5\": 0,\n  \"first6\": 0,\n  \"precise1\": true,\n  \"first7\": 0,\n  \"query1\": \"\",\n  \"after1\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first8\": 0,\n  \"eventName2\": \"\",\n  \"first9\": 0,\n  \"first10\": 0,\n  \"precise2\": true,\n  \"first11\": 0,\n  \"query2\": \"\",\n  \"after2\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"first12\": 0,\n  \"eventName3\": \"\",\n  \"first13\": 0,\n  \"first14\": 0,\n  \"precise3\": true,\n  \"first15\": 0,\n  \"query3\": \"\",\n  \"after3\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"first16\": 0,\n  \"query4\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "renderMarkdown",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query renderMarkdown ($markdown: String!, $options: MarkdownOptions) {\n    renderMarkdown (markdown: $markdown, options: $options)\n}",
								"variables": "{\n  \"markdown\": \"\",\n  \"options\": {\n    \"alwaysNil\": \"\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "highlightCode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query highlightCode ($code: String!, $fuzzyLanguage: String!, $disableTimeout: Boolean!, $isLightTheme: Boolean) {\n    highlightCode (code: $code, fuzzyLanguage: $fuzzyLanguage, disableTimeout: $disableTimeout, isLightTheme: $isLightTheme)\n}",
								"variables": "{\n  \"code\": \"\",\n  \"fuzzyLanguage\": \"\",\n  \"disableTimeout\": true,\n  \"isLightTheme\": true\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "settingsSubject",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query settingsSubject ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $id: ID!) {\n    settingsSubject (id: $id) {\n        id\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsURL\n        viewerCanAdminister\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "viewerSettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query viewerSettings ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID) {\n    viewerSettings {\n        subjects {\n            id\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsURL\n            viewerCanAdminister\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n        }\n        final\n        merged {\n            contents\n            messages\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "viewerConfiguration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query viewerConfiguration ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID) {\n    viewerConfiguration {\n        subjects {\n            id\n            latestSettings {\n                id\n                subject {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                author {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                contents\n                configuration {\n                    contents\n                    messages\n                }\n            }\n            settingsURL\n            viewerCanAdminister\n            settingsCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                }\n                final\n                merged {\n                    contents\n                    messages\n                }\n            }\n            configurationCascade {\n                subjects {\n                    id\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsURL\n                    viewerCanAdminister\n                    settingsCascade {\n                        final\n                    }\n                }\n                merged {\n                    contents\n                    messages\n                }\n            }\n        }\n        merged {\n            contents\n            messages\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "clientConfiguration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query clientConfiguration {\n    clientConfiguration {\n        contentScriptUrls\n        parentSourcegraph {\n            url\n        }\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "searchFilterSuggestions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query searchFilterSuggestions {\n    searchFilterSuggestions {\n        repogroup\n        repo\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query search ($first: Int, $recursive: Boolean, $recursiveSingleChild: Boolean, $rev: String!, $inputRevspec: String, $first1: Int, $first2: Int, $query: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first3: Int, $query1: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first4: Int, $query2: String, $revisionRange: String, $after: String, $path: String, $first5: Int, $first6: Int, $recursive1: Boolean, $recursiveSingleChild1: Boolean, $path1: String, $recursive2: Boolean, $first7: Int, $recursive3: Boolean, $recursiveSingleChild2: Boolean, $path2: String!, $path3: String!, $first8: Int, $query3: String, $path4: String, $after1: String, $revspec: String!, $rev1: String!, $inputRevspec1: String, $first9: Int, $first10: Int, $query4: String, $type1: GitRefType, $orderBy2: GitRefOrder, $interactive2: Boolean, $first11: Int, $query5: String, $orderBy3: GitRefOrder, $interactive3: Boolean, $first12: Int, $query6: String, $first13: Int, $first14: Int, $after2: String, $base: String, $head: String, $fetchMissing: Boolean, $revisionRange1: String, $after3: String, $path5: String, $first15: Int, $first16: Int, $recursive4: Boolean, $recursiveSingleChild3: Boolean, $path6: String, $recursive5: Boolean, $first17: Int, $recursive6: Boolean, $recursiveSingleChild4: Boolean, $path7: String!, $path8: String!, $first18: Int, $query7: String, $path9: String, $after4: String, $revspec1: String!, $rev2: String!, $inputRevspec2: String, $first19: Int, $first20: Int, $query8: String, $type2: GitRefType, $orderBy4: GitRefOrder, $interactive4: Boolean, $first21: Int, $query9: String, $orderBy5: GitRefOrder, $interactive5: Boolean, $first22: Int, $query10: String, $first23: Int, $first24: Int, $after5: String, $base1: String, $head1: String, $fetchMissing1: Boolean, $revisionRange2: String, $after6: String, $path10: String, $first25: Int, $first26: Int, $recursive7: Boolean, $recursiveSingleChild5: Boolean, $path11: String, $recursive8: Boolean, $first27: Int, $recursive9: Boolean, $recursiveSingleChild6: Boolean, $path12: String!, $path13: String!, $first28: Int, $query11: String, $path14: String, $after7: String, $revspec2: String!, $rev3: String!, $inputRevspec3: String, $first29: Int, $first30: Int, $query12: String, $type3: GitRefType, $orderBy6: GitRefOrder, $interactive6: Boolean, $first31: Int, $query13: String, $orderBy7: GitRefOrder, $interactive7: Boolean, $first32: Int, $query14: String, $first33: Int, $first34: Int, $after8: String, $base2: String, $head2: String, $fetchMissing2: Boolean, $revisionRange3: String, $after9: String, $path15: String, $first35: Int, $first36: Int, $recursive10: Boolean, $recursiveSingleChild7: Boolean, $path16: String, $recursive11: Boolean, $first37: Int, $recursive12: Boolean, $recursiveSingleChild8: Boolean, $path17: String!, $path18: String!, $first38: Int, $query15: String, $path19: String, $after10: String, $revspec3: String!, $rev4: String!, $inputRevspec4: String, $first39: Int, $first40: Int, $query16: String, $type4: GitRefType, $orderBy8: GitRefOrder, $interactive8: Boolean, $first41: Int, $query17: String, $orderBy9: GitRefOrder, $interactive9: Boolean, $first42: Int, $query18: String, $first43: Int, $first44: Int, $after11: String, $base3: String, $head3: String, $fetchMissing3: Boolean, $revisionRange4: String, $after12: String, $path20: String, $first45: Int, $first46: Int, $first47: Int, $recursive13: Boolean, $recursiveSingleChild9: Boolean, $path21: String, $recursive14: Boolean, $first48: Int, $recursive15: Boolean, $recursiveSingleChild10: Boolean, $path22: String!, $path23: String!, $first49: Int, $query19: String, $path24: String, $after13: String, $revspec4: String!, $rev5: String!, $inputRevspec5: String, $first50: Int, $first51: Int, $query20: String, $type5: GitRefType, $orderBy10: GitRefOrder, $interactive10: Boolean, $first52: Int, $query21: String, $orderBy11: GitRefOrder, $interactive11: Boolean, $first53: Int, $query22: String, $first54: Int, $first55: Int, $after14: String, $base4: String, $head4: String, $fetchMissing4: Boolean, $revisionRange5: String, $after15: String, $path25: String, $first56: Int, $rev6: String!, $inputRevspec6: String, $first57: Int, $first58: Int, $query23: String, $type6: GitRefType, $orderBy12: GitRefOrder, $interactive12: Boolean, $first59: Int, $query24: String, $orderBy13: GitRefOrder, $interactive13: Boolean, $first60: Int, $query25: String, $revisionRange6: String, $after16: String, $path26: String, $first61: Int, $first62: Int, $recursive16: Boolean, $recursiveSingleChild11: Boolean, $version: SearchVersion, $patternType: SearchPatternType, $query26: String, $versionContext: String) {\n    search (version: $version, patternType: $patternType, query: $query26, versionContext: $versionContext) {\n        results {\n            results {\n                ... on FileMatch {\n                    file {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first, recursive: $recursive, recursiveSingleChild: $recursiveSingleChild)\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    revSpec {\n                        ... on GitRef {\n                            id\n                            name\n                            abbrevName\n                            displayName\n                            prefix\n                            type\n                            url\n                        }\n                        ... on GitRevSpecExpr {\n                            expr\n                        }\n                        ... on GitObject {\n                            oid\n                            abbreviatedOID\n                            type\n                        }\n                    }\n                    symbols {\n                        name\n                        containerName\n                        kind\n                        language\n                        url\n                        canonicalURL\n                        fileLocal\n                    }\n                    lineMatches {\n                        preview\n                        lineNumber\n                        offsetAndLengths\n                        limitHit\n                    }\n                    limitHit\n                }\n                ... on CommitSearchResult {\n                    label {\n                        text\n                        html\n                    }\n                    url\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    commit {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    refs {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    sourceRefs {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    messagePreview {\n                        value\n                    }\n                    diffPreview {\n                        value\n                    }\n                }\n                ... on Repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first1) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first2, query: $query, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first3, query: $query1, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first4, query: $query2) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after, path: $path, first: $first5) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            matchCount\n            resultCount\n            approximateResultCount\n            limitHit\n            sparkline\n            repositories {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev1, inputRevspec: $inputRevspec1) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path1, recursive: $recursive2) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first6, recursive: $recursive1, recursiveSingleChild: $recursiveSingleChild1)\n                    }\n                    fileNames\n                    blob (path: $path2) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first7, recursive: $recursive3, recursiveSingleChild: $recursiveSingleChild2)\n                    }\n                    file (path: $path3) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first8, query: $query3, path: $path4, after: $after1) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first9) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first10, query: $query4, type: $type1, orderBy: $orderBy2, interactive: $interactive2) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first11, query: $query5, orderBy: $orderBy3, interactive: $interactive3) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first12, query: $query6) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base, head: $head, fetchMissing: $fetchMissing) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first13) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first14, after: $after2) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange1, after: $after3, path: $path5, first: $first15) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            repositoriesCount\n            cloning {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev2, inputRevspec: $inputRevspec2) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path6, recursive: $recursive5) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first16, recursive: $recursive4, recursiveSingleChild: $recursiveSingleChild3)\n                    }\n                    fileNames\n                    blob (path: $path7) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first17, recursive: $recursive6, recursiveSingleChild: $recursiveSingleChild4)\n                    }\n                    file (path: $path8) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first18, query: $query7, path: $path9, after: $after4) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec1) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first19) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first20, query: $query8, type: $type2, orderBy: $orderBy4, interactive: $interactive4) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first21, query: $query9, orderBy: $orderBy5, interactive: $interactive5) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first22, query: $query10) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base1, head: $head1, fetchMissing: $fetchMissing1) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first23) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first24, after: $after5) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange2, after: $after6, path: $path10, first: $first25) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            missing {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev3, inputRevspec: $inputRevspec3) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path11, recursive: $recursive8) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first26, recursive: $recursive7, recursiveSingleChild: $recursiveSingleChild5)\n                    }\n                    fileNames\n                    blob (path: $path12) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first27, recursive: $recursive9, recursiveSingleChild: $recursiveSingleChild6)\n                    }\n                    file (path: $path13) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first28, query: $query11, path: $path14, after: $after7) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec2) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first29) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first30, query: $query12, type: $type3, orderBy: $orderBy6, interactive: $interactive6) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first31, query: $query13, orderBy: $orderBy7, interactive: $interactive7) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first32, query: $query14) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base2, head: $head2, fetchMissing: $fetchMissing2) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first33) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first34, after: $after8) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange3, after: $after9, path: $path15, first: $first35) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            timedout {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev4, inputRevspec: $inputRevspec4) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path16, recursive: $recursive11) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first36, recursive: $recursive10, recursiveSingleChild: $recursiveSingleChild7)\n                    }\n                    fileNames\n                    blob (path: $path17) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first37, recursive: $recursive12, recursiveSingleChild: $recursiveSingleChild8)\n                    }\n                    file (path: $path18) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first38, query: $query15, path: $path19, after: $after10) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec3) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first39) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first40, query: $query16, type: $type4, orderBy: $orderBy8, interactive: $interactive8) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first41, query: $query17, orderBy: $orderBy9, interactive: $interactive9) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first42, query: $query18) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base3, head: $head3, fetchMissing: $fetchMissing3) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first43) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first44, after: $after11) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange4, after: $after12, path: $path20, first: $first45) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            indexUnavailable\n            alert {\n                title\n                description\n                proposedQueries {\n                    description\n                    query\n                }\n            }\n            elapsedMilliseconds\n            dynamicFilters {\n                value\n                label\n                count\n                limitHit\n                kind\n            }\n        }\n        suggestions (first: $first46) {\n            ... on Repository {\n                id\n                name\n                uri\n                description\n                language\n                createdAt\n                updatedAt\n                commit (rev: $rev5, inputRevspec: $inputRevspec5) {\n                    id\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    oid\n                    abbreviatedOID\n                    author {\n                        date\n                    }\n                    committer {\n                        date\n                    }\n                    message\n                    subject\n                    body\n                    parents {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    url\n                    canonicalURL\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    tree (path: $path21, recursive: $recursive14) {\n                        path\n                        isRoot\n                        name\n                        isDirectory\n                        url\n                        canonicalURL\n                        rawZipArchiveURL\n                        isSingleChild (first: $first47, recursive: $recursive13, recursiveSingleChild: $recursiveSingleChild9)\n                    }\n                    fileNames\n                    blob (path: $path22) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first48, recursive: $recursive15, recursiveSingleChild: $recursiveSingleChild10)\n                    }\n                    file (path: $path23) {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                    }\n                    languages\n                    languageStatistics {\n                        name\n                        totalBytes\n                        totalLines\n                    }\n                    ancestors (first: $first49, query: $query19, path: $path24, after: $after13) {\n                        totalCount\n                    }\n                    behindAhead (revspec: $revspec4) {\n                        behind\n                        ahead\n                    }\n                }\n                mirrorInfo {\n                    remoteURL\n                    cloneInProgress\n                    cloneProgress\n                    cloned\n                    updatedAt\n                    updateSchedule {\n                        intervalSeconds\n                        due\n                        index\n                        total\n                    }\n                    updateQueue {\n                        index\n                        updating\n                        total\n                    }\n                }\n                externalRepository {\n                    id\n                    serviceType\n                    serviceID\n                }\n                isFork\n                isArchived\n                isPrivate\n                externalServices (first: $first50) {\n                    nodes {\n                        id\n                        kind\n                        displayName\n                        config\n                        createdAt\n                        updatedAt\n                        repoCount\n                        webhookURL\n                        warning\n                        lastSyncError\n                        lastSyncAt\n                        nextSyncAt\n                        grantedScopes\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                cloneInProgress\n                textSearchIndex {\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    status {\n                        updatedAt\n                        contentByteSize\n                        contentFilesCount\n                        indexByteSize\n                        indexShardsCount\n                        newLinesCount\n                        defaultBranchNewLinesCount\n                        otherBranchesNewLinesCount\n                    }\n                    refs {\n                        indexed\n                        current\n                    }\n                }\n                url\n                externalURLs {\n                    url\n                    serviceKind\n                    serviceType\n                }\n                defaultBranch {\n                    id\n                    name\n                    abbrevName\n                    displayName\n                    prefix\n                    type\n                    target {\n                        oid\n                        abbreviatedOID\n                        type\n                    }\n                    repository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    url\n                }\n                gitRefs (first: $first51, query: $query20, type: $type5, orderBy: $orderBy10, interactive: $interactive10) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                branches (first: $first52, query: $query21, orderBy: $orderBy11, interactive: $interactive11) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                tags (first: $first53, query: $query22) {\n                    nodes {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                comparison (base: $base4, head: $head4, fetchMissing: $fetchMissing4) {\n                    baseRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    headRepository {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    range {\n                        expr\n                        base {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                        head {\n                            ... on GitRef {\n                                id\n                                name\n                                abbrevName\n                                displayName\n                                prefix\n                                type\n                                url\n                            }\n                            ... on GitRevSpecExpr {\n                                expr\n                            }\n                            ... on GitObject {\n                                oid\n                                abbreviatedOID\n                                type\n                            }\n                        }\n                    }\n                    commits (first: $first54) {\n                        totalCount\n                    }\n                    fileDiffs (first: $first55, after: $after14) {\n                        totalCount\n                        rawDiff\n                    }\n                }\n                contributors (revisionRange: $revisionRange5, after: $after15, path: $path25, first: $first56) {\n                    nodes {\n                        count\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                viewerCanAdminister\n                label {\n                    text\n                    html\n                }\n                detail {\n                    text\n                    html\n                }\n                matches {\n                    url\n                    body {\n                        text\n                        html\n                    }\n                    highlights {\n                        line\n                        character\n                        length\n                    }\n                }\n                codeIntelligenceCommitGraph {\n                    stale\n                    updatedAt\n                }\n                stars\n            }\n            ... on File {\n                path\n                name\n                isDirectory\n                url\n                repository {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev6, inputRevspec: $inputRevspec6) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first57) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first58, query: $query23, type: $type6, orderBy: $orderBy12, interactive: $interactive12) {\n                        totalCount\n                    }\n                    branches (first: $first59, query: $query24, orderBy: $orderBy13, interactive: $interactive13) {\n                        totalCount\n                    }\n                    tags (first: $first60, query: $query25) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange6, after: $after16, path: $path26, first: $first61) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            ... on Symbol {\n                name\n                containerName\n                kind\n                language\n                location {\n                    resource {\n                        path\n                        name\n                        isDirectory\n                        content\n                        byteSize\n                        binary\n                        richHTML\n                        url\n                        canonicalURL\n                        isSingleChild (first: $first62, recursive: $recursive16, recursiveSingleChild: $recursiveSingleChild11)\n                    }\n                    url\n                    canonicalURL\n                }\n                url\n                canonicalURL\n                fileLocal\n            }\n            ... on Language {\n                name\n            }\n        }\n        stats {\n            approximateResultCount\n            sparkline\n            languages {\n                name\n                totalBytes\n                totalLines\n            }\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"recursive\": true,\n  \"recursiveSingleChild\": true,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"query\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first3\": 0,\n  \"query1\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first4\": 0,\n  \"query2\": \"\",\n  \"revisionRange\": \"\",\n  \"after\": \"\",\n  \"path\": \"\",\n  \"first5\": 0,\n  \"first6\": 0,\n  \"recursive1\": true,\n  \"recursiveSingleChild1\": true,\n  \"path1\": \"\",\n  \"recursive2\": true,\n  \"first7\": 0,\n  \"recursive3\": true,\n  \"recursiveSingleChild2\": true,\n  \"path2\": \"\",\n  \"path3\": \"\",\n  \"first8\": 0,\n  \"query3\": \"\",\n  \"path4\": \"\",\n  \"after1\": \"\",\n  \"revspec\": \"\",\n  \"rev1\": \"\",\n  \"inputRevspec1\": \"\",\n  \"first9\": 0,\n  \"first10\": 0,\n  \"query4\": \"\",\n  \"type1\": \"\",\n  \"orderBy2\": \"\",\n  \"interactive2\": true,\n  \"first11\": 0,\n  \"query5\": \"\",\n  \"orderBy3\": \"\",\n  \"interactive3\": true,\n  \"first12\": 0,\n  \"query6\": \"\",\n  \"first13\": 0,\n  \"first14\": 0,\n  \"after2\": \"\",\n  \"base\": \"\",\n  \"head\": \"\",\n  \"fetchMissing\": true,\n  \"revisionRange1\": \"\",\n  \"after3\": \"\",\n  \"path5\": \"\",\n  \"first15\": 0,\n  \"first16\": 0,\n  \"recursive4\": true,\n  \"recursiveSingleChild3\": true,\n  \"path6\": \"\",\n  \"recursive5\": true,\n  \"first17\": 0,\n  \"recursive6\": true,\n  \"recursiveSingleChild4\": true,\n  \"path7\": \"\",\n  \"path8\": \"\",\n  \"first18\": 0,\n  \"query7\": \"\",\n  \"path9\": \"\",\n  \"after4\": \"\",\n  \"revspec1\": \"\",\n  \"rev2\": \"\",\n  \"inputRevspec2\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"query8\": \"\",\n  \"type2\": \"\",\n  \"orderBy4\": \"\",\n  \"interactive4\": true,\n  \"first21\": 0,\n  \"query9\": \"\",\n  \"orderBy5\": \"\",\n  \"interactive5\": true,\n  \"first22\": 0,\n  \"query10\": \"\",\n  \"first23\": 0,\n  \"first24\": 0,\n  \"after5\": \"\",\n  \"base1\": \"\",\n  \"head1\": \"\",\n  \"fetchMissing1\": true,\n  \"revisionRange2\": \"\",\n  \"after6\": \"\",\n  \"path10\": \"\",\n  \"first25\": 0,\n  \"first26\": 0,\n  \"recursive7\": true,\n  \"recursiveSingleChild5\": true,\n  \"path11\": \"\",\n  \"recursive8\": true,\n  \"first27\": 0,\n  \"recursive9\": true,\n  \"recursiveSingleChild6\": true,\n  \"path12\": \"\",\n  \"path13\": \"\",\n  \"first28\": 0,\n  \"query11\": \"\",\n  \"path14\": \"\",\n  \"after7\": \"\",\n  \"revspec2\": \"\",\n  \"rev3\": \"\",\n  \"inputRevspec3\": \"\",\n  \"first29\": 0,\n  \"first30\": 0,\n  \"query12\": \"\",\n  \"type3\": \"\",\n  \"orderBy6\": \"\",\n  \"interactive6\": true,\n  \"first31\": 0,\n  \"query13\": \"\",\n  \"orderBy7\": \"\",\n  \"interactive7\": true,\n  \"first32\": 0,\n  \"query14\": \"\",\n  \"first33\": 0,\n  \"first34\": 0,\n  \"after8\": \"\",\n  \"base2\": \"\",\n  \"head2\": \"\",\n  \"fetchMissing2\": true,\n  \"revisionRange3\": \"\",\n  \"after9\": \"\",\n  \"path15\": \"\",\n  \"first35\": 0,\n  \"first36\": 0,\n  \"recursive10\": true,\n  \"recursiveSingleChild7\": true,\n  \"path16\": \"\",\n  \"recursive11\": true,\n  \"first37\": 0,\n  \"recursive12\": true,\n  \"recursiveSingleChild8\": true,\n  \"path17\": \"\",\n  \"path18\": \"\",\n  \"first38\": 0,\n  \"query15\": \"\",\n  \"path19\": \"\",\n  \"after10\": \"\",\n  \"revspec3\": \"\",\n  \"rev4\": \"\",\n  \"inputRevspec4\": \"\",\n  \"first39\": 0,\n  \"first40\": 0,\n  \"query16\": \"\",\n  \"type4\": \"\",\n  \"orderBy8\": \"\",\n  \"interactive8\": true,\n  \"first41\": 0,\n  \"query17\": \"\",\n  \"orderBy9\": \"\",\n  \"interactive9\": true,\n  \"first42\": 0,\n  \"query18\": \"\",\n  \"first43\": 0,\n  \"first44\": 0,\n  \"after11\": \"\",\n  \"base3\": \"\",\n  \"head3\": \"\",\n  \"fetchMissing3\": true,\n  \"revisionRange4\": \"\",\n  \"after12\": \"\",\n  \"path20\": \"\",\n  \"first45\": 0,\n  \"first46\": 0,\n  \"first47\": 0,\n  \"recursive13\": true,\n  \"recursiveSingleChild9\": true,\n  \"path21\": \"\",\n  \"recursive14\": true,\n  \"first48\": 0,\n  \"recursive15\": true,\n  \"recursiveSingleChild10\": true,\n  \"path22\": \"\",\n  \"path23\": \"\",\n  \"first49\": 0,\n  \"query19\": \"\",\n  \"path24\": \"\",\n  \"after13\": \"\",\n  \"revspec4\": \"\",\n  \"rev5\": \"\",\n  \"inputRevspec5\": \"\",\n  \"first50\": 0,\n  \"first51\": 0,\n  \"query20\": \"\",\n  \"type5\": \"\",\n  \"orderBy10\": \"\",\n  \"interactive10\": true,\n  \"first52\": 0,\n  \"query21\": \"\",\n  \"orderBy11\": \"\",\n  \"interactive11\": true,\n  \"first53\": 0,\n  \"query22\": \"\",\n  \"first54\": 0,\n  \"first55\": 0,\n  \"after14\": \"\",\n  \"base4\": \"\",\n  \"head4\": \"\",\n  \"fetchMissing4\": true,\n  \"revisionRange5\": \"\",\n  \"after15\": \"\",\n  \"path25\": \"\",\n  \"first56\": 0,\n  \"rev6\": \"\",\n  \"inputRevspec6\": \"\",\n  \"first57\": 0,\n  \"first58\": 0,\n  \"query23\": \"\",\n  \"type6\": \"\",\n  \"orderBy12\": \"\",\n  \"interactive12\": true,\n  \"first59\": 0,\n  \"query24\": \"\",\n  \"orderBy13\": \"\",\n  \"interactive13\": true,\n  \"first60\": 0,\n  \"query25\": \"\",\n  \"revisionRange6\": \"\",\n  \"after16\": \"\",\n  \"path26\": \"\",\n  \"first61\": 0,\n  \"first62\": 0,\n  \"recursive16\": true,\n  \"recursiveSingleChild11\": true,\n  \"version\": \"\",\n  \"patternType\": \"\",\n  \"query26\": \"\",\n  \"versionContext\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "savedSearches",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query savedSearches {\n    savedSearches {\n        id\n        description\n        query\n        notify\n        notifySlack\n        namespace {\n            id\n            namespaceName\n            url\n        }\n        slackWebhookURL\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "repoGroups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query repoGroups {\n    repoGroups {\n        name\n        repositories\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "versionContexts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query versionContexts {\n    versionContexts {\n        name\n        description\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "parseSearchQuery",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query parseSearchQuery ($query: String, $patternType: SearchPatternType) {\n    parseSearchQuery (query: $query, patternType: $patternType)\n}",
								"variables": "{\n  \"query\": \"\",\n  \"patternType\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "site",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query site ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int, $eventName1: String, $first10: Int, $first11: Int, $precise1: Boolean, $first12: Int, $query4: String, $after2: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first13: Int, $eventName2: String, $first14: Int, $first15: Int, $precise2: Boolean, $first16: Int, $query5: String, $after3: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $first17: Int, $first18: Int, $eventName3: String, $first19: Int, $first20: Int, $precise3: Boolean, $first21: Int, $query6: String, $after4: String, $cloned3: Boolean, $notCloned3: Boolean, $indexed3: Boolean, $notIndexed3: Boolean, $externalServiceID3: ID, $first22: Int, $user: ID, $serviceType: String, $serviceID: String, $clientID: String, $days: Int, $weeks: Int, $months: Int, $days1: Int) {\n    site {\n        id\n        siteID\n        configuration {\n            id\n            effectiveContents\n            validationMessages\n        }\n        latestSettings {\n            id\n            subject {\n                id\n                latestSettings {\n                    id\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            author {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            createdAt\n            contents\n            configuration {\n                contents\n                messages\n            }\n        }\n        settingsCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            final\n            merged {\n                contents\n                messages\n            }\n        }\n        configurationCascade {\n            subjects {\n                id\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsURL\n                viewerCanAdminister\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n            }\n            merged {\n                contents\n                messages\n            }\n        }\n        settingsURL\n        canReloadSite\n        viewerCanAdminister\n        accessTokens (first: $first17) {\n            nodes {\n                id\n                subject {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first9, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first10) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first11) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first12, query: $query4, after: $after2, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                scopes\n                note\n                creator {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first13, eventName: $eventName2) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first14) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first15) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first16, query: $query5, after: $after3, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                        totalCount (precise: $precise2)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                createdAt\n                lastUsedAt\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        authProviders {\n            nodes {\n                serviceType\n                serviceID\n                clientID\n                displayName\n                isBuiltin\n                authenticationURL\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        externalAccounts (first: $first22, user: $user, serviceType: $serviceType, serviceID: $serviceID, clientID: $clientID) {\n            nodes {\n                id\n                user {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first18, eventName: $eventName3) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first19) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first20) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first21, query: $query6, after: $after4, cloned: $cloned3, notCloned: $notCloned3, indexed: $indexed3, notIndexed: $notIndexed3, externalServiceID: $externalServiceID3) {\n                        totalCount (precise: $precise3)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                serviceType\n                serviceID\n                clientID\n                accountID\n                createdAt\n                updatedAt\n                refreshURL\n                accountData\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        buildVersion\n        productVersion\n        updateCheck {\n            pending\n            checkedAt\n            errorMessage\n            updateVersionAvailable\n        }\n        needsRepositoryConfiguration\n        freeUsersExceeded\n        alerts {\n            type\n            message\n            isDismissibleWithKey\n        }\n        hasCodeIntelligence\n        disableBuiltInSearches\n        sendsEmailVerificationEmails\n        productSubscription {\n            productNameWithBrand\n            actualUserCount\n            actualUserCountDate\n            maximumAllowedUserCount\n            noLicenseWarningUserCount\n            license {\n                productNameWithBrand\n                tags\n                userCount\n                expiresAt\n            }\n        }\n        usageStatistics (days: $days, weeks: $weeks, months: $months) {\n            daus {\n                startTime\n                userCount\n                registeredUserCount\n                anonymousUserCount\n                integrationUserCount\n            }\n            waus {\n                startTime\n                userCount\n                registeredUserCount\n                anonymousUserCount\n                integrationUserCount\n            }\n            maus {\n                startTime\n                userCount\n                registeredUserCount\n                anonymousUserCount\n                integrationUserCount\n            }\n        }\n        monitoringStatistics (days: $days1) {\n            alerts {\n                timestamp\n                name\n                serviceName\n                owner\n                average\n            }\n        }\n        allowSiteSettingsEdits\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0,\n  \"eventName1\": \"\",\n  \"first10\": 0,\n  \"first11\": 0,\n  \"precise1\": true,\n  \"first12\": 0,\n  \"query4\": \"\",\n  \"after2\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first13\": 0,\n  \"eventName2\": \"\",\n  \"first14\": 0,\n  \"first15\": 0,\n  \"precise2\": true,\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"after3\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"first17\": 0,\n  \"first18\": 0,\n  \"eventName3\": \"\",\n  \"first19\": 0,\n  \"first20\": 0,\n  \"precise3\": true,\n  \"first21\": 0,\n  \"query6\": \"\",\n  \"after4\": \"\",\n  \"cloned3\": true,\n  \"notCloned3\": true,\n  \"indexed3\": true,\n  \"notIndexed3\": true,\n  \"externalServiceID3\": 0,\n  \"first22\": 0,\n  \"user\": 0,\n  \"serviceType\": \"\",\n  \"serviceID\": \"\",\n  \"clientID\": \"\",\n  \"days\": 0,\n  \"weeks\": 0,\n  \"months\": 0,\n  \"days1\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "surveyResponses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query surveyResponses ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $rev: String!, $inputRevspec: String, $first4: Int, $first5: Int, $query1: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first6: Int, $query2: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first7: Int, $query3: String, $revisionRange: String, $after1: String, $path: String, $first8: Int, $first9: Int) {\n    surveyResponses (first: $first9) {\n        nodes {\n            id\n            user {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first, eventName: $eventName) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first1) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first2) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first4) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first5, query: $query1, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first6, query: $query2, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first7, query: $query3) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after1, path: $path, first: $first8) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            email\n            score\n            reason\n            better\n            createdAt\n        }\n        totalCount\n        last30DaysCount\n        averageScore\n        netPromoterScore\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first4\": 0,\n  \"first5\": 0,\n  \"query1\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first6\": 0,\n  \"query2\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first7\": 0,\n  \"query3\": \"\",\n  \"revisionRange\": \"\",\n  \"after1\": \"\",\n  \"path\": \"\",\n  \"first8\": 0,\n  \"first9\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "extensionRegistry",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query extensionRegistry ($first: Int, $eventName: String, $first1: Int, $first2: Int, $precise: Boolean, $first3: Int, $query: String, $after: String, $cloned: Boolean, $notCloned: Boolean, $indexed: Boolean, $notIndexed: Boolean, $externalServiceID: ID, $fields: [String!]!, $extensionID: String!, $fields1: [String!]!, $first4: Int, $publisher: ID, $query1: String, $local: Boolean, $remote: Boolean, $extensionIDs: [String!], $prioritizeExtensionIDs: [String!], $first5: Int, $eventName1: String, $first6: Int, $first7: Int, $precise1: Boolean, $first8: Int, $query2: String, $after1: String, $cloned1: Boolean, $notCloned1: Boolean, $indexed1: Boolean, $notIndexed1: Boolean, $externalServiceID1: ID, $first9: Int, $first10: Int, $eventName2: String, $first11: Int, $first12: Int, $precise2: Boolean, $first13: Int, $query3: String, $after2: String, $cloned2: Boolean, $notCloned2: Boolean, $indexed2: Boolean, $notIndexed2: Boolean, $externalServiceID2: ID, $rev: String!, $inputRevspec: String, $first14: Int, $first15: Int, $query4: String, $type: GitRefType, $orderBy: GitRefOrder, $interactive: Boolean, $first16: Int, $query5: String, $orderBy1: GitRefOrder, $interactive1: Boolean, $first17: Int, $query6: String, $revisionRange: String, $after3: String, $path: String, $first18: Int, $fields2: [String!]!) {\n    extensionRegistry {\n        extension (extensionID: $extensionID) {\n            id\n            uuid\n            publisher {\n                ... on User {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first, eventName: $eventName) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first1) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first2) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first3, query: $query, after: $after, cloned: $cloned, notCloned: $notCloned, indexed: $indexed, notIndexed: $notIndexed, externalServiceID: $externalServiceID) {\n                        totalCount (precise: $precise)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                ... on Org {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n            }\n            extensionID\n            extensionIDWithoutRegistry\n            name\n            manifest {\n                raw\n                jsonFields (fields: $fields)\n                description\n                bundleURL\n            }\n            createdAt\n            updatedAt\n            publishedAt\n            url\n            remoteURL\n            registryName\n            isLocal\n            isWorkInProgress\n            viewerCanAdminister\n        }\n        extensions (first: $first4, publisher: $publisher, query: $query1, local: $local, remote: $remote, extensionIDs: $extensionIDs, prioritizeExtensionIDs: $prioritizeExtensionIDs) {\n            nodes {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields1)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n            url\n            error\n        }\n        publishers (first: $first9) {\n            nodes {\n                ... on User {\n                    id\n                    username\n                    email\n                    displayName\n                    avatarURL\n                    url\n                    settingsURL\n                    createdAt\n                    updatedAt\n                    siteAdmin\n                    builtinAuth\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    organizations {\n                        totalCount\n                    }\n                    organizationMemberships {\n                        totalCount\n                    }\n                    tags\n                    usageStatistics {\n                        searchQueries\n                        pageViews\n                        codeIntelligenceActions\n                        findReferencesActions\n                        lastActiveTime\n                        lastActiveCodeHostIntegrationTime\n                    }\n                    eventLogs (first: $first5, eventName: $eventName1) {\n                        totalCount\n                    }\n                    emails {\n                        email\n                        isPrimary\n                        verified\n                        verificationPending\n                        viewerCanManuallyVerify\n                    }\n                    accessTokens (first: $first6) {\n                        totalCount\n                    }\n                    externalAccounts (first: $first7) {\n                        totalCount\n                    }\n                    session {\n                        canSignOut\n                    }\n                    viewerCanAdminister\n                    viewerCanChangeUsername\n                    surveyResponses {\n                        id\n                        email\n                        score\n                        reason\n                        better\n                        createdAt\n                    }\n                    databaseID\n                    namespaceName\n                    repositories (first: $first8, query: $query2, after: $after1, cloned: $cloned1, notCloned: $notCloned1, indexed: $indexed1, notIndexed: $notIndexed1, externalServiceID: $externalServiceID1) {\n                        totalCount (precise: $precise1)\n                    }\n                    publicRepositories {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                }\n                ... on Org {\n                    id\n                    name\n                    displayName\n                    createdAt\n                    members {\n                        totalCount\n                    }\n                    latestSettings {\n                        id\n                        createdAt\n                        contents\n                    }\n                    settingsCascade {\n                        final\n                    }\n                    viewerPendingInvitation {\n                        id\n                        createdAt\n                        notifiedAt\n                        respondedAt\n                        responseType\n                        respondURL\n                        revokedAt\n                    }\n                    viewerCanAdminister\n                    viewerIsMember\n                    url\n                    settingsURL\n                    namespaceName\n                }\n            }\n            totalCount\n            pageInfo {\n                endCursor\n                hasNextPage\n            }\n        }\n        viewerPublishers {\n            ... on User {\n                id\n                username\n                email\n                displayName\n                avatarURL\n                url\n                settingsURL\n                createdAt\n                updatedAt\n                siteAdmin\n                builtinAuth\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                organizations {\n                    nodes {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    totalCount\n                }\n                organizationMemberships {\n                    nodes {\n                        createdAt\n                        updatedAt\n                    }\n                    totalCount\n                }\n                tags\n                usageStatistics {\n                    searchQueries\n                    pageViews\n                    codeIntelligenceActions\n                    findReferencesActions\n                    lastActiveTime\n                    lastActiveCodeHostIntegrationTime\n                }\n                eventLogs (first: $first10, eventName: $eventName2) {\n                    nodes {\n                        name\n                        anonymousUserID\n                        url\n                        source\n                        argument\n                        version\n                        timestamp\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                emails {\n                    email\n                    isPrimary\n                    verified\n                    verificationPending\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    viewerCanManuallyVerify\n                }\n                accessTokens (first: $first11) {\n                    nodes {\n                        id\n                        scopes\n                        note\n                        createdAt\n                        lastUsedAt\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                externalAccounts (first: $first12) {\n                    nodes {\n                        id\n                        serviceType\n                        serviceID\n                        clientID\n                        accountID\n                        createdAt\n                        updatedAt\n                        refreshURL\n                        accountData\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                session {\n                    canSignOut\n                }\n                viewerCanAdminister\n                viewerCanChangeUsername\n                surveyResponses {\n                    id\n                    user {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    email\n                    score\n                    reason\n                    better\n                    createdAt\n                }\n                databaseID\n                namespaceName\n                repositories (first: $first13, query: $query3, after: $after2, cloned: $cloned2, notCloned: $notCloned2, indexed: $indexed2, notIndexed: $notIndexed2, externalServiceID: $externalServiceID2) {\n                    nodes {\n                        id\n                        name\n                        uri\n                        description\n                        language\n                        createdAt\n                        updatedAt\n                        isFork\n                        isArchived\n                        isPrivate\n                        cloneInProgress\n                        url\n                        viewerCanAdminister\n                        stars\n                    }\n                    totalCount (precise: $precise2)\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                publicRepositories {\n                    id\n                    name\n                    uri\n                    description\n                    language\n                    createdAt\n                    updatedAt\n                    commit (rev: $rev, inputRevspec: $inputRevspec) {\n                        id\n                        oid\n                        abbreviatedOID\n                        message\n                        subject\n                        body\n                        url\n                        canonicalURL\n                        fileNames\n                        languages\n                    }\n                    mirrorInfo {\n                        remoteURL\n                        cloneInProgress\n                        cloneProgress\n                        cloned\n                        updatedAt\n                    }\n                    externalRepository {\n                        id\n                        serviceType\n                        serviceID\n                    }\n                    isFork\n                    isArchived\n                    isPrivate\n                    externalServices (first: $first14) {\n                        totalCount\n                    }\n                    cloneInProgress\n                    url\n                    externalURLs {\n                        url\n                        serviceKind\n                        serviceType\n                    }\n                    defaultBranch {\n                        id\n                        name\n                        abbrevName\n                        displayName\n                        prefix\n                        type\n                        url\n                    }\n                    gitRefs (first: $first15, query: $query4, type: $type, orderBy: $orderBy, interactive: $interactive) {\n                        totalCount\n                    }\n                    branches (first: $first16, query: $query5, orderBy: $orderBy1, interactive: $interactive1) {\n                        totalCount\n                    }\n                    tags (first: $first17, query: $query6) {\n                        totalCount\n                    }\n                    contributors (revisionRange: $revisionRange, after: $after3, path: $path, first: $first18) {\n                        totalCount\n                    }\n                    viewerCanAdminister\n                    label {\n                        text\n                        html\n                    }\n                    detail {\n                        text\n                        html\n                    }\n                    matches {\n                        url\n                    }\n                    codeIntelligenceCommitGraph {\n                        stale\n                        updatedAt\n                    }\n                    stars\n                }\n            }\n            ... on Org {\n                id\n                name\n                displayName\n                createdAt\n                members {\n                    nodes {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    totalCount\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                    }\n                }\n                latestSettings {\n                    id\n                    subject {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    author {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    contents\n                    configuration {\n                        contents\n                        messages\n                    }\n                }\n                settingsCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    final\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                configurationCascade {\n                    subjects {\n                        id\n                        settingsURL\n                        viewerCanAdminister\n                    }\n                    merged {\n                        contents\n                        messages\n                    }\n                }\n                viewerPendingInvitation {\n                    id\n                    organization {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                    sender {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    recipient {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    createdAt\n                    notifiedAt\n                    respondedAt\n                    responseType\n                    respondURL\n                    revokedAt\n                }\n                viewerCanAdminister\n                viewerIsMember\n                url\n                settingsURL\n                namespaceName\n            }\n        }\n        localExtensionIDPrefix\n        featuredExtensions {\n            nodes {\n                id\n                uuid\n                publisher {\n                    ... on User {\n                        id\n                        username\n                        email\n                        displayName\n                        avatarURL\n                        url\n                        settingsURL\n                        createdAt\n                        updatedAt\n                        siteAdmin\n                        builtinAuth\n                        tags\n                        viewerCanAdminister\n                        viewerCanChangeUsername\n                        databaseID\n                        namespaceName\n                    }\n                    ... on Org {\n                        id\n                        name\n                        displayName\n                        createdAt\n                        viewerCanAdminister\n                        viewerIsMember\n                        url\n                        settingsURL\n                        namespaceName\n                    }\n                }\n                extensionID\n                extensionIDWithoutRegistry\n                name\n                manifest {\n                    raw\n                    jsonFields (fields: $fields2)\n                    description\n                    bundleURL\n                }\n                createdAt\n                updatedAt\n                publishedAt\n                url\n                remoteURL\n                registryName\n                isLocal\n                isWorkInProgress\n                viewerCanAdminister\n            }\n            error\n        }\n    }\n}",
								"variables": "{\n  \"first\": 0,\n  \"eventName\": \"\",\n  \"first1\": 0,\n  \"first2\": 0,\n  \"precise\": true,\n  \"first3\": 0,\n  \"query\": \"\",\n  \"after\": \"\",\n  \"cloned\": true,\n  \"notCloned\": true,\n  \"indexed\": true,\n  \"notIndexed\": true,\n  \"externalServiceID\": 0,\n  \"fields\": [\n    \"\"\n  ],\n  \"extensionID\": \"\",\n  \"fields1\": [\n    \"\"\n  ],\n  \"first4\": 0,\n  \"publisher\": 0,\n  \"query1\": \"\",\n  \"local\": true,\n  \"remote\": true,\n  \"extensionIDs\": [\n    \"\"\n  ],\n  \"prioritizeExtensionIDs\": [\n    \"\"\n  ],\n  \"first5\": 0,\n  \"eventName1\": \"\",\n  \"first6\": 0,\n  \"first7\": 0,\n  \"precise1\": true,\n  \"first8\": 0,\n  \"query2\": \"\",\n  \"after1\": \"\",\n  \"cloned1\": true,\n  \"notCloned1\": true,\n  \"indexed1\": true,\n  \"notIndexed1\": true,\n  \"externalServiceID1\": 0,\n  \"first9\": 0,\n  \"first10\": 0,\n  \"eventName2\": \"\",\n  \"first11\": 0,\n  \"first12\": 0,\n  \"precise2\": true,\n  \"first13\": 0,\n  \"query3\": \"\",\n  \"after2\": \"\",\n  \"cloned2\": true,\n  \"notCloned2\": true,\n  \"indexed2\": true,\n  \"notIndexed2\": true,\n  \"externalServiceID2\": 0,\n  \"rev\": \"\",\n  \"inputRevspec\": \"\",\n  \"first14\": 0,\n  \"first15\": 0,\n  \"query4\": \"\",\n  \"type\": \"\",\n  \"orderBy\": \"\",\n  \"interactive\": true,\n  \"first16\": 0,\n  \"query5\": \"\",\n  \"orderBy1\": \"\",\n  \"interactive1\": true,\n  \"first17\": 0,\n  \"query6\": \"\",\n  \"revisionRange\": \"\",\n  \"after3\": \"\",\n  \"path\": \"\",\n  \"first18\": 0,\n  \"fields2\": [\n    \"\"\n  ]\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "statusMessages",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query statusMessages {\n    statusMessages {\n        ... on CloningProgress {\n            message\n        }\n        ... on IndexingProgress {\n            message\n        }\n        ... on ExternalServiceSyncError {\n            message\n            externalService {\n                id\n                kind\n                displayName\n                config\n                createdAt\n                updatedAt\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                repoCount\n                webhookURL\n                warning\n                lastSyncError\n                lastSyncAt\n                nextSyncAt\n                grantedScopes\n            }\n        }\n        ... on SyncError {\n            message\n        }\n        ... on IndexingError {\n            message\n        }\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositoryStats",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query repositoryStats {\n    repositoryStats {\n        gitDirBytes\n        indexedLinesCount\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "namespace",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query namespace ($id: ID!) {\n    namespace (id: $id) {\n        id\n        namespaceName\n        url\n    }\n}",
								"variables": "{\n  \"id\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "namespaceByName",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query namespaceByName ($name: String!) {\n    namespaceByName (name: $name) {\n        id\n        namespaceName\n        url\n    }\n}",
								"variables": "{\n  \"name\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "affiliatedRepositories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query affiliatedRepositories ($user: ID!, $codeHost: ID, $query: String) {\n    affiliatedRepositories (user: $user, codeHost: $codeHost, query: $query) {\n        nodes {\n            name\n            codeHost {\n                id\n                kind\n                displayName\n                config\n                createdAt\n                updatedAt\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                repoCount\n                webhookURL\n                warning\n                lastSyncError\n                lastSyncAt\n                nextSyncAt\n                grantedScopes\n            }\n            private\n        }\n    }\n}",
								"variables": "{\n  \"user\": 0,\n  \"codeHost\": 0,\n  \"query\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "codeHostSyncDue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query codeHostSyncDue ($ids: [ID!]!, $seconds: Int!) {\n    codeHostSyncDue (ids: $ids, seconds: $seconds)\n}",
								"variables": "{\n  \"ids\": [\n    0\n  ],\n  \"seconds\": 0\n}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "outOfBandMigrations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query outOfBandMigrations {\n    outOfBandMigrations {\n        id\n        team\n        component\n        description\n        introduced\n        deprecated\n        progress\n        created\n        lastUpdated\n        nonDestructive\n        applyReverse\n        errors {\n            message\n            created\n        }\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "featureFlags",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query featureFlags {\n    featureFlags {\n        ... on FeatureFlagBoolean {\n            name\n            value\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n        ... on FeatureFlagRollout {\n            name\n            rolloutBasisPoints\n            overrides {\n                id\n                namespace {\n                    id\n                    namespaceName\n                    url\n                }\n                targetFlag {\n                    ... on FeatureFlagBoolean {\n                        name\n                        value\n                    }\n                    ... on FeatureFlagRollout {\n                        name\n                        rolloutBasisPoints\n                    }\n                }\n                value\n            }\n        }\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "viewerFeatureFlags",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query viewerFeatureFlags {\n    viewerFeatureFlags {\n        name\n        value\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "temporarySettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query temporarySettings {\n    temporarySettings {\n        contents\n    }\n}",
								"variables": "{}"
							}
						},
						"url": {
							"raw": "{{sourcegraph-url}}{{sourcegraph-api-path}}",
							"host": [
								"{{sourcegraph-url}}{{sourcegraph-api-path}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "token {{sourcegraph-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": ""
		},
		{
			"key": "sourcegraph-token",
			"value": ""
		},
		{
			"key": "sourcegraph-api-path",
			"value": "/.api/graphql"
		}
	]
}
